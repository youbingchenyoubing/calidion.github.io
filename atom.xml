<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>北漂IT民工</title>
  <subtitle>的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.3gcnbeta.com/"/>
  <updated>2016-05-02T11:01:02.228Z</updated>
  <id>http://blog.3gcnbeta.com/</id>
  
  <author>
    <name>北漂IT民工</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MVC及其递归性和MVC变种</title>
    <link href="http://blog.3gcnbeta.com/2016/05/02/MVC%E5%8F%8A%E5%85%B6%E9%80%92%E5%BD%92%E6%80%A7%E5%92%8CMVC%E5%8F%98%E7%A7%8D/"/>
    <id>http://blog.3gcnbeta.com/2016/05/02/MVC及其递归性和MVC变种/</id>
    <published>2016-05-02T10:59:00.000Z</published>
    <updated>2016-05-02T11:01:02.228Z</updated>
    
    <content type="html">&lt;p&gt;MVC是一种很古老的软件架构模式。这种模式对于计算机刚出来时是一种比较完备或者比较适用的描述。&lt;/p&gt;
&lt;p&gt;但是随着时间的流逝，软件变得越来越复杂，MVC这种结构就会看上去显得不准确。但是我们只要能基于巨人的肩膀跳出来看问题，我们就能更好的理解MVC结构的价值。&lt;/p&gt;
&lt;h3 id=&quot;首先我们来看看什么是MVC。&quot;&gt;&lt;a href=&quot;#首先我们来看看什么是MVC。&quot; class=&quot;headerlink&quot; title=&quot;首先我们来看看什么是MVC。&quot;&gt;&lt;/a&gt;首先我们来看看什么是MVC。&lt;/h3&gt;&lt;p&gt;简单来说&lt;/p&gt;
&lt;p&gt;M：就是模型，英文原文是Model。&lt;br&gt;他的意思就是对基本业务单元的抽象。但是这种业务更多是指对可存储的数据模型的抽象。&lt;br&gt;C：就是控制，英文原文是Controller。&lt;br&gt;他的意思就是对基本业务处理的抽象。但是更多的偏向于非存储的业务模型的抽象&lt;br&gt;V：就是视图，英文原文是View。&lt;br&gt;他的意思就是对于人机界面交互处理的抽象。但是更多的是偏向于如何展示的人类可见的界面。&lt;/p&gt;
&lt;p&gt;M，V，C三者是对计算机系统或者软件最简单的抽象，而实际的计算机系统或者软件往往是对这三块的丰富，所以本质是要比MVC复杂的。&lt;/p&gt;
&lt;p&gt;所以我们在这里再深入的讨论MVC模型下面的子模型。&lt;/p&gt;
&lt;h3 id=&quot;首先是M这个部分。&quot;&gt;&lt;a href=&quot;#首先是M这个部分。&quot; class=&quot;headerlink&quot; title=&quot;首先是M这个部分。&quot;&gt;&lt;/a&gt;首先是M这个部分。&lt;/h3&gt;&lt;p&gt;M作为数据部分，&lt;br&gt;我们可以想象的到的实物产品有：&lt;br&gt;1.磁盘或者存储盘（包括光盘，U盘，硬盘，存储阵列等）&lt;br&gt;2.内存&lt;br&gt;3.网络（包括有线，无线的数据传输介质）&lt;br&gt;我们可以想象到的软件产品有：&lt;br&gt;1.数据库(Mongodb, Mysql, Oracle等）&lt;br&gt;2.文件&lt;br&gt;3.管道&lt;br&gt;4.共享数据&lt;br&gt;5.缓存等(CPU缓存，Session缓存，加速缓存等)&lt;br&gt;所以我们可以看出来M这个概念本身就是非常广泛的。我们列出来的都是概念上的M，而在实现M的过程中，必然会同样涉及到M里的MVC。&lt;br&gt;比如我们的Msql数据库，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先Mysql必然有文件作为存储媒体保存数据库的信息，我们可以将文件当成是Mysql的M&lt;/li&gt;
&lt;li&gt;同时Mysql具备自己的SQL语言，可以将对SQL语言的解析当成是C&lt;/li&gt;
&lt;li&gt;而Mysql是有命令行的操作界面的，这个界面可以称为V。当然Mysql也推出了基于图形的界面工具Mysql workbench，还有一些其它的图形工具比如navicat之类的，都可以称为Mysql产品的View端&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以我们可以看到在一个M产品里，仍有一个完整的MVC链&lt;/p&gt;
&lt;h3 id=&quot;然后我们再看看V这个部分&quot;&gt;&lt;a href=&quot;#然后我们再看看V这个部分&quot; class=&quot;headerlink&quot; title=&quot;然后我们再看看V这个部分&quot;&gt;&lt;/a&gt;然后我们再看看V这个部分&lt;/h3&gt;&lt;p&gt;软件领域的V我们大概可以看到以下三类V&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;手机端的V&lt;/li&gt;
&lt;li&gt;桌面端的V&lt;/li&gt;
&lt;li&gt;Web的V&lt;br&gt;那么这么View里一般会包含有&lt;/li&gt;
&lt;li&gt;视窗( window)&lt;/li&gt;
&lt;li&gt;菜单&lt;/li&gt;
&lt;li&gt;按钮&lt;/li&gt;
&lt;li&gt;进度条&lt;/li&gt;
&lt;li&gt;文本框&lt;br&gt;…&lt;br&gt;等等&lt;br&gt;我们可以看到大部分的菜单，按钮，都是包括&lt;/li&gt;
&lt;li&gt;文字（M）&lt;/li&gt;
&lt;li&gt;控件能力（C）&lt;/li&gt;
&lt;li&gt;外观设计（V）&lt;br&gt;这三个部分的。&lt;br&gt;那么从MVC的角度来看，这三者组成了一个完整的MVC。&lt;br&gt;所以V也是递归的MVC结构&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;最后我们看看C的部分&quot;&gt;&lt;a href=&quot;#最后我们看看C的部分&quot; class=&quot;headerlink&quot; title=&quot;最后我们看看C的部分&quot;&gt;&lt;/a&gt;最后我们看看C的部分&lt;/h3&gt;&lt;p&gt;C的部分相对来讲更加的广泛一点。因为C的部分除了通用的部分外，还有很多专用的内容。&lt;br&gt;所有的软件从本质来讲都是C。&lt;br&gt;也就是所有的软件都是为了达成某一种控制目标而存在的。&lt;br&gt;C就是控制器，我们可以想象到的最常见的物理上的控制器就是CPU，键盘，鼠标。&lt;br&gt;而软件上最常见的就是协议，指令，信号，业务逻辑等。&lt;br&gt;他的作用是让我们的所有信号按照预定的方式执行。&lt;br&gt;那么C部分有没有MVC的递归性呢？C部分的MVC递归性看上去要显的弱很多。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先我们可以看到的是C部分所处理的所有内容都是数据，我们可以将他看成是M。&lt;/li&gt;
&lt;li&gt;C部分天然拥有很多的控制代码与业务处理，将他们理解成C也是没有任何问题的&lt;br&gt;3.那么View在MVC的C里有没有呢？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果单纯从可视化来讲，C是可以没有V的。&lt;br&gt;但是C的View是可以表现在接口上的，也就是通常我们理解的API或者SOAP等。&lt;br&gt;这是一个机器的View。人类理解它们会有文档，会有对这个接口的描述。 &lt;/p&gt;
&lt;p&gt;但是C里也是可以有可视的V的。目前来讲大部分的运行监控都是针对C的处理能力的监控。&lt;br&gt;比如处理了多少的用户，调用了多少次API，使用了多少的内存，完成了多少次请求等等。&lt;/p&gt;
&lt;p&gt;因些我们可以发现，除了我们在C部分遇到了一点点困难外，我们很轻松的将MVC递归的拆分成功了。&lt;/p&gt;
&lt;p&gt;并且当我们将MVC的递归性应用到更多的领域时，我们就很容易理解真正的MVC的意义是什么。&lt;/p&gt;
&lt;p&gt;比如在Web领域。&lt;br&gt;后端可以更加明确成一个MVC的变种： RRRMVC&lt;br&gt;RRR =&amp;gt; (Request Route Response)&lt;/p&gt;
&lt;p&gt;目前Web Component就是一个MVC组件，将MVC全部包装在一起然后供上层MVC调用。&lt;/p&gt;
&lt;p&gt;还有一种是MVVM变种：&lt;br&gt;将V与M通过C绑定，让其它的C独立出来不再做绑定的工作。&lt;/p&gt;
&lt;h3 id=&quot;结论&quot;&gt;&lt;a href=&quot;#结论&quot; class=&quot;headerlink&quot; title=&quot;结论&quot;&gt;&lt;/a&gt;结论&lt;/h3&gt;&lt;p&gt;MVC是一种对基本的计算模型的抽象，他会随着时间的变化而变化，但是当你回到最小数据集去描述一个程序或者软件时，MVC还是最适用的一个模型，我们去理解MVC时，不应该直接去否定MVC的价值，而是找到MVC的本质，理解新的变种与MVC本身之间的关系，这样我们才能更要的利用MVC模型，达成我们自己的需要。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;MVC是一种很古老的软件架构模式。这种模式对于计算机刚出来时是一种比较完备或者比较适用的描述。&lt;/p&gt;
&lt;p&gt;但是随着时间的流逝，软件变得越来越复杂，MVC这种结构就会看上去显得不准确。但是我们只要能基于巨人的肩膀跳出来看问题，我们就能更好的理解MVC结构的价值。&lt;/p&gt;

    
    </summary>
    
      <category term="软件工程" scheme="http://blog.3gcnbeta.com/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="MVC" scheme="http://blog.3gcnbeta.com/tags/MVC/"/>
    
      <category term="递归性" scheme="http://blog.3gcnbeta.com/tags/%E9%80%92%E5%BD%92%E6%80%A7/"/>
    
      <category term="变种" scheme="http://blog.3gcnbeta.com/tags/%E5%8F%98%E7%A7%8D/"/>
    
  </entry>
  
  <entry>
    <title>npm自建服务器</title>
    <link href="http://blog.3gcnbeta.com/2016/04/28/%E8%BD%BB%E6%9D%BE%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84npm%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://blog.3gcnbeta.com/2016/04/28/轻松搭建自己的npm服务器/</id>
    <published>2016-04-28T00:54:00.000Z</published>
    <updated>2016-04-28T05:17:50.191Z</updated>
    
    <content type="html">&lt;p&gt;nodejs开发给开发者带来的最大的好处是丰富多彩的各种npm包。我们经常会很高兴某个包已经被其他的开发者开发完成，并且质量也很高，我们直接拿过来用就可以了。这也是很多开发者喜欢nodejs的原因。即使是曾经包机制最完善的ruby语言，也会发展他已经远远落后于nodejs的npm了。&lt;/p&gt;
&lt;p&gt;除了上面讲到的开放包，npmjs.com也提供私有包管理方案，每个月只要交10几美元就可以轻松建立自己的私有npm库了。&lt;/p&gt;
&lt;p&gt;在了解了这么多npm的好处之后，其实我们发现还是有不太满意的地方。比如需要每月交钱，比如npmjs.com有时候会被GFW墙掉，速度非常慢。&lt;/p&gt;
&lt;p&gt;特别的，如果我们有私有的包，不想公开，也不想交钱，那么这个时候我们就可以通过自建私有的服务器来实现。&lt;/p&gt;
&lt;p&gt;实现的过程很简单，就是通过sinopia包搭建一个服务器。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rlidwka/sinopia&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sinopia&lt;/a&gt;项目地址：&lt;a href=&quot;https://github.com/rlidwka/sinopia&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/rlidwka/sinopia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装sinopia&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g sinopia&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动运行sinopia&lt;br&gt;可以默认启动&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sinopia &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;也可以指定IP与端口&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sinopia &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; 0.0.0.0:8080 &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;访问sinopia&lt;br&gt;浏览器打开： &lt;a href=&quot;http://localhost:4873/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4873/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加用户  &lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm adduser --registry http://localhost:4873/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;登录npm服务器  &lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm login --registry http://localhost:4873/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发布npm包  &lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm publish --registry http://localhost:4873/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载npm包&lt;br&gt;xxx是你发布的包名。  &lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install xxx --registry http://localhost:4873/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过以上几个命令你就可以在你的服务器上玩起来了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;nodejs开发给开发者带来的最大的好处是丰富多彩的各种npm包。我们经常会很高兴某个包已经被其他的开发者开发完成，并且质量也很高，我们直接拿过来用就可以了。这也是很多开发者喜欢nodejs的原因。即使是曾经包机制最完善的ruby语言，也会发展他已经远远落后于nodejs的
    
    </summary>
    
      <category term="nodejs" scheme="http://blog.3gcnbeta.com/categories/nodejs/"/>
    
      <category term="服务器" scheme="http://blog.3gcnbeta.com/categories/nodejs/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="nodejs" scheme="http://blog.3gcnbeta.com/tags/nodejs/"/>
    
      <category term="服务器" scheme="http://blog.3gcnbeta.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="npm" scheme="http://blog.3gcnbeta.com/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>Python vs Node.js</title>
    <link href="http://blog.3gcnbeta.com/2016/04/16/Python-vs-Node-js/"/>
    <id>http://blog.3gcnbeta.com/2016/04/16/Python-vs-Node-js/</id>
    <published>2016-04-16T13:04:00.000Z</published>
    <updated>2016-04-28T00:13:18.927Z</updated>
    
    <content type="html">&lt;p&gt;对于语言或者开发环境的比较总是让人乐此不彼的。我在这里呢通过数据比较Python与Nodejs，让更多的人可以更好的作出来自己的决策。从主观的角度来讲，我当然认为总体上Nodejs要优于Python。但是这种主观的东西必须要有相应的数据支持吧？所以我在这里尽量选择客观的数据来进行比较。&lt;/p&gt;
&lt;h3 id=&quot;首先是语言的创建时间与创始人&quot;&gt;&lt;a href=&quot;#首先是语言的创建时间与创始人&quot; class=&quot;headerlink&quot; title=&quot;首先是语言的创建时间与创始人&quot;&gt;&lt;/a&gt;首先是语言的创建时间与创始人&lt;/h3&gt;&lt;p&gt;Python: 1991, Guido van Rossum&lt;br&gt;Nodejs： 2009, Ryan Lienhart Dahl&lt;/p&gt;
&lt;p&gt;点评： Python25岁，Nodejs7岁&lt;/p&gt;
&lt;h3 id=&quot;软件包数量&quot;&gt;&lt;a href=&quot;#软件包数量&quot; class=&quot;headerlink&quot; title=&quot;软件包数量&quot;&gt;&lt;/a&gt;软件包数量&lt;/h3&gt;&lt;p&gt;Python: 78690&lt;br&gt;来源： &lt;a href=&quot;https://pypi.python.org/pypi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://pypi.python.org/pypi&lt;/a&gt;&lt;br&gt;Nodejs:  270,278&lt;br&gt;来源： &lt;a href=&quot;https://www.npmjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.npmjs.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;点评： 在很短的时间内, npm包数量远远超过了Python的pip，可见包的热度与影响度远高于Python.&lt;/p&gt;
&lt;h3 id=&quot;几个Benchmark的数据&quot;&gt;&lt;a href=&quot;#几个Benchmark的数据&quot; class=&quot;headerlink&quot; title=&quot;几个Benchmark的数据&quot;&gt;&lt;/a&gt;几个Benchmark的数据&lt;/h3&gt;&lt;p&gt;例子1： &lt;a href=&quot;http://szborows.blogspot.com/2016/03/mini-restjson-benchmark-python-351-vs.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://szborows.blogspot.com/2016/03/mini-restjson-benchmark-python-351-vs.html&lt;/a&gt;&lt;br&gt;结论： python/node/c++ = 1/2/4&lt;/p&gt;
&lt;p&gt;例子1：&lt;a href=&quot;http://blog.kgriffs.com/2012/11/13/python-vs-node-vs-pypy-benchmarks.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.kgriffs.com/2012/11/13/python-vs-node-vs-pypy-benchmarks.html&lt;/a&gt;&lt;br&gt;结论： python &amp;lt; node&lt;/p&gt;
&lt;p&gt;点评：虽然不能完全看Benchmark，但是数据是一个有力的武器。&lt;/p&gt;
&lt;h3 id=&quot;Web领域支持&quot;&gt;&lt;a href=&quot;#Web领域支持&quot; class=&quot;headerlink&quot; title=&quot;Web领域支持&quot;&gt;&lt;/a&gt;Web领域支持&lt;/h3&gt;&lt;h5 id=&quot;Web服务器&quot;&gt;&lt;a href=&quot;#Web服务器&quot; class=&quot;headerlink&quot; title=&quot;Web服务器&quot;&gt;&lt;/a&gt;Web服务器&lt;/h5&gt;&lt;p&gt;Python: Django, Twisted, Tornado等&lt;br&gt;Nodejs: express, sails, meteor, koa等&lt;/p&gt;
&lt;p&gt;点评：总体相关不大，但是nodejs的框架相对更加新一些，用户关注度更高一点。&lt;/p&gt;
&lt;h5 id=&quot;HTML模板&quot;&gt;&lt;a href=&quot;#HTML模板&quot; class=&quot;headerlink&quot; title=&quot;HTML模板&quot;&gt;&lt;/a&gt;HTML模板&lt;/h5&gt;&lt;p&gt;Python: Airspeed, jinja2等，&lt;br&gt;具体：&lt;a href=&quot;https://wiki.python.org/moin/Templating&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://wiki.python.org/moin/Templating&lt;/a&gt;&lt;br&gt;Nodejs: jade, ejs等&lt;br&gt;具体：&lt;a href=&quot;http://paularmstrong.github.io/node-templates/，这个表并不全面，JS的模板包括最新的react&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://paularmstrong.github.io/node-templates/，这个表并不全面，JS的模板包括最新的react&lt;/a&gt;, handlebars, mustache等很多。&lt;/p&gt;
&lt;p&gt;点评：总体相差不大。&lt;/p&gt;
&lt;h4 id=&quot;HTML提取，抓取&quot;&gt;&lt;a href=&quot;#HTML提取，抓取&quot; class=&quot;headerlink&quot; title=&quot;HTML提取，抓取&quot;&gt;&lt;/a&gt;HTML提取，抓取&lt;/h4&gt;&lt;p&gt;Python:  BeatifulSoup&lt;br&gt;Nodejs: Cheerio&lt;/p&gt;
&lt;p&gt;点评：Cheerio比BeatifulSoup操作DOM更加方便，特别是可以很方便的使用CSS选择器。&lt;/p&gt;
&lt;h3 id=&quot;移动端支持&quot;&gt;&lt;a href=&quot;#移动端支持&quot; class=&quot;headerlink&quot; title=&quot;移动端支持&quot;&gt;&lt;/a&gt;移动端支持&lt;/h3&gt;&lt;p&gt;Python: None&lt;br&gt;Nodejs: nativescript, react native, cordova/phonegap&lt;/p&gt;
&lt;p&gt;结论: Python完败&lt;/p&gt;
&lt;h3 id=&quot;前端工具链接支持&quot;&gt;&lt;a href=&quot;#前端工具链接支持&quot; class=&quot;headerlink&quot; title=&quot;前端工具链接支持&quot;&gt;&lt;/a&gt;前端工具链接支持&lt;/h3&gt;&lt;p&gt;Python: None&lt;br&gt;Nodejs: yo, grunt, gulp, webpack, requirejs, browserify, etc.&lt;/p&gt;
&lt;p&gt;结论：Python完败&lt;/p&gt;
&lt;h3 id=&quot;Linux-运维工具支持&quot;&gt;&lt;a href=&quot;#Linux-运维工具支持&quot; class=&quot;headerlink&quot; title=&quot;Linux/运维工具支持&quot;&gt;&lt;/a&gt;Linux/运维工具支持&lt;/h3&gt;&lt;p&gt;Python: 成熟&lt;br&gt;Nodejs: 不成熟&lt;/p&gt;
&lt;p&gt;结论：Python胜出，但是Nodejs在这个方面的潜力是相当的，未来在一些性能要求更高的地方，go/Node.js将会更多的取代Python，目前很多工具Ruby已经参与进来，但是Ruby目前的性能尚不太理想，未来的发展空间受限。&lt;/p&gt;
&lt;h3 id=&quot;桌面UI支持&quot;&gt;&lt;a href=&quot;#桌面UI支持&quot; class=&quot;headerlink&quot; title=&quot;桌面UI支持&quot;&gt;&lt;/a&gt;桌面UI支持&lt;/h3&gt;&lt;p&gt;Python: wxPython, Python-qt, TkInter&lt;br&gt;Nodejs: Electron.js, NW.js, APP.js, Node-qt&lt;/p&gt;
&lt;p&gt;结论：两者旗鼓相当，但是基于Electron的Atom与Visual Studio Code已经开始流行起来，未来Nodejs胜出的可能性更大。因为Electron的技术栈是基于Web的。而Web是最成熟的领域。&lt;/p&gt;
&lt;h3 id=&quot;Python转Node-js的理由&quot;&gt;&lt;a href=&quot;#Python转Node-js的理由&quot; class=&quot;headerlink&quot; title=&quot;Python转Node.js的理由&quot;&gt;&lt;/a&gt;Python转Node.js的理由&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://geekforbrains.com/post/why-im-switching-from-python-to-node-js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://geekforbrains.com/post/why-im-switching-from-python-to-node-js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.quora.com/What-are-the-benefits-of-developing-in-Node-js-versus-Python&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.quora.com/What-are-the-benefits-of-developing-in-Node-js-versus-Python&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;结论：越来越多的人意识到Nodejs的优势。&lt;/p&gt;
&lt;h3 id=&quot;Node-js转Python的理由&quot;&gt;&lt;a href=&quot;#Node-js转Python的理由&quot; class=&quot;headerlink&quot; title=&quot;Node.js转Python的理由&quot;&gt;&lt;/a&gt;Node.js转Python的理由&lt;/h3&gt;&lt;p&gt;暂时未搜索到&lt;/p&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;Python目前仍占有很重要的位置，但是除了在Linxu/运维领域中由于积累所造成的优势外，在其它领域的优势并不明显，特别是在Web领域会慢慢的让位于Node.js。在Web Assembly标准出来，并被实现之前，Nodejs将是最重要的编程语言或者开发环境。&lt;/p&gt;
&lt;p&gt;此文在主观上是认为Python不如Nodejs的，但是我尽量客观的使用数据。&lt;br&gt;任何东西都是可以比较的，只有比较才能分出来优势与劣势。但是选择是自由的，本文并不强制任何人从Python转到Nodejs.&lt;br&gt;欢迎基于数据的讨论与分析。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;对于语言或者开发环境的比较总是让人乐此不彼的。我在这里呢通过数据比较Python与Nodejs，让更多的人可以更好的作出来自己的决策。从主观的角度来讲，我当然认为总体上Nodejs要优于Python。但是这种主观的东西必须要有相应的数据支持吧？所以我在这里尽量选择客观的数据
    
    </summary>
    
      <category term="Python" scheme="http://blog.3gcnbeta.com/categories/Python/"/>
    
      <category term="Nodejs" scheme="http://blog.3gcnbeta.com/categories/Python/Nodejs/"/>
    
    
      <category term="Python" scheme="http://blog.3gcnbeta.com/tags/Python/"/>
    
      <category term="Nodejs" scheme="http://blog.3gcnbeta.com/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Cookie与Session之简单辨析</title>
    <link href="http://blog.3gcnbeta.com/2016/04/04/Cookie%E4%B8%8ESession%E4%B9%8B%E8%BE%A8%E6%9E%90/"/>
    <id>http://blog.3gcnbeta.com/2016/04/04/Cookie与Session之辨析/</id>
    <published>2016-04-04T09:28:00.000Z</published>
    <updated>2016-04-28T00:13:18.927Z</updated>
    
    <content type="html">&lt;p&gt;Cookie与Session是所有Web开发中最基本的概念，是用户认识用户验证最基本的手段。自从RESTful的概念提出来之后，不断有人提出削弱Cookie与Session进行身份认识的作用。尽管如此，Cookie与Session仍作为最基础的身份认识手段而被广泛的应用。&lt;/p&gt;
&lt;p&gt;所以在我们的Web开发中，Cookie与Session的区分是非常重要的。&lt;/p&gt;
&lt;h3 id=&quot;Cookie与Session目标接近，服务对象不同&quot;&gt;&lt;a href=&quot;#Cookie与Session目标接近，服务对象不同&quot; class=&quot;headerlink&quot; title=&quot;Cookie与Session目标接近，服务对象不同&quot;&gt;&lt;/a&gt;Cookie与Session目标接近，服务对象不同&lt;/h3&gt;&lt;p&gt;Cookie与Session是两个目的类似，但面向的对象有所差异的东西。&lt;br&gt;特别是他们经常相互作用，从而实现各自的目标。因些在没有真正的理清楚他们的实际意义与使用方式前，人们还是非常容易混淆他们之间的区别的。本文从他们的实现方式入手，尝试将Cookie与Session的本质特征说清楚。&lt;/p&gt;
&lt;p&gt;Cookie的服务对象是：浏览器，用于记录浏览器端用户信息或者相应的状态&lt;br&gt;Session的服务对象是：服务器，用于记录服务器端用户信息或者相应的状态&lt;/p&gt;
&lt;h3 id=&quot;混淆的原因：Session经常借Cookie来实现&quot;&gt;&lt;a href=&quot;#混淆的原因：Session经常借Cookie来实现&quot; class=&quot;headerlink&quot; title=&quot;混淆的原因：Session经常借Cookie来实现&quot;&gt;&lt;/a&gt;混淆的原因：Session经常借Cookie来实现&lt;/h3&gt;&lt;p&gt;容易混淆他们的原因是：Session经常借助Cookie来实现。&lt;br&gt;因为Cookie是HTTP的标准头字段。所以经常我们只要在Cookie里加上一串&lt;br&gt;XXXsessionid=xxx就可以标志一个session。&lt;br&gt;比如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;php通常是使用PHPSESSID标识一个Session ID。一个简单，完整的Cookie字段表达：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Cookie：PHPSESSID=D3223883123;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;java通常可以使用jsessionid来标识Session ID。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Cookie：jsessionid=D3223883123;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以这时Session信息是隐藏在Cookie里面的，因为导致很多人分不清楚Cookie与Session的区别。&lt;/p&gt;
&lt;h3 id=&quot;Session是可以脱离HTTP协议的，但是Cookie是不行的&quot;&gt;&lt;a href=&quot;#Session是可以脱离HTTP协议的，但是Cookie是不行的&quot; class=&quot;headerlink&quot; title=&quot;Session是可以脱离HTTP协议的，但是Cookie是不行的&quot;&gt;&lt;/a&gt;Session是可以脱离HTTP协议的，但是Cookie是不行的&lt;/h3&gt;&lt;p&gt;Session是服务器端的标识，所以抛开安全性的话，可以通过任何方式提交到服务器，并且目前应该没有针对Session的规范，所以如何实现Session完全是服务器非常自主的事情。&lt;/p&gt;
&lt;p&gt;比如我们可以通过添加GET参数的方式提交：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GET /?sessionid=dfsdfsdfsdfsd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可以通过POST的方式将SessionId当成是参数提交：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;POST  /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sessionid=xxx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是Cookie是不一样的，Cookie必须是放在HTTP协议的头里面。永远只能是在HTTP头里面，是不能自由的选择如何实现的方式的。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Cookie：jsessionid=D3223883123;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Cookie的实现对于任何开发语言是一致的，Session的实现会因为开发语言，项目而不同&quot;&gt;&lt;a href=&quot;#Cookie的实现对于任何开发语言是一致的，Session的实现会因为开发语言，项目而不同&quot; class=&quot;headerlink&quot; title=&quot;Cookie的实现对于任何开发语言是一致的，Session的实现会因为开发语言，项目而不同&quot;&gt;&lt;/a&gt;Cookie的实现对于任何开发语言是一致的，Session的实现会因为开发语言，项目而不同&lt;/h3&gt;&lt;p&gt;根据上面的内容，我们可以得到结论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cookie是通用的技术，对于所有的技术都是通用的&lt;/li&gt;
&lt;li&gt;Session是专用的技术，对于不同的语言项目是不同的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Cookie不适合保存大量的数据，Session所对应的保存数据则是可以无限的&quot;&gt;&lt;a href=&quot;#Cookie不适合保存大量的数据，Session所对应的保存数据则是可以无限的&quot; class=&quot;headerlink&quot; title=&quot;Cookie不适合保存大量的数据，Session所对应的保存数据则是可以无限的&quot;&gt;&lt;/a&gt;Cookie不适合保存大量的数据，Session所对应的保存数据则是可以无限的&lt;/h3&gt;&lt;p&gt;基于我们上述的理解，我们可以发现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cookie的数据是全部保存在Cookie字段里，并不会被服务器所保存，但同时服务器又是需要知道当前页面的Cookie的全部信息的，所以Cookie是必须在HTTP传输进程中全面交换的。因此Cookie的长度需要限制，因为如果Cookie量太大，会导致传输的数据变大，导致网络的性能下降&lt;/li&gt;
&lt;li&gt;但是Session则会好很多，首先Session只要一个ID标识就可以了，并没有类似Cookie的k=v结构。所以sessionid不是数据，而是标识。这跟cookie本身就是数据是不同的。Session ID后面可以对应很多数据，可以是个人或者网站的所有数据，因为可以认为是无限的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面讨论的是Cookie与Session的几个比较明显的不同点。&lt;/p&gt;
&lt;p&gt;相信通过比较上面的几个点，我们就可以很容易区分Cookie与Session了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Cookie与Session是所有Web开发中最基本的概念，是用户认识用户验证最基本的手段。自从RESTful的概念提出来之后，不断有人提出削弱Cookie与Session进行身份认识的作用。尽管如此，Cookie与Session仍作为最基础的身份认识手段而被广泛的应用。&lt;
    
    </summary>
    
      <category term="Web技术" scheme="http://blog.3gcnbeta.com/categories/Web%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="浏览器" scheme="http://blog.3gcnbeta.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
      <category term="http" scheme="http://blog.3gcnbeta.com/tags/http/"/>
    
      <category term="服务器" scheme="http://blog.3gcnbeta.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Cookie" scheme="http://blog.3gcnbeta.com/tags/Cookie/"/>
    
      <category term="Session" scheme="http://blog.3gcnbeta.com/tags/Session/"/>
    
  </entry>
  
  <entry>
    <title>并不存在前后端分离的问题</title>
    <link href="http://blog.3gcnbeta.com/2016/03/31/%E4%B8%8D%E5%AD%98%E5%9C%A8%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://blog.3gcnbeta.com/2016/03/31/不存在前后端分离的问题/</id>
    <published>2016-03-31T00:50:00.000Z</published>
    <updated>2016-03-31T09:02:51.315Z</updated>
    
    <content type="html">&lt;p&gt;最近发现很多人提前后端分离, 搜索网络一看,发现原来淘宝系又是国内的始作俑者.&lt;br&gt;我很赞赏阿里技术团队对中国技术圈所做的贡献,但是也很担心他们将一些错误的理念传达给更多的人.&lt;/p&gt;
&lt;p&gt;我也在我的博客里批评过很多概念不清的情况.&lt;br&gt;目前很多错误的概念已经被大家认识到了,很多错误的概念仍然在流传中.&lt;/p&gt;
&lt;h3 id=&quot;那么前后端分离究竟是什么个鬼呢&quot;&gt;&lt;a href=&quot;#那么前后端分离究竟是什么个鬼呢&quot; class=&quot;headerlink&quot; title=&quot;那么前后端分离究竟是什么个鬼呢?&quot;&gt;&lt;/a&gt;那么前后端分离究竟是什么个鬼呢?&lt;/h3&gt;&lt;p&gt;国外的始作俑者：&lt;br&gt;&lt;a href=&quot;https://www.nczonline.net/blog/2013/10/07/node-js-and-the-new-web-front-end/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.nczonline.net/blog/2013/10/07/node-js-and-the-new-web-front-end/&lt;/a&gt;&lt;br&gt;但是很多人没有看到下面的评论，我摘一段：&lt;br&gt;It is front-end concern, but also back-end, since files eventually land on server side?&lt;/p&gt;
&lt;p&gt;美团将所有的后端技术都包括到了前端,然后认为java是后端,连数据库都是java的.&lt;br&gt;链接如下:&lt;br&gt;&lt;a href=&quot;http://tech.meituan.com/node-fullstack-development-practice.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://tech.meituan.com/node-fullstack-development-practice.html&lt;/a&gt;&lt;br&gt;难道java跟node一个是后端语言一个是前端语言?&lt;br&gt;显然美团的技术博客作者根本没有搞清楚,未来node是用来替换部分或者全部的java功能的.&lt;/p&gt;
&lt;p&gt;我们看看淘宝系的人们是如何解释的:&lt;br&gt;&lt;a href=&quot;http://ued.taobao.org/blog/2014/04/full-stack-development-with-nodejs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ued.taobao.org/blog/2014/04/full-stack-development-with-nodejs/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SPA式的前后端分离，是从物理层做区分（认为只要是客户端的就是前端，服务器端的就是后端），这种分法已经无法满足我们前后端分离的需求，我们认为从职责上划分才能满足目前我们的使用场景：&lt;/p&gt;
&lt;p&gt;前端：负责View和Controller层。&lt;br&gt;后端：只负责Model层，业务处理/数据等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样武断的就将前端与后端划分好了?&lt;/p&gt;
&lt;p&gt;我很奇怪的是淘宝的后端里所谓的业务逻辑是不是Controller?&lt;/p&gt;
&lt;p&gt;根据他们的划分,我们可以在这里可以看出来,淘宝系将MVC当成是单一的概念来理解的.&lt;/p&gt;
&lt;p&gt;这也是他们的错误的根源.&lt;/p&gt;
&lt;h3 id=&quot;混淆了MVC与前后端&quot;&gt;&lt;a href=&quot;#混淆了MVC与前后端&quot; class=&quot;headerlink&quot; title=&quot;混淆了MVC与前后端&quot;&gt;&lt;/a&gt;混淆了MVC与前后端&lt;/h3&gt;&lt;p&gt;我在文章如何简单区分MVC与前后端时就这个问题其实已经表达了我的看法.&lt;br&gt;&lt;a href=&quot;https://github.com/calidion/calidion.github.io/issues/3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/calidion/calidion.github.io/issues/3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不管是前端还是后端都是有MVC的.&lt;br&gt;而不是象这里所谓的前端负责V,C.&lt;br&gt;要知道现在很多前端框架都是自称MVVM而不是CVVC的.&lt;br&gt;可见淘宝这帮人的概念是很不清楚的.&lt;/p&gt;
&lt;p&gt;MVC作为最基本的软件结构划分是没有问题的.&lt;br&gt;而将MVC拆分成前端与后端是完全错误的.&lt;/p&gt;
&lt;p&gt;这种理念不但与时下流行的iosmorphic js相悖,也是对MVC与前后端的错误理解.&lt;/p&gt;
&lt;p&gt;其实MVC只是一个很粗的划分,MVC更多时候应该是一个递归的概念,一个大M里有小MVC,&lt;br&gt;一个大V里有小MVC,一个大C里也一样有MVC.&lt;/p&gt;
&lt;p&gt;所以淘宝们在做的只不过是一个大V里的小MVC.而不是所谓的前后端分离.&lt;br&gt;因为前后端本身就是分离的,并不需要你做任何的动作,前后端就是分离的.&lt;/p&gt;
&lt;p&gt;所以MVC的划分本身就是对系统的高级抽象.而现实总是复杂的,不可能简单成MVC就这三样.&lt;br&gt;所以简单的将MVC套到你的系统里,你一定会很痛苦.&lt;/p&gt;
&lt;p&gt;看到前后端与MVC概念混淆这类很基本的概念错误不断的从淘宝系出来还是让人非常的失望的.&lt;/p&gt;
&lt;h3 id=&quot;传播错误容易，纠正错误难&quot;&gt;&lt;a href=&quot;#传播错误容易，纠正错误难&quot; class=&quot;headerlink&quot; title=&quot;传播错误容易，纠正错误难&quot;&gt;&lt;/a&gt;传播错误容易，纠正错误难&lt;/h3&gt;&lt;p&gt;虽然我看到过很多错误,并努力让其不断的被修正,但是一旦一个错误传播开,修正的代价就太大了.&lt;br&gt;以至于到现在很多人还开口DIV+CSS,闭口DIV+CSS.&lt;br&gt;将错误当成自然,这是一种可怕的情形.&lt;/p&gt;
&lt;p&gt;更可怕的是将更多的开发者搞迷惑了。因为最近一堆人在提前后端分离，然后实持问题跟却前后端没有任何关系，让我又一次惊恐。&lt;br&gt;所以请各大公司的技术人员在发表自己的新概念的时候,请注意你的概念是不是逻辑正确的.&lt;br&gt;别想当然的去随意的定义概念,谢谢.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近发现很多人提前后端分离, 搜索网络一看,发现原来淘宝系又是国内的始作俑者.&lt;br&gt;我很赞赏阿里技术团队对中国技术圈所做的贡献,但是也很担心他们将一些错误的理念传达给更多的人.&lt;/p&gt;
&lt;p&gt;我也在我的博客里批评过很多概念不清的情况.&lt;br&gt;目前很多错误的概念已经被大家认
    
    </summary>
    
      <category term="前端" scheme="http://blog.3gcnbeta.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="服务器" scheme="http://blog.3gcnbeta.com/categories/%E5%89%8D%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="CSS" scheme="http://blog.3gcnbeta.com/tags/CSS/"/>
    
      <category term="HTML" scheme="http://blog.3gcnbeta.com/tags/HTML/"/>
    
      <category term="前端" scheme="http://blog.3gcnbeta.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="后端" scheme="http://blog.3gcnbeta.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="MVC" scheme="http://blog.3gcnbeta.com/tags/MVC/"/>
    
      <category term="Javascript" scheme="http://blog.3gcnbeta.com/tags/Javascript/"/>
    
      <category term="Ajax" scheme="http://blog.3gcnbeta.com/tags/Ajax/"/>
    
  </entry>
  
  <entry>
    <title>在Linux下正确安装nodejs的姿势</title>
    <link href="http://blog.3gcnbeta.com/2015/07/13/%E5%9C%A8Linux%E4%B8%8B%E6%AD%A3%E7%A1%AE%E5%AE%89%E8%A3%85nodejs%E7%9A%84%E5%A7%BF%E5%8A%BF/"/>
    <id>http://blog.3gcnbeta.com/2015/07/13/在Linux下正确安装nodejs的姿势/</id>
    <published>2015-07-12T16:00:00.000Z</published>
    <updated>2016-03-31T08:20:38.191Z</updated>
    
    <content type="html">&lt;p&gt;无论是在使用node还是在安装node时，都尽量避免安装成root/管理员权限。&lt;br&gt;不管是在linux下面还是在windows下面。&lt;/p&gt;
&lt;p&gt;原因有几点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一般不要用root安装node，除非你知道自己在做什么&lt;/li&gt;
&lt;li&gt;不要在root下工作，除非你的工作就是管理整个系统&lt;/li&gt;
&lt;li&gt;不要在root下运行node程序，除你知道你的软件没有bug&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;centos/ubuntu等用户，尽量不要将node安装到/bin, usr/bin等目录下面。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在linux/unix下面有一个非常方便的工具叫nvm。可以帮助node用户很好的安装与管理他的node安装与版本。&lt;/p&gt;
&lt;p&gt;这个工具的项目地址：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/creationix/nvm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/creationix/nvm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装方法很简单（教程原项目上都有，如果对于英文比较吃力的可以继续看下去):&lt;/p&gt;
&lt;p&gt;1.安装&lt;/p&gt;
&lt;p&gt;用curl:&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.25.4/install.sh | bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用wget:&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.25.4/install.sh | bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.source到你的shell里&lt;/p&gt;
&lt;p&gt;执行&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;. ~/.nvm/nvm.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; ~/.nvm/nvm.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3.查找远程的node/iojs版本&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nvm ls-remote&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;4.选择适合你的版本安装&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nvm install 0.12.6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nvm install iojs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;5.设置一个默认的版本&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nvm &lt;span class=&quot;built_in&quot;&gt;alias&lt;/span&gt; default 0.12.6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样你的一个nodejs安装就完成了。&lt;/p&gt;
&lt;p&gt;如果你还想管理更多的版本，可以自己对照原项目帮助进一步的学习如何使用nvm.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;无论是在使用node还是在安装node时，都尽量避免安装成root/管理员权限。&lt;br&gt;不管是在linux下面还是在windows下面。&lt;/p&gt;
&lt;p&gt;原因有几点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一般不要用root安装node，除非你知道自己在做什么&lt;/li&gt;
&lt;li&gt;不要在r
    
    </summary>
    
    
      <category term="nodejs" scheme="http://blog.3gcnbeta.com/tags/nodejs/"/>
    
      <category term="nvm" scheme="http://blog.3gcnbeta.com/tags/nvm/"/>
    
      <category term="linux" scheme="http://blog.3gcnbeta.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>nodejs验证码生成与环境配置</title>
    <link href="http://blog.3gcnbeta.com/2015/06/20/nodejs%E9%AA%8C%E8%AF%81%E7%A0%81%E7%94%9F%E6%88%90%E4%B8%8E%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>http://blog.3gcnbeta.com/2015/06/20/nodejs验证码生成与环境配置/</id>
    <published>2015-06-19T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.938Z</updated>
    
    <content type="html">&lt;p&gt;首先安装系统：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install libpangocairo-1.0-0 libcairo2-dev libgnomeui-dev libgstreamer0.10-dev libglib2.0-dev libjpeg-dev libgif-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后再安装npm&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install --save simple-captcha&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; simpleCaptcha = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;simple-captcha&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  captcha: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;req, res&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; captcha = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;simple-captcha&#39;&lt;/span&gt;).create(&amp;#123;width: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, height: &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    req.session.captcha = captcha.text();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(req.session.captcha);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    captcha.generate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.write(captcha.buffer(&lt;span class=&quot;string&quot;&gt;&#39;image/png&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;首先安装系统：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br
    
    </summary>
    
    
      <category term="captcha" scheme="http://blog.3gcnbeta.com/tags/captcha/"/>
    
      <category term="node" scheme="http://blog.3gcnbeta.com/tags/node/"/>
    
      <category term="canvas" scheme="http://blog.3gcnbeta.com/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>Web开发的前端与后端的界线在那里？</title>
    <link href="http://blog.3gcnbeta.com/2015/02/24/Web%E5%BC%80%E5%8F%91%E7%9A%84%E5%89%8D%E7%AB%AF%E4%B8%8E%E5%90%8E%E7%AB%AF%E7%9A%84%E7%95%8C%E7%BA%BF%E5%9C%A8%E9%82%A3%E9%87%8C%EF%BC%9F/"/>
    <id>http://blog.3gcnbeta.com/2015/02/24/Web开发的前端与后端的界线在那里？/</id>
    <published>2015-02-23T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.938Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;年前由于ppk对前端的模板化进行了一定的批评，并认为Angular应该是一个面向企业开发的框架。但是由于包括我在内的很多人并不认可，所以跟国内一些人进行相应的讨论。而问的根源实际上在于如何界定前后端。所以我将我讨论的内容总结成下面的文章，希望能提供一个参考。&lt;br&gt;&lt;a href=&quot;https://github.com/xufei/blog/issues/15&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;讨论地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在web开发领域内，我认为可以将所有的技术分成三大类，它们可以分别称为后端，前端，工具（同时分成前端工具，后端工具，其它工具）。&lt;/p&gt;
&lt;h3 id=&quot;前端，后端，工具&quot;&gt;&lt;a href=&quot;#前端，后端，工具&quot; class=&quot;headerlink&quot; title=&quot;前端，后端，工具&quot;&gt;&lt;/a&gt;前端，后端，工具&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;在服务器端运行的技术统称是后端技术，服务器端即后端。&lt;/li&gt;
&lt;li&gt;在浏览器端运行下的技术是前端技术，流览器端即前端。&lt;/li&gt;
&lt;li&gt;工具是工具，辅助前后端。工具是可以前，可以后，也可以什么都不是。工具具有其灵活性。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;工具，即可以用于前端也可以用于后端，也可以是独立于网站业务的各种工具&quot;&gt;&lt;a href=&quot;#工具，即可以用于前端也可以用于后端，也可以是独立于网站业务的各种工具&quot; class=&quot;headerlink&quot; title=&quot;工具，即可以用于前端也可以用于后端，也可以是独立于网站业务的各种工具&quot;&gt;&lt;/a&gt;工具，即可以用于前端也可以用于后端，也可以是独立于网站业务的各种工具&lt;/h3&gt;&lt;p&gt;grunt, bower, yeoman等都是工具，可以针对前端，也可以针对后端，所以在我看来，他们不是简单的归类于前端或者后端的，他们是工具。&lt;br&gt;任何开发都是需要工具的。&lt;br&gt;但是工具有时候也是有明确的倾向性的&lt;br&gt;比如我们可以认为bower是前端工具，属于前端的工具链。&lt;br&gt;而从更广泛的角度讲apache, nginx, make, ant, git等都是web工具。&lt;/p&gt;
&lt;h3 id=&quot;HTML不是区分前后端的界线&quot;&gt;&lt;a href=&quot;#HTML不是区分前后端的界线&quot; class=&quot;headerlink&quot; title=&quot;HTML不是区分前后端的界线&quot;&gt;&lt;/a&gt;HTML不是区分前后端的界线&lt;/h3&gt;&lt;p&gt;有些人认为前后端的分界在于html，这种看法实际上是不对的。&lt;br&gt;原因在于&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;早期的动态网页的工作主要是运行于服务器端的，并且生成html与业务都在后端，同时也没有js的支持。那个时期是不存在现代意义的前端技术的。&lt;/li&gt;
&lt;li&gt;随着web技术的发展，现在大部分的web开发环境都开始支持html模板,&lt;br&gt;在这个时期前端技术得到了极大的发展，但是html的动态内容究竟应该由谁来处理处于模糊时期，所以大家也困惑于前端与后端应该如何划分。这也是我们目前所处的时期。&lt;/li&gt;
&lt;li&gt;之后的前端技术将不会不断的将加，不但可以完全处理html，css这样的展现，并且可以处理很大一部分的后端业务，以后的前端开发将不需要将html&lt;br&gt;放在服务器端处理&lt;/li&gt;
&lt;li&gt;另外，随着web技术的广泛应用，桌面技术与移动应用更多的采用html技术作为ui界面，而这种应用可能是没有后端的。所以就没有了所谓的后端的概念。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以我们可以看出来几点:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;最初是不存在前端技术的，只有cgi/后端脚本，浏览器端是没有过多的开发的，除了生成html。所以这个时期后端与html是一体的&lt;br&gt;.HTML是作为文档出现的，所以后端技术的唯一目的就是生成文档。&lt;/li&gt;
&lt;li&gt;技术是演化的，前端技术在ajax技术普及后，才变的越来越重要，html5与css3之后达到了高峰，未来将会更加重要。但是html仍然很多是在后端处理的。&lt;/li&gt;
&lt;li&gt;随着桌面与移动应用的加入，未来前端的技术栈会更加的广泛。这时html是完全本地化的，没有服务器，所以模板全部是在前端的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此可以看出来html是无法界定前后端的，因为后端可以吐html,前端也可以独立的处理html.&lt;/p&gt;
&lt;p&gt;任何web应用都无法避免与html交流。所以说以html来明确界定前后端显得很困难，特别是一些旧技术还能吐html出来。&lt;/p&gt;
&lt;p&gt;虽然我的倾向是将html独立到前端，但是我不认为html是前后端的分界线，特别是当有人喜欢将模板通过后端技术来解释的情况下.&lt;/p&gt;
&lt;h4 id=&quot;前后端技术不具有明显的差异性&quot;&gt;&lt;a href=&quot;#前后端技术不具有明显的差异性&quot; class=&quot;headerlink&quot; title=&quot;前后端技术不具有明显的差异性&quot;&gt;&lt;/a&gt;前后端技术不具有明显的差异性&lt;/h4&gt;&lt;p&gt;都可以有数据库，&lt;br&gt;都可以多线程（虽然目前还不行），&lt;br&gt;都可以做并行运算。&lt;br&gt;都可以处理html。&lt;/p&gt;
&lt;p&gt;所以前后在技术层面本质上没有差别，更多的是概念上的差别。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;目前浏览器技术完全可以运行于后台。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;浏览器都可以运行于服务器，那么这个概念也是不变的。&lt;/p&gt;
&lt;p&gt;所以前端与后端不是以你的技术区分的，而是根据你的运行环境来区分的。&lt;/p&gt;
&lt;p&gt; 例如：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;javascript用运在浏览器端叫前端脚本，运行于node就是后端脚本。&lt;/li&gt;
&lt;li&gt;比如搜索引擎技术是对html文档的处理技术，但是搜索技术绝对不会被归到前端技术上&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;html一样可以在无联网的环境下运行，这时不存在前端与后端的概念。这时只有桌面或者app的概念。&lt;/p&gt;
&lt;h3 id=&quot;运行环境是唯一的前后端分界线&quot;&gt;&lt;a href=&quot;#运行环境是唯一的前后端分界线&quot; class=&quot;headerlink&quot; title=&quot;运行环境是唯一的前后端分界线&quot;&gt;&lt;/a&gt;运行环境是唯一的前后端分界线&lt;/h3&gt;&lt;p&gt;因为html与技术本身都无法成为我们去区分前后端的标准，那么运行环境就成了我们可以区分的唯一指标，并且相对是比较准确的。&lt;br&gt;在浏览器端运行的技术都是前端技术：&lt;br&gt;dom, html, css, javascript, 相关的前端类库与框架&lt;br&gt;在http服务器端运行的技术就是后端技术：&lt;br&gt;php, java ee, ruby/rails, nodejs/sails/expressjs, python/django&lt;br&gt;特殊情况：由于node技术带来的便利性，很多javascript类似可以同时支持前端与后端。比如validator.js，web-errors.js。&lt;br&gt;这种复合技术即是前端也是后端，所以为全栈开发创造了更好的条件，从而我们可以推出javascript是目前最好的全栈开发语言。&lt;br&gt;因为我们还知道mongodb的控制台是直接支持javascript的。&lt;/p&gt;
&lt;p&gt;前端与后端经渭分明，不用纠结于html，也不用纠结于模板了。&lt;br&gt;这样，我们的所有逻辑都是通的。&lt;/p&gt;
&lt;h3 id=&quot;过渡性的普遍性&quot;&gt;&lt;a href=&quot;#过渡性的普遍性&quot; class=&quot;headerlink&quot; title=&quot;过渡性的普遍性&quot;&gt;&lt;/a&gt;过渡性的普遍性&lt;/h3&gt;&lt;p&gt;大部分东西是不能完全区分开的。这种现象我认为可以称之为过渡性。过渡性是所有事物的普遍现象。即使在概念明确的情况下，有些技术也是即可以看成是前端技术， 也可以看成是后端技术的。前面的javascript与html就是例子。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;年前由于ppk对前端的模板化进行了一定的批评，并认为Angular应该是一个面向企业开发的框架。但是由于包括我在内的很多人并不认可，所以跟国内一些人进行相应的讨论。而问的根源实际上在于如何界定前后端。所以我将我讨论的内容总结成下面的文章，希望能提供
    
    </summary>
    
      <category term="数据库技术" scheme="http://blog.3gcnbeta.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="javascript" scheme="http://blog.3gcnbeta.com/tags/javascript/"/>
    
      <category term="HTML" scheme="http://blog.3gcnbeta.com/tags/HTML/"/>
    
      <category term="前端" scheme="http://blog.3gcnbeta.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="后端" scheme="http://blog.3gcnbeta.com/tags/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="过渡性" scheme="http://blog.3gcnbeta.com/tags/%E8%BF%87%E6%B8%A1%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu非root安装软件(mysql篇)</title>
    <link href="http://blog.3gcnbeta.com/2015/02/13/Ubuntu%E9%9D%9Eroot%E5%AE%89%E8%A3%85mysql/"/>
    <id>http://blog.3gcnbeta.com/2015/02/13/Ubuntu非root安装mysql/</id>
    <published>2015-02-12T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.938Z</updated>
    
    <content type="html">&lt;p&gt;对于任何的非系统软件的安装，本人都是比较推荐非root权限安装的。&lt;br&gt;所以虽然ubuntu的apt包管理机制很方便，但是对于大部分软件，特别是开发软件最好还是通过源码安装，方便修改安装。&lt;br&gt;下面是在Ubuntu下面非root安装mysql-server的步骤：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#保证必要的库文件包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install cmake libncurses5-dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#得到mysql-server源代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apt-get &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; mysql-server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; mysql-x.x.xx     &lt;span class=&quot;comment&quot;&gt;#我的是mysql-5.5.41/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#生成makefile，同时需要指定的连接库与库文件头的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#同时指定好安装的位置，个人一般比较喜欢安装在~/local下面。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cmake  -DCMAKE_INSTALL_PREFIX=~/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/mysql -DMYSQL_DATADIR=~/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/mysql/data -DSYSCONFDIR=~/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/mysql/etc -DCURSES_LIBRARY=/usr/lib/libncurses.so -DCURSES_INCLUDE_PATH=/usr/include&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#或者，要明确好curses的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cmake  -DCMAKE_INSTALL_PREFIX=~/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/mysql -DMYSQL_DATADIR=~/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/mysql/data -DSYSCONFDIR=~/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/mysql/etc -DCURSES_INCLUDE_PATH=/usr/include -DCURSES_LIBRARY=/usr/lib/x86_64-linux-gnu/libncurses.so&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#编译代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#安装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#进入安装好的MYSQL目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#复制配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#选择一个support-files目录下面的配置文件，这里选择medium&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#这里要注册清空其它地方的my.cnf文件，比如根目录下的etc/my.cnf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir etc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp support-files/my-medium.cnf etc/my.cnf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对my.cnf进行如下修改：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[client]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#password	= your_password&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port		= 3306&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#这里是需要修改的地方&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;socket		= /home/seiya/local/mysql/mysql.sock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;port		= 3306&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip-external-locking&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;key_buffer_size = 16M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max_allowed_packet = 1M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;table_open_cache = 64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sort_buffer_size = 512K&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;net_buffer_length = 8K&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;read_buffer_size = 256K&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;read_rnd_buffer_size = 512K&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myisam_sort_buffer_size = 8M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#这里是需要修改的地方&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log-error=/home/seiya/local/mysql/log/error.log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pid-file=/home/seiya/local/mysql/mysql.pid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;socket		= /home/seiya/local/mysql/mysql.sock&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一般最重要的是对端口的修改。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同时如果之前安装过mysql-server，一定要将所有的地方的.cnf文件清楚。否则启动时会优先使用之前的cnf。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后安装MYSQL。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#安装MYSQL数据库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scripts/mysql_install_db --user=&lt;span class=&quot;variable&quot;&gt;$USER&lt;/span&gt; --basedir=. --datadir=data --no-defaults &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#启动mysql&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bin/mysqld_safe &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#登录mysql&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bin/mysql -uroot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#如果需要修改密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bin/mysqladmin -u root password &lt;span class=&quot;string&quot;&gt;&#39;newpassword&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安照上面的步骤这样mysql就安装完成了&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;对于任何的非系统软件的安装，本人都是比较推荐非root权限安装的。&lt;br&gt;所以虽然ubuntu的apt包管理机制很方便，但是对于大部分软件，特别是开发软件最好还是通过源码安装，方便修改安装。&lt;br&gt;下面是在Ubuntu下面非root安装mysql-server的步骤：&lt;/p
    
    </summary>
    
      <category term="数据库技术" scheme="http://blog.3gcnbeta.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="root" scheme="http://blog.3gcnbeta.com/tags/root/"/>
    
      <category term="数据库" scheme="http://blog.3gcnbeta.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MYSQL" scheme="http://blog.3gcnbeta.com/tags/MYSQL/"/>
    
      <category term="UBUNTU" scheme="http://blog.3gcnbeta.com/tags/UBUNTU/"/>
    
  </entry>
  
  <entry>
    <title>异步IO一定需要异步编程？异步编程是个什么概念？</title>
    <link href="http://blog.3gcnbeta.com/2015/01/12/%E5%BC%82%E6%AD%A5IO%E4%B8%80%E5%AE%9A%E9%9C%80%E8%A6%81%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B%EF%BC%9F%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E6%A6%82%E5%BF%B5%EF%BC%9F/"/>
    <id>http://blog.3gcnbeta.com/2015/01/12/异步IO一定需要异步编程？异步编程是个什么概念？/</id>
    <published>2015-01-11T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.938Z</updated>
    
    <content type="html">&lt;p&gt;前阵子看了某里的开发人员写的书，上面写道有异步IO必有异步编程。这个说法让人心颤了一下。&lt;/p&gt;
&lt;p&gt;难道没有异步IO就没有异步编程？有异步IO就必定是异步编程？细仔想想两者都是不对的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对于没有异步IO的情况，我们创立了多进程与多线程，通过进程的本身消息通知机制可以实现了异步通讯，从而完成异步操作，也就是所谓的异步编程（这个词值得推敲）。&lt;/li&gt;
&lt;li&gt;同样对于异步HTTP请求（在API层面是non blocking io)，我们也可以通过进程或者线程的等待机制加循环（即Programmed IO模式）来保证数据满之后再向下执行，从而对异步IO实现同步操作，可以简单的理解为是非异步编程。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以异步IO是编写异步代码的即非充分又非必要条件。&lt;/p&gt;
&lt;p&gt;个人认为作者这样说，说明对异步IO或者异步编程的理解是存在误区的，而这种是最基本的概念理解。概念不对，那么整个理解就不能成立。&lt;/p&gt;
&lt;p&gt;所以尽管吹捧那本《深入浅出》的人很多，但是在我看来这本书的很多重大理念的地方是错误的，误人不浅。而最重要的是对异步，同步，阻塞，非阻塞的理解的错误，而这是javascript编程时最重要的理解。还有对网络的错误理解我就不在这里讲述了。&lt;/p&gt;
&lt;p&gt;再来说一下异步编程。&lt;/p&gt;
&lt;p&gt;其实异步这种东西并不Javascript出现后才冒出来的东西。&lt;/p&gt;
&lt;p&gt;这个东西的出现跟硬件中断比较相关的，跟我们现在理解的计算机IO是不相关的。&lt;/p&gt;
&lt;p&gt;这些中断是由CPU来完成的，通过中断跳转到某一个代码，或者执行某个操作，然后注册中断的处理函数。等到有中断过来时，就可以处理相应的事件。&lt;/p&gt;
&lt;p&gt;但是中断本身是同步的，因为设定中断处理事件后，中断就处于接收事件的状态了。而这个状态并不是异步的。因为接收到信号后他会不断的产生中断，执行中断处理。比如键盘按键，这种中断是不会因为你处理不过来，而减少中断的。所以你按的很快时在一些代码不够优化，性能很差的系统下是会引起按键处理出问题的。原因在于大部分的对中断事件的处理是同步的。&lt;/p&gt;
&lt;p&gt;所以有异步编程是任何一个语言天然就有的功能，因为一开始计算机的计算就是异步与同步的共存的。同步执行代码，同步处理，但是又能同时接受消息。而消息的处理与主体代码并不是同一个执行序列，所以对于某些处理来说，它是异步的。&lt;/p&gt;
&lt;p&gt;上面的例子就是按键事件的种植与按键事件的响应，按键事件的处理之间，他们在代码是异步的。因为他们不具有先后性。因为他具有所谓的异步编程的性点。&lt;/p&gt;
&lt;p&gt;所以异步编程本身是老祖宗干了不知道多少年的事情了。&lt;/p&gt;
&lt;p&gt;它跟异步IO也没有什么关系，异步编程本身一开始是多进程与多线程以及中断事件处理需要的结果。并不是异步IO的结果。异步IO是多进程出现后才具有的一种IO。所以本质上异步是由进程决定的，而不是由IO决定。&lt;/p&gt;
&lt;p&gt;关于阻塞，非阻塞，同步，异步，多线程，多进程，我在比较早的时候有过一些总结：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.3gcnbeta.com/2010/09/21/%E9%98%BB%E5%A1%9E%E4%B8%8E%E9%9D%9E%E9%98%BB%E5%A1%9E-%E5%BC%82%E6%AD%A5%E4%B8%8E%E5%90%8C%E6%AD%A5%E5%88%86%E5%88%AB%E8%A1%A8%E7%A4%BA%E4%BB%80%E4%B9%88%E5%90%AB%E4%B9%89/&quot;&gt;阻塞，非阻塞，同步，异步，多线程，多进程&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;前阵子看了某里的开发人员写的书，上面写道有异步IO必有异步编程。这个说法让人心颤了一下。&lt;/p&gt;
&lt;p&gt;难道没有异步IO就没有异步编程？有异步IO就必定是异步编程？细仔想想两者都是不对的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对于没有异步IO的情况，我们创立了多进程与多线程，通过进程
    
    </summary>
    
      <category term="前端技术" scheme="http://blog.3gcnbeta.com/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="同步" scheme="http://blog.3gcnbeta.com/tags/%E5%90%8C%E6%AD%A5/"/>
    
      <category term="异步" scheme="http://blog.3gcnbeta.com/tags/%E5%BC%82%E6%AD%A5/"/>
    
      <category term="多线程" scheme="http://blog.3gcnbeta.com/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="多进程" scheme="http://blog.3gcnbeta.com/tags/%E5%A4%9A%E8%BF%9B%E7%A8%8B/"/>
    
      <category term="阻塞" scheme="http://blog.3gcnbeta.com/tags/%E9%98%BB%E5%A1%9E/"/>
    
      <category term="非阻塞" scheme="http://blog.3gcnbeta.com/tags/%E9%9D%9E%E9%98%BB%E5%A1%9E/"/>
    
  </entry>
  
  <entry>
    <title>浏览器兼容性问题的探讨</title>
    <link href="http://blog.3gcnbeta.com/2014/12/20/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98%E7%9A%84%E6%8E%A2%E8%AE%A8/"/>
    <id>http://blog.3gcnbeta.com/2014/12/20/浏览器兼容性问题的探讨/</id>
    <published>2014-12-19T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.938Z</updated>
    
    <content type="html">&lt;p&gt;浏览器兼容性的问题是一个相对比较复杂的问题，也是困扰了很多开发人员的常见问题。&lt;br&gt;今天我准备从原理的角度分析一下，浏览器的兼容性问题到底有那些,应该如何解决。&lt;br&gt;但是我不会特别具体的讲解浏览器的具体兼容性问题，因为这个部分的内容过于多了，而且很多已经过时了。&lt;br&gt;我这里要讲的内容，大概是既使10年后也是仍可以作为参考的内容。&lt;br&gt;因为兼容性的问题是一个比较常态的话题，不会随着浏览器的发展而突然消失。&lt;/p&gt;
&lt;p&gt;浏览器兼容性问题产生的原因主要有以下几个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;标准的从无到有与标准的版本升级&lt;/li&gt;
&lt;li&gt;标准与实现的差异&lt;/li&gt;
&lt;li&gt;向下兼容所带来的负担&lt;/li&gt;
&lt;li&gt;软件bug&lt;/li&gt;
&lt;li&gt;标准往往是滞后的&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;标准的从无到有与标准的版本升级&quot;&gt;&lt;a href=&quot;#标准的从无到有与标准的版本升级&quot; class=&quot;headerlink&quot; title=&quot;标准的从无到有与标准的版本升级&quot;&gt;&lt;/a&gt;标准的从无到有与标准的版本升级&lt;/h2&gt;&lt;p&gt;  互联网的发展与任何其它事物的发展是一样的。一开始的混乱到现在的相对规范都是历经长时间的考验与认识的提升所得到的。&lt;br&gt;  一开始HTML的标准与现在的HTML标准已经发生了很大的变化。&lt;br&gt;  从一开始的HTML到现在的HTML5，标准已经提升了很多&lt;br&gt;  每一次的提升，都或者多或者少的影响着的网页的开发原则与展现原则。&lt;br&gt;  因些每一次变化都是对之前的一种或多或少的否定&lt;br&gt;  而这些否定则是来源于开发实践或者浏览器厂政治斗争的结果。&lt;br&gt;  所以标准仍会不断的向进步与发展，并且不断的制造兼容的问题，&lt;br&gt;  因为标准都是人的认识的体现，人的认识不断的变化，标准必然不断的变化&lt;br&gt;  所以不能盲目的迷信标准，标准不见得就是正确的认识。&lt;/p&gt;
&lt;h2 id=&quot;标准与实现的差异&quot;&gt;&lt;a href=&quot;#标准与实现的差异&quot; class=&quot;headerlink&quot; title=&quot;标准与实现的差异&quot;&gt;&lt;/a&gt;标准与实现的差异&lt;/h2&gt;&lt;p&gt;  标准是一个规范，而最终用户所接触到的浏览器是一个实现。标准与实现总是会存在差异的。有时候这种差异特别大。这个差异显著的发生在ie的旧版本上。&lt;br&gt;  而最知名的就是盒模型(box model)与事件模型在ie上与标准存在明显的差异。&lt;br&gt;  盒模型造成的兼容问题，在早期是非常显著的，随着IE对标准的支持越来越好，标准与实现的差异问题有所减少。&lt;br&gt;  如果从实践开发来说，显然ie的盒模型比w3c的盒模型要更符合大多数人的理解。所以css3之后，盒模型也是一个可选的参数了。&lt;/p&gt;
&lt;h2 id=&quot;向下兼容所带来的负担&quot;&gt;&lt;a href=&quot;#向下兼容所带来的负担&quot; class=&quot;headerlink&quot; title=&quot;向下兼容所带来的负担&quot;&gt;&lt;/a&gt;向下兼容所带来的负担&lt;/h2&gt;&lt;p&gt;  大概这是带来问题最多的地方了，因为这也是产生兼容性问题的根本原因所在。&lt;br&gt;  因为要向下兼容，所以才会存在兼容性问题。&lt;br&gt;  如果不需要兼容，那么兼容性的问题就不存在了。&lt;/p&gt;
&lt;p&gt;  为了解决兼容性的问题，浏览器创建了各种模式用于解释不同的标准的网页。&lt;br&gt;  为了方便了解网页的版本，浏览器厂商又发明了DOCTYPE用于测试网页所使用的HTML的版本。&lt;br&gt;  这样一来导致了网页的HTML版本有很多种，解释的方式也有很多种。&lt;br&gt;  有些浏览器还能针对不同的浏览器版本再衍生出来多个版本，&lt;br&gt;  为了保证浏览器的展示正确，会不断的加入渲染模式，导致一个浏览器上竟然存在将近10种的模式，&lt;br&gt;  这只能说是网页开发的恶梦。&lt;br&gt;  最典型的就是ie浏览器：&lt;br&gt;  在ie10里，会包括ie9,ie8,ie7的标准模式与部分的几乎标准模式，还会包括ie5怪异模式。&lt;/p&gt;
&lt;p&gt;  对于大部分的浏览器来说，一般会包含三种渲染模式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;标准模式(standard mode)&lt;br&gt;按w3c标准进行解析&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;几乎模型模式(almost standard mode)&lt;br&gt;除了在下面的方面表示与标准模式一样：&lt;br&gt;“the height calculations for line boxes and some of the inline elements in them.”&lt;br&gt;也就是说在线性块高度的计算时，可能如果有一些inline的元素在的话，可能就会进入几乎标准模式。&lt;br&gt;但是这种几平标准模式也不是随便进的，具体的如何进，跟你的DTD版本与浏览器有关。&lt;br&gt;关于详细的为什么要进入几乎标准模式，参考&lt;a href=&quot;http://www.quirksmode.org/css/quirksmode.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;quirksmode&lt;/a&gt;&lt;br&gt;关于什么是几乎标准模式，如何进入，参考&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Gecko&amp;#39;s_Almost_Standards_Mode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gecko’s Almost Standards Mode&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;怪异模式(quirks mode)&lt;br&gt;实际上是早期的Web页面解释规则，现在的页面应该是避免进入这一个状态。&lt;br&gt;同时不同的浏览器的怪异模型的解释方式并不相同。&lt;br&gt;当你的页面表现跟你的预期差别很大时，你要检查一下你所开发的网页是不是进入了这种模型。&lt;/p&gt;
&lt;p&gt;这种根据DOCTYPE切换模式的方式被叫做DOCTYPE switching或者DOCTYPE sniffing。&lt;br&gt;由于之前的DOCTYPE种类繁多(XML化的副作用)，到了HTML5之后规定，只需要&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  就可以正常的触发标准模式了，并且对于大部分的浏览器都是适用的。&lt;br&gt;  这种表达方式一定程度上说明了HTML的XML化的失败。&lt;/p&gt;
&lt;p&gt;  关于这些模型如何启动的内容可以参考这篇文章， &lt;a href=&quot;https://hsivonen.fi/doctype/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Activating Browser Modes with Doctype&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  对于当前的我们来说，基本上已经不需要进入除标准模式以外的模式了。&lt;br&gt;  所以将其它的模式当成是历史，了解一下就差不多了。&lt;/p&gt;
&lt;h2 id=&quot;软件bug&quot;&gt;&lt;a href=&quot;#软件bug&quot; class=&quot;headerlink&quot; title=&quot;软件bug&quot;&gt;&lt;/a&gt;软件bug&lt;/h2&gt;&lt;p&gt;  任何软件都或多或少会存在一些缺陷，通常我们称之为bug。&lt;br&gt;  浏览器也不例外，所以在平时开发时，任何前端开发工程师都会或多或少碰到浏览器的bug。&lt;br&gt;  浏览器的bug通常是跟浏览器的版本有关，&lt;br&gt;  现在的浏览器由于更新很及时，所以现代的浏览器的bug修复通常都会非常的及时。&lt;br&gt;  所以bug的修复慢慢的会是兼容性问题上一个相对比较小的问题。&lt;br&gt;  bug的修复需要坚持的原则就是要从原理上去修复，而不是从展现上去修复。&lt;br&gt;  因为对于某些bug的修复的技术是很多样的，采用不同的CSS也许就可以完成，所以修复最好是通过避免使用带bug的结构或者属性来规避。&lt;/p&gt;
&lt;h2 id=&quot;标准往往是滞后的&quot;&gt;&lt;a href=&quot;#标准往往是滞后的&quot; class=&quot;headerlink&quot; title=&quot;标准往往是滞后的&quot;&gt;&lt;/a&gt;标准往往是滞后的&lt;/h2&gt;&lt;p&gt;  通常由于业务的需要，Web技术不断的向前推动，但是由于标准往往是落后于现实的，所以这种情况下，不兼容是必然会产生的。&lt;br&gt;  典型的例子就是ajax技术最初是由微软发起的，在IE平台下是一个ActiveX对象。而W3C由于定义规范与多平台的原因，是不可能定义成为ActiveX的。&lt;br&gt;  所以当W3C标准支持ajax时，它的名称就被定义成为了XMLHttpRequest。&lt;br&gt;  这些当标准出来后，新的代码就需要去兼容标准的与非标准的代码。&lt;/p&gt;
&lt;h1 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;兼容性问题是一个永存的问题&lt;br&gt;不会随着版本的升级而消失，但是我们上面提到的很多内容会随着版本的升级与时间的推移消失。象几乎标准模式，怪异模式，DTD，旧版本上的bug，因为滞后标准所带来的功能缺失。&lt;br&gt;但是对于浏览器的功能，展示不统一，新版的浏览器bug，新标准的不一致等问题是永远会存在的。&lt;br&gt;所以在浏览器问题上没有一个一劳永逸的解决办法，只是有些原则或者理解是可以保留下来的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;标准模式下，一样存在着兼容性的问题&lt;br&gt;所以对于大多数网页开发者来说，最重要的要理解的一点是，即使你是标准模式，你也是需要解决浏览器兼容性问题的。浏览器标准模式是现代网页开发技术的基础。没有了标准模式，开发网页的技术基础就没有了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;标准并不见得都是好的&lt;br&gt;网页标准的制定者是人，人就难免是主观的，会出错的。所以标准只是标准，并不能表示它有多好，多正确。标准往往有时候是违反人性或者习惯的。&lt;br&gt;这种标准最终往往是随着时间的流逝而被抛弃。比如XHTML，去除a标签的href属性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上述内容，我们简单的回顾了网页开发上面的兼容性问题，目标在于帮助开发者理解这些兼容性问题产生的原因，并以此找到解决问题的办法。&lt;br&gt;(由于水平所限，以上内容出错在所难免，欢迎批评指正)&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;浏览器兼容性的问题是一个相对比较复杂的问题，也是困扰了很多开发人员的常见问题。&lt;br&gt;今天我准备从原理的角度分析一下，浏览器的兼容性问题到底有那些,应该如何解决。&lt;br&gt;但是我不会特别具体的讲解浏览器的具体兼容性问题，因为这个部分的内容过于多了，而且很多已经过时了。&lt;br&gt;
    
    </summary>
    
      <category term="前端技术" scheme="http://blog.3gcnbeta.com/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="W3C" scheme="http://blog.3gcnbeta.com/tags/W3C/"/>
    
      <category term="标准化" scheme="http://blog.3gcnbeta.com/tags/%E6%A0%87%E5%87%86%E5%8C%96/"/>
    
      <category term="浏览器" scheme="http://blog.3gcnbeta.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>应用viewport进行移动网站开发</title>
    <link href="http://blog.3gcnbeta.com/2014/12/10/%E5%BA%94%E7%94%A8viewport%E8%BF%9B%E8%A1%8C%E7%A7%BB%E5%8A%A8%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91/"/>
    <id>http://blog.3gcnbeta.com/2014/12/10/应用viewport进行移动网站开发/</id>
    <published>2014-12-09T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.938Z</updated>
    
    <content type="html">&lt;p&gt;通常对于手机网页来讲最难解决的问题是在不同手机上的显示很难统一的问题。&lt;br&gt;即没有办法只设计一个页面来适配所有的手机终端。&lt;br&gt;但是设计一个页面适配所有终端的目标对于很多网站开发者来说是很重要的。&lt;br&gt;这也是我的项目发起下面的项目的原因。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/calidion/mobile-viewport-scale&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mobile-viewport-scale&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目旨在解决在不同的屏幕时移动手机端页面的缩放与适配的问题。&lt;/p&gt;
&lt;p&gt;这是一个相对比较麻烦的问题。&lt;br&gt;在之前我们需要将问题明确了，并最终找出来的解决办法，同时还要做适配的问题。&lt;/p&gt;
&lt;p&gt;在阅读本文之前，如果你对于概念不是非常的清楚，可以阅读一下以下有关viewport的文章：&lt;br&gt;&lt;a href=&quot;http://www.quirksmode.org/mobile/viewports.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;viewport1&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.quirksmode.org/mobile/viewports2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;viewport2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;mozilla 社区的关于viewport的相关文章&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Mobile/Viewport_meta_tag?redirectlocale=en-US&amp;amp;redirectslug=Mobile%2FViewport_meta_tag&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;viewport3&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;目标&quot;&gt;&lt;a href=&quot;#目标&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h1&gt;&lt;p&gt;解决现代的智能手机，包括Android, iOS等手机终端的网页统一展示问题&lt;/p&gt;
&lt;h1 id=&quot;背景知识&quot;&gt;&lt;a href=&quot;#背景知识&quot; class=&quot;headerlink&quot; title=&quot;背景知识&quot;&gt;&lt;/a&gt;背景知识&lt;/h1&gt;&lt;p&gt;要解决这个问题，我们将会遇到以下一些概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分辨率(resolution): 一个屏幕的长宽所能显示的最大象素&lt;/li&gt;
&lt;li&gt;像素(pixel): 图形或者显示元素的计量单位&lt;/li&gt;
&lt;li&gt;zoom level: 缩放等级&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;象素相关的显示知识本身也是非常复杂的，对于Web开发者来说，最重要的就是下面两个概念&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS像素: 通过css脚本规定的像素&lt;/li&gt;
&lt;li&gt;设备像素: 移动设备的实际像素&lt;/li&gt;
&lt;li&gt;scale: 缩放比例&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dpi: 每英尺的物理像素点个数&lt;/p&gt;
&lt;p&gt;对于设备像素与CSS像素的比率ratio根据不同的分辨率与系统有所差别：&lt;br&gt;ratio                    像素密度(density)&lt;br&gt;1.0                          &amp;lt;   200dpi&lt;br&gt;1.5                      大于等于00，小于等于300&lt;br&gt;floor(desity/150dpi)     大于300&lt;br&gt;以上都是在scale为1时的值&lt;br&gt;所以对于我们来说，可以使scale变动来得到ratio的值为1：1&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;设备像素-屏幕像素&quot;&gt;&lt;a href=&quot;#设备像素-屏幕像素&quot; class=&quot;headerlink&quot; title=&quot;设备像素(屏幕像素)&quot;&gt;&lt;/a&gt;设备像素(屏幕像素)&lt;/h2&gt;&lt;p&gt;  设备像素是屏幕分辨率所对应的像素，实际上就是硬件的像素。&lt;br&gt;  在浏览器中可以通过 screen.width/height 获得&lt;/p&gt;
&lt;h2 id=&quot;窗口大小&quot;&gt;&lt;a href=&quot;#窗口大小&quot; class=&quot;headerlink&quot; title=&quot;窗口大小&quot;&gt;&lt;/a&gt;窗口大小&lt;/h2&gt;&lt;p&gt;  网页在浏览器上显示的大小&lt;br&gt;  可以通过window.innerWidth 得到 window.innerHeight.&lt;br&gt;  值得注意的是这个大小是包含滚动条的&lt;/p&gt;
&lt;h2 id=&quot;桌面上的viewport&quot;&gt;&lt;a href=&quot;#桌面上的viewport&quot; class=&quot;headerlink&quot; title=&quot;桌面上的viewport&quot;&gt;&lt;/a&gt;桌面上的viewport&lt;/h2&gt;&lt;p&gt;  html元素理论上与viewport的宽度是一样的&lt;br&gt;  viewport的宽度大小理论上是等于窗口的大小的&lt;br&gt;  viewport一开始并不是HTML的结构，所以无法通过CSS来影响它&lt;/p&gt;
&lt;h2 id=&quot;移动端的两个viewport&quot;&gt;&lt;a href=&quot;#移动端的两个viewport&quot; class=&quot;headerlink&quot; title=&quot;移动端的两个viewport&quot;&gt;&lt;/a&gt;移动端的两个viewport&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;layout viewport: 整个页面的viewport&lt;/li&gt;
&lt;li&gt;visual viewport: 移动设备的浏览器窗口大小&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Zoom-Level&quot;&gt;&lt;a href=&quot;#Zoom-Level&quot; class=&quot;headerlink&quot; title=&quot;Zoom Level&quot;&gt;&lt;/a&gt;Zoom Level&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;无法直接获得，可以通过公式 screen.width / window.innerWidth 获得&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;HTML文档的宽度&quot;&gt;&lt;a href=&quot;#HTML文档的宽度&quot; class=&quot;headerlink&quot; title=&quot;HTML文档的宽度&quot;&gt;&lt;/a&gt;HTML文档的宽度&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;document.documentElement.clientWidth&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;meta标签中的viewport&quot;&gt;&lt;a href=&quot;#meta标签中的viewport&quot; class=&quot;headerlink&quot; title=&quot;meta标签中的viewport&quot;&gt;&lt;/a&gt;meta标签中的viewport&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;它是对layout viewport也就是对整个页面的大小的控制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在本项目中主要使用了UserAgent来切换viewport的大小。&lt;/p&gt;
&lt;p&gt;综上知识点，我们可以得到我们的基本原理是这样的：&lt;br&gt;不同的手机有不同的dpi，不同的dpi在scale为1时，web页面的大小(CSS像素宽或者高)与设备大小(设备像素宽或者高)有不同的ratio&lt;br&gt;所以而我们的方式时通过调整scale，将这个ratio保持在1.&lt;/p&gt;
&lt;p&gt;虽然我们只谈到了设备与页面的分辨率，但是由于页面的解释是通过浏览器实现的，对于不同的浏览器解释的方式是不同的，所以要保持这个ratio有时跟浏览器也会相关上。&lt;/p&gt;
&lt;p&gt;所以这个过程是这样实现的，根据&lt;br&gt;1、设备信息得到专有的scale&lt;br&gt;2、根据操作系统得到专有的scale&lt;br&gt;3、根据浏览器得到专有的scale&lt;/p&gt;
&lt;p&gt;得到scale的方式应该是非常多样的，一般来讲按以上的优先级就可以得到正确的ratio。&lt;/p&gt;
&lt;p&gt;由于项目的发布方式还没有确定，所以以下内容将会随时修改。&lt;/p&gt;
&lt;p&gt;项目代码的使用方法：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[mvs.]setDevice(navigator.userAgent)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样整个网站就可以自动适配手机的终端大小&lt;/p&gt;
&lt;p&gt;[本完尚未完全完成，将会不断的细化相关的知识点]&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;通常对于手机网页来讲最难解决的问题是在不同手机上的显示很难统一的问题。&lt;br&gt;即没有办法只设计一个页面来适配所有的手机终端。&lt;br&gt;但是设计一个页面适配所有终端的目标对于很多网站开发者来说是很重要的。&lt;br&gt;这也是我的项目发起下面的项目的原因。&lt;/p&gt;
&lt;p&gt;&lt;a href
    
    </summary>
    
      <category term="前端技术" scheme="http://blog.3gcnbeta.com/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="移动" scheme="http://blog.3gcnbeta.com/tags/%E7%A7%BB%E5%8A%A8/"/>
    
      <category term="viewport" scheme="http://blog.3gcnbeta.com/tags/viewport/"/>
    
  </entry>
  
  <entry>
    <title>利用font-size等于0来实现inline-block的任意格式化</title>
    <link href="http://blog.3gcnbeta.com/2014/11/07/%E5%88%A9%E7%94%A8font-size%E7%AD%89%E4%BA%8E0%E6%9D%A5%E5%AE%9E%E7%8E%B0inline-block%E7%9A%84%E4%BB%BB%E6%84%8F%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
    <id>http://blog.3gcnbeta.com/2014/11/07/利用font-size等于0来实现inline-block的任意格式化/</id>
    <published>2014-11-06T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.938Z</updated>
    
    <content type="html">&lt;p&gt;通常对于inline-block元素，我们都不能在它们的中间放入空格，否则就会影响到相应的布局。&lt;br&gt;但是当你将inline-block作为结构元素来布局时，通常是不希望空格影响到你的布局。这时你可以考虑将font-size调整为0来取消空格产生的影响。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt; &amp;gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;vertical-align&lt;/span&gt;: top;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;list-style&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#454545&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#fff&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;128px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;24px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt; &amp;gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.active&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-bottom&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4px&lt;/span&gt; solid &lt;span class=&quot;number&quot;&gt;#4560e9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;比如在font-size=0之前，HTML代码必须是这样的。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;active&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;全部&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;待付款&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;已付款&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;待评价&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;more&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;更多&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;font-size=0之后，&lt;br&gt;代码就可以变成是这样的：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;active&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;全部&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;待付款&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;已付款&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;待评价&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;more&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;更多&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这时inline-block之间的空格就被忽略了，从而实现了通过inline-block来实现block的效果。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;通常对于inline-block元素，我们都不能在它们的中间放入空格，否则就会影响到相应的布局。&lt;br&gt;但是当你将inline-block作为结构元素来布局时，通常是不希望空格影响到你的布局。这时你可以考虑将font-size调整为0来取消空格产生的影响。&lt;/p&gt;
&lt;fig
    
    </summary>
    
      <category term="前端技术" scheme="http://blog.3gcnbeta.com/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Centos 6.4上安装 node canvas </title>
    <link href="http://blog.3gcnbeta.com/2014/07/07/centos-6-4%E4%B8%8A%E5%AE%89%E8%A3%85-node-canvas/"/>
    <id>http://blog.3gcnbeta.com/2014/07/07/centos-6-4上安装-node-canvas/</id>
    <published>2014-07-06T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.938Z</updated>
    
    <content type="html">&lt;p&gt;首先安装：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install cairo cairo-devel cairomm-devel libjpeg-turbo-devel pango-devel&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后再&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install canvas&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;首先安装：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;
    
    </summary>
    
      <category term="其它" scheme="http://blog.3gcnbeta.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu 14.04升级后字体变难看解决办法</title>
    <link href="http://blog.3gcnbeta.com/2014/06/25/ubuntu-14-04%E5%8D%87%E7%BA%A7%E5%90%8E%E5%AD%97%E4%BD%93%E5%8F%98%E9%9A%BE%E7%9C%8B%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://blog.3gcnbeta.com/2014/06/25/ubuntu-14-04升级后字体变难看解决办法/</id>
    <published>2014-06-24T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.938Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get remove fonts-arphic-ukai fonts-arphic-uming&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
    
    </summary>
    
      <category term="其它" scheme="http://blog.3gcnbeta.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>nodejs发送HTTS请求</title>
    <link href="http://blog.3gcnbeta.com/2014/06/23/nodejs%E5%8F%91%E9%80%81htts%E8%AF%B7%E6%B1%82/"/>
    <id>http://blog.3gcnbeta.com/2014/06/23/nodejs发送htts请求/</id>
    <published>2014-06-22T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.938Z</updated>
    
    <content type="html">&lt;p&gt;nodejs的https请求如何不加以配置会出来很多错误。&lt;/p&gt;
&lt;p&gt;下面是经过测试的一段nodejs发送HTTPS请求的代码，主要是要注意Options里的几个参数的内容。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; options = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host: serverHost,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  port: serverPort,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  method: &lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  path: &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  headers: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  rejectUnauthorized: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  requestCert: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  agent: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  secureProtocol: &lt;span class=&quot;string&quot;&gt;&#39;SSLv3_method&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; https = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;https&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; req = https.request(options, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;res&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;init request&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(res.statusCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.on(&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.write(&lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.stringify(data));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.on(&lt;span class=&quot;string&quot;&gt;&#39;error&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.error(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;nodejs的https请求如何不加以配置会出来很多错误。&lt;/p&gt;
&lt;p&gt;下面是经过测试的一段nodejs发送HTTPS请求的代码，主要是要注意Options里的几个参数的内容。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table
    
    </summary>
    
      <category term="WEB服务器技术" scheme="http://blog.3gcnbeta.com/categories/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="nodejs" scheme="http://blog.3gcnbeta.com/categories/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%80%E6%9C%AF/nodejs/"/>
    
    
  </entry>
  
  <entry>
    <title>socket.io 1.0介绍</title>
    <link href="http://blog.3gcnbeta.com/2014/06/02/socket-io-1-0%E4%BB%8B%E7%BB%8D/"/>
    <id>http://blog.3gcnbeta.com/2014/06/02/socket-io-1-0介绍/</id>
    <published>2014-06-01T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.938Z</updated>
    
    <content type="html">&lt;p&gt;原文：&lt;a href=&quot;http://socket.io/blog/introducing-socket-io-1-0/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://socket.io/blog/introducing-socket-io-1-0/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Socket.IO的第一个版本在Node.JS出现的不久就出来了。我之前很长时间里都在寻找方便地将数据从服务器端推到客户端的框架，也偿试了很多其它的服务器端的javascript方案。&lt;br&gt;在那个时候，主要的关注点在于实现一个与WebSocket的API相同的接口，那里的WebSocket正在标准化中并且即将完成的。我很幸运那时收获了很多来自社区（包括Node.JS的创始人）的反馈，这些反馈促进了项目的演进，也使它发生了明显的变化，变的更加好用。&lt;br&gt;Socket.IO慢慢的就变成了Web上的事件发生器（EventEmitter)。今天我会介绍一下1.0上取得的工作成果并展望一下未来。&lt;br&gt;Socket.IO 1.0里有不少需要说明的地方，如果你的时间宝贵，你可以选择一些你感兴趣的主题去了解：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;新引擎&lt;br&gt;二进制的支持&lt;br&gt;自动测试&lt;br&gt;可规模化(Scalability)&lt;br&gt;集成&lt;br&gt;更好的测试&lt;br&gt;流水化的API（精简，高效）&lt;br&gt;CDN分发&lt;br&gt;未来的创新&lt;br&gt;感谢&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;#新引擎&lt;/p&gt;
&lt;p&gt;Socket.IO的代码已经不再处理传输与浏览器兼容的事情了。那些工作已经并入到我们完善了几个月的新模块Engine.IO里面了，Engine.IO是一套类WebSocket风格的API实现。 这个专门的模块化处理带来的好处不能不提一下：&lt;br&gt;对于Socket.IO的最终用户来说，没有什么需要改变的。只要换上新的版本就可以。&lt;br&gt;大量的简化，在代码规模与测试覆盖方面&lt;br&gt;Socket.IO的服务端只有1234行代码&lt;br&gt;Socket.IO的客户端只有976行代码.&lt;br&gt;面向未来的灵活性&lt;br&gt;如果WebSocket是你想支持的唯一的传输方式，那你直接使用Engine.IO即可（它包括了所有兼容浏览器使用方法），他可以无缝的被替换成WebSocket接口。&lt;br&gt;其它方式的传输比如常规的Node.JS的TCP的Socket或者Google Chrome Socket也可以很方便的实现。&lt;br&gt;这种分离让我们可以不断的改进与完善传输层。在这些改进中，我最喜欢的是引入了一个叫做传输特征检测的想法。&lt;br&gt;在Web开发上，简单的通过检测用户代理(User Agent)来确定使用什么API或者开启那些功能曾经是相当普遍的。但是随着JavaScript的基础代码变的越来越复杂且成熟，为了得到最大的可靠性，直接测试API来确实行为是否符合预期的方式将会显得越来越合理。&lt;br&gt;比如简单的检查JSON全局变量是否存在不能保证JSON.stringify就是可以用的，甚至也不能表明它一定存在。很有可能意味着用户定义了一个他们自己的JSON全局变量或者环境里存在着一个已经被破坏的JSON实现。&lt;br&gt;Socket.IO从不会假设WebSocket一定可以工作，因为在实际中它不能正常工作的机会是很大的。因此，它会首先使用XHR或者JSONP建立一个连接，然后试图升级这个连接到WebSocket上。相比于那些依靠超时来处理失败的方式，这种方式不会让你的用户有体验变差的感觉。&lt;/p&gt;
&lt;p&gt;#二进制的支持&lt;br&gt;用户们对支持发送二进制数据的能力的要求已经有相当一段时间了，在WebSocket添加了这一个支持之后变的更加明显。&lt;br&gt;最大的问题在于如果我按WebSocket API的方式来做为我们支持二进制的模型，那么他的可用性将会大大的打折。WebSocket要求你的Socket模式要么是“字符模式”，要么是“二进字模式”。&lt;/p&gt;
&lt;p&gt;var socket = new WebSocket(‘ws://localhost’);&lt;br&gt;socket.binaryType = ‘arraybuffer’;&lt;br&gt;socket.send(new ArrayBuffer);&lt;/p&gt;
&lt;p&gt;这对于底层的API来说是好的，这也是Engine.IO支持的方式。但是对于应用开发人员来说，很可能他们不想要一个只能发送blob（binary large object / basic large object) 的东西或者每次都要手动将数据转成blob的接口。&lt;br&gt;所以Socket.IO现在支持在任何数据结构中发送Buffer(来自于Node.JS端), Blob, ArrayBuffer甚至File：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var fs = require(&amp;apos;fs&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var io = require(&amp;apos;socket.io&amp;apos;)(3000);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;io.on(&amp;apos;connection&amp;apos;, function(socket)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fs.readFile(&amp;apos;image.png&amp;apos;, function(err, buf)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // it&amp;apos;s possible to embed binary data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // within arbitrarily-complex objects&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    socket.emit(&amp;apos;image&amp;apos;, &amp;#123; image: true, buffer: buf &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为了测试这种特殊的二进制支持究竟有多有用（同时作为一个喜欢将结果可视化的极客），我决定对Twitch Play Pokemon用100%Javascript进行复制的试验。通过使用基于Javascript的gameboy-emulator, node-canvas, socket.io，我们完成了一个甚至能在IE8工作的由服务器渲染的交互游戏。 可以到这里查看 &lt;a href=&quot;http://weplay.io(源码在这里&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://weplay.io(源码在这里&lt;/a&gt;)&lt;br&gt;发送图片信息的相关代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;self.canvas.toBuffer(function(err, buf)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if (err) throw err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  io.emit(&amp;apos;frame&amp;apos;, buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下一个试验是运行一个QEMU的实例。这个实例里运行着一个Windows XP的镜像，以此来纪念XP的退休。每个玩家可以得到15秒的机会来控制这个机器。demo在这里&lt;a href=&quot;http://socket.computer。这里有一段你通常可能会看到的场景的视频：&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://socket.computer。这里有一段你通常可能会看到的场景的视频：&lt;/a&gt;&lt;br&gt;将这个DEMO放到一起的关键部分在于连接QEMU的VNC服务器和实现RFB协议。跟NODE.JS平常的方式一样，这个方案也就是在npm里搜索rfb就能搞定的。&lt;br&gt;实际上为了最好的性能，降低延时，最好只通知客户端屏幕变化的部分。比如，如果你移动鼠标，只有包含了鼠标的很小块屏幕会被通知。node-rfb2模块会给我们一个包含对象的矩形事件如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  x: 103,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  y: 150,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  width: 200,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  height: 250,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  data: Buffer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这时我就清楚的看到支持二进制数据的价值了。我只需要调用io.emit并将那个对象传进去，然后让Socket.IO来处理就行了。&lt;br&gt;出于好玩，我也安装并运行了我最喜欢的第一人称射击游戏：&lt;/p&gt;
&lt;p&gt;#自动测试&lt;br&gt;第个提交到Socket.IO的代码基线都会触发一个测试矩阵，覆盖25个浏览器，包括Android和iOS。我们通过在你的计算机上建立一个反向隧道到临时端口（这样外界就可以访问这个计算机）的方式来建立无缝的测试，然后将这些测试在Sauce Labs的云上执行，这云主要负责可视化和调用所有我们关心的环境下的浏览器。&lt;/p&gt;
&lt;p&gt;#规模化&lt;br&gt;我们对多房间与多节点规模化的处理已经作了相当程度的简化。Socket.IO不会在节点之间相互的存储或者复制数据，它现在只关心如何将事件进行传输。如果你想将Socket.IO扩大到多个节点上，那么只需要两个简单的步骤：&lt;br&gt;开启粘性负载均衡(sticky load balancing)（比如通过原始IP地址)。这样可以保证象long-polling这样的连接可以将请求路由到同一个节点，这样消息缓存就可以被保存下来 。&lt;br&gt;实现socket.io-redis适配器&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var io = require(&amp;apos;socket.io&amp;apos;)(3000);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var redis = require(&amp;apos;socket.io-redis&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;io.adapter(redis(&amp;#123; host: &amp;apos;localhost&amp;apos;, port: 6379 &amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;由于步骤简化，导致我们废弃了Sokcet#set和Socket#get这两个API。现在如果你想广播，包就可以很容易的被编码，也很容易被发布到其它节点上去，同时又不需要处理存储的问题。&lt;br&gt;这也方便我们进入到另一个话题：与其它的后端的集成。&lt;br&gt;集成&lt;br&gt;很多时候，你已有应用的布署环境是由很多语言和框架写成的，并不是只有Node.JS.即使他是全部用Node.JS写的，你可能在什么时候也想将你的应用拆分成几个不同的进程。&lt;br&gt;比如一个进程负责提供Socket.IO的服务，接收连接，处理身份验证等，而另一个后端可能会负责生产消息。&lt;br&gt;对于那样的终端，我们引入了socket.io-emitter项目，他会把钩子挂进socket.io-redis里，然后你就可以很容易的在任何地方发起一个事件到浏览器了。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var io = require(&amp;apos;socket.io-emitter&amp;apos;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setInterval(function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  io.emit(&amp;apos;time&amp;apos;, new Date);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, 5000);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Tony Kovanen已经创建了一个PHP的实现&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$emitter = new SocketIOEmitter(array(&amp;apos;port&amp;apos; =&amp;gt; &amp;apos;6379&amp;apos;, &amp;apos;host&amp;apos; =&amp;gt; &amp;apos;127.0.0.1&amp;apos;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$emitter-&amp;gt;emit(&amp;apos;event&amp;apos;, &amp;apos;wow&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样就能很方便的让现有的应用转成一个实时的应用。&lt;br&gt;更好的调试&lt;br&gt;Socket.IO现在已经完全被TJ Holowaychuk创建的简约而又无比强大的叫做debug的工具所武装。&lt;br&gt;过去，Socket.IO的服务器默认会将所有的事情都log到console里去。这让很多用户觉得非常不爽（当然也有很多用户觉得非常有用），同时也违反了UNIX哲学里的安静规则（Rule of Silence）&lt;br&gt;安静规则：开发者应该这样设计程序，他们不会打印没有必要的输出。这个规则的目标是允许其它程序和开发人员可以选出他们需要的信息，而不用分析不重要的内容。&lt;br&gt;基本的想法是每个被Socket.IO使用的模块都会提供不同的调试范围，这样你就可以看到内部是如何动作的。默认所有的输出都是关掉的，但是你可以调整参数来查看消息，方法是（在Node.JS端）提供一个DEBUG环境变量或者（浏览器端）提供localStorage.debug属性。&lt;br&gt;你可以到我们的主页上看到实际的使用情况：&lt;br&gt;流线行的API&lt;br&gt;socket.io模块现在已经直接输出绑定函数了（之前是.listen）。&lt;br&gt;现在绑定socket.io到一个HTTP服务器更加容易了。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var srv = require(&amp;apos;http&amp;apos;).Server();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var io = require(&amp;apos;socket.io&amp;apos;)(srv);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或者让它侦听某个端口。&lt;br&gt;var io = require(‘socket.io’)(8080);&lt;br&gt;之前，为了表达所有的连接，你不得不用io.sockets.现在你可以直接在io上调用：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;io.on(&amp;apos;connection&amp;apos;, function(socket)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  socket.emit(&amp;apos;hi&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;io.emit(&amp;apos;hi everyone&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;#CDN发布&lt;/p&gt;
&lt;p&gt;我们之前做出得最好的决定就是要实现一个Socket.IO服务器不但要让你能用上实时协议，同时自己也要服务好客户端。&lt;/p&gt;
&lt;p&gt;通常，你们所有人都会包含一个这样的代码片段：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script src=&amp;quot;/socket.io/socket.io.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果你想优化你的客户端体验，让你的用户访问离他最近的文件，同时提供最大的级别的gzip压缩（感谢Google的zopfli）和适当的缓存支持，你现在可以使用我们的CDN了。他是免费的，永久，同时原生支持SSL。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script src=&amp;quot;https://cdn.socket.io/socket.io-1.0.0.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;#未来的创新&lt;/p&gt;
&lt;p&gt;Socket.IO项目的核心将会继续通过很多经常的发布来改进，主要的目标是提供可靠性，速度，降低代码量，更易维护。Socket.IO 2.0将可能会看到我们放弃支持一些老的浏览器，并去除一些模块，比如JSON串行化模块。&lt;/p&gt;
&lt;p&gt;大部分的改进将在核心代码外进行。下面是一些我会重点关注的项目：&lt;/p&gt;
&lt;p&gt;#socket.io-stream&lt;/p&gt;
&lt;p&gt;通过添加这个插件，你可以发送流对象，这样你可以编写一些内存高效的程序。在第一个例子中，我们在发送前加载了一个文件到内存中，但是下面的代码是可以工作的：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var fs = require(&amp;apos;fs&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var io = require(&amp;apos;socket.io&amp;apos;)(3000);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;require(&amp;apos;socket.io-stream&amp;apos;)(io);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;io.on(&amp;apos;connection&amp;apos;, function(socket)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  io.emit(fs.createReadStream(&amp;apos;file.jpg&amp;apos;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样在客户端你就会收到一个流对象并触发数据事件。&lt;/p&gt;
&lt;p&gt;#工具&lt;/p&gt;
&lt;p&gt;当你使用 Socket.IO时，你不用关心传输，包，帧，TCP或者WebSocket。你关心的是什么事件被发送，什么事件会过来。&lt;/p&gt;
&lt;p&gt;我们的目标是提供Web Inspector或者 Firefox Developer Tools插件，让你可以很容易的查到什么事件被发送了，在什么时候，用了什么参数。&lt;/p&gt;
&lt;p&gt;这个项目现在正由Nick LaGrow (Github), Samaan Ghani (Github) and David Cummings (Twitter)这些天才们领导开发中。&lt;/p&gt;
&lt;p&gt;#对新语言和框架的支持&lt;/p&gt;
&lt;p&gt;现在已经有很多精力投入到了精确化的文档化Engin.IO协议和Socket.IO协议当中。&lt;/p&gt;
&lt;p&gt;这样做的主要目标是让Node.JS的服务器与客户端成为其它语言与框架的参考实现。&lt;/p&gt;
&lt;p&gt;能够在更大的生态系统中提供这种互操作性是我们2014年以及之后的最大的目标。&lt;/p&gt;
&lt;p&gt;#感谢&lt;/p&gt;
&lt;p&gt;这个版本是一个大团队的成果。特别感谢我们新的核心团队：&lt;/p&gt;
&lt;p&gt;Tony Kovanen (Github / Twitter)  Engine.IO上的优异的工作以及对iOS和IE各版本支持的方案，同时帮忙建立了这个网站和组织文档&lt;/p&gt;
&lt;p&gt;Kevin Roark (Github) 在引擎之上的新Socket.IO分析器的所有的开发工作，Socket.IO Computer的Demo，在文档，问题，请求上的帮助&lt;/p&gt;
&lt;p&gt;Roman Shtylman (Github / Twitter)  zuul和localtunnel上的工作，我们测试架构的核心和我们稳定使命的核心&lt;/p&gt;
&lt;p&gt;然后是不分排名的感谢：&lt;/p&gt;
&lt;p&gt;Jay Borenstein (LinkedIn) for selecting Socket.IO as one of the projects to mentor students on Open Source engineering as part of the Open Academy project.&lt;/p&gt;
&lt;p&gt;Michael Srb (Github), Mark Mokryn (Github), Eugen Dueck (Github), Afshin Mehrabani (Github), Christoph Dorn (Github) and Mikito Takada (Github) for several key Engine.IO patches.&lt;/p&gt;
&lt;p&gt;Grant Timmerman (Github / Twitter) for his outstanding work on the new Socket.IO example chat application, and multiple patches and issues investigation.&lt;/p&gt;
&lt;p&gt;Jxck (Github / Twitter) for his work on translation, documentations and patches. ありがとう&lt;/p&gt;
&lt;p&gt;Arnout Kazemier (Github / Twitter) for his multiple contributions to Engine.IO and Socket.IO&lt;/p&gt;
&lt;p&gt;Sauce Labs (Github / Twitter) for supporting open source projects with free testing infrastructure.&lt;/p&gt;
&lt;p&gt;Shihui Song (Github), Qiming Fang (Github) and Erluo Li for their work on testing infrastructure.&lt;/p&gt;
&lt;p&gt;Julian Salazar (Github) and Tianyiu Liu (Github) for their work on reconnection and ongoing research into resource sharing between browser tabs and messages synchronization.&lt;/p&gt;
&lt;p&gt;Gal Koren (Github) for his fantastic work into modularization of the codebases.&lt;/p&gt;
&lt;p&gt;Matt Walker (Twitter) for the beautiful Socket.IO logo.&lt;/p&gt;
&lt;p&gt;最后我非常感谢我的公司Automattic，它是一个开源创新的大家庭。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;原文：&lt;a href=&quot;http://socket.io/blog/introducing-socket-io-1-0/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://socket.io/blog/introducing-socket-io-
    
    </summary>
    
      <category term="民工翻译" scheme="http://blog.3gcnbeta.com/categories/%E6%B0%91%E5%B7%A5%E7%BF%BB%E8%AF%91/"/>
    
    
  </entry>
  
  <entry>
    <title>为什么我推荐requirejs 而不是seajs?</title>
    <link href="http://blog.3gcnbeta.com/2014/05/27/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E6%8E%A8%E8%8D%90requirejs-%E8%80%8C%E4%B8%8D%E6%98%AFseajs/"/>
    <id>http://blog.3gcnbeta.com/2014/05/27/为什么我推荐requirejs-而不是seajs/</id>
    <published>2014-05-26T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;1、AMD比CMD更符合前端开发，为了实现所谓的CMD，在非node环境中增加exports变量，是一种不必要的负担。&lt;/p&gt;
&lt;p&gt;2、前端的模块化更关注的应该是模块化开发，自动发布，自动打包，自动压缩，而不是关注模块的加载。&lt;/p&gt;
&lt;p&gt;  并且将多个模块打包成一个文件的性能比加载多个小文件的性能本身要好很多。&lt;/p&gt;
&lt;p&gt;  原理同CSS Sprites。&lt;/p&gt;
&lt;p&gt;  requirejs 虽然是提前加载，但是打包压缩后一般都只会有一个文件，即使淘宝这样的大站，也完全可以将javascript合并成少数几个大的文件，这样引入后互不影响各自的执行。&lt;/p&gt;
&lt;p&gt;  如果说等到执行了再加载，显然是一种很可笑的方式。为了执行一个小动作，让用户再等你加载半天，这不是搞笑吗？&lt;/p&gt;
&lt;p&gt;  这种思维本身就不太符合前端模块化的意义。&lt;/p&gt;
&lt;p&gt;3、根据2的分析，我们可以这样认为：前端模块化实际上是在开发与调试的过程是最重要的。seajs将模块化与动态加载放在生产环境，显然不是太实际的做法。jQuery如果不打包，他本身的模块就有几十个。难道每个都动态加载吗？&lt;/p&gt;
&lt;p&gt;个人认为seajs作者对javascript的模块化的理解也是有限制的。所以才会将CMD当成是前端的一个模块化标准。前端代码的模块化与后端代码的模块化的意义是完全不同的。&lt;/p&gt;
&lt;p&gt;前端代码是运行于浏览器端的，每次执行都需要更新，探测原文的状态，而后端代码是常驻内存的。不需要探测，并且nodejs的代码是只加载一次的，不管模块化用了多少文件，他都会在执行时加载进来，并且常驻内存。所以在前端引入CMD是一种搞笑的做法。&lt;/p&gt;
&lt;p&gt;4、环境的支持&lt;/p&gt;
&lt;p&gt;requirejs跟很多js的相关环境有着很好的配合，无论是nodejs, grunt, yeoman， bower, uglify, 都对requirejs有很好的支持,&lt;/p&gt;
&lt;p&gt;seajs虽然也在支持grunt，但是由于很多东西自己搞了一套，浪费时间，重造轮子，测试不充分，不保证一定是方便或者高效的。 特别是打包后的问题非常多。这说明成熟度也不及requirejs.&lt;/p&gt;
&lt;p&gt;5、requirejs + grunt对于javascript source map有很好的支持。而seajs因为无力维护暂时已经去除这个功能了。而javascript 的source map是HTML5的一个最新的功能特征。&lt;/p&gt;
&lt;p&gt;6、seajs的推广方式让人恶心，一个出了中国就没有人用的东西，鼓吹自己有多好，中国的软件思维连国外的零头都没有，就学会了吹牛，这种风气不可取。&lt;/p&gt;
&lt;p&gt;除了一些主观的因素，无论从成熟度与应用的广度来说，seajs都不如requirejs，建议使requirejs保持与世界的连接。&lt;/p&gt;
&lt;p&gt;PS:最近跟阿里的seajs开发人员展开了争论，发现不但他们没有理解工程化是什么意思。&lt;/p&gt;
&lt;p&gt;还发了加载100个代表的测试。&lt;/p&gt;
&lt;p&gt;结果由于网络问题，速度反而低于requirejs，直接给自己打脸。&lt;/p&gt;
&lt;p&gt;纯属笑果特别好的事情。&lt;/p&gt;
&lt;p&gt;随后删除我反对他们的观念的帖子。&lt;/p&gt;
&lt;p&gt;下面我将他们还没有删除的内容复制过来防止被删除而丢失。&lt;/p&gt;
&lt;p&gt;1、&lt;/p&gt;
&lt;p&gt;@houchengli 你的理解是对的。&lt;/p&gt;
&lt;p&gt;作者对于AMD的价值都没有领会，还搞什么按需加载。&lt;/p&gt;
&lt;p&gt;显然是一种错误的前端开发的理念。&lt;/p&gt;
&lt;p&gt;真不知道为什么有人开发了这么多软件，反而不能理解现实。&lt;/p&gt;
&lt;p&gt;我只能呵呵这种按需要加载的可笑想法。&lt;/p&gt;
&lt;p&gt;我写了点对比，被你们团队说成是眼界不够。呵呵。&lt;/p&gt;
&lt;p&gt;眼界如果没有对应的理念与基础做支撑，那么看的再多，也只能是阿斗，做不了诸葛亮未出茅庐而知天下三分。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.3gcnbeta.com/wordpress/2014/05/27/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E6%8E%A8%E8%8D%90requirejs-%E8%80%8C%E4%B8%8D%E6%98%AFseajs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.3gcnbeta.com/wordpress/2014/05/27/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E6%8E%A8%E8%8D%90requirejs-%E8%80%8C%E4%B8%8D%E6%98%AFseajs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;留言的那位对ES6很推崇，但是他忽略了现实。&lt;/p&gt;
&lt;p&gt;不是上了标准的东西就一定是好的东西。&lt;/p&gt;
&lt;p&gt;学会独立思考结合实际应用的便利性与人性才是一个技术产品的核心。&lt;/p&gt;
&lt;p&gt;HTML标准也好，CSS的标准也好，JS的标准也好，没有一次是将问题全部解决的。有些还引入新的问题。所以对标准的盲目崇拜是可笑的。混淆前后端的差异也是可笑的。一个全端程序员不是在于他能混淆前后端开发，而是在于他能清楚的区分前后端的开发。&lt;/p&gt;
&lt;p&gt;2、&lt;/p&gt;
&lt;p&gt;seajs只要满足你们自己的需求，你们发布，推广。&lt;/p&gt;
&lt;p&gt;我没有意见。&lt;/p&gt;
&lt;p&gt;但是希望不要扩展到AMD就不行了这种言论。&lt;/p&gt;
&lt;p&gt;技术好不好并不能决定技术的寿命，市场需求才是。&lt;/p&gt;
&lt;p&gt;AMD不一定最终笑到最后， CMD就能笑到最后？&lt;/p&gt;
&lt;p&gt;关于我的观点已经在我的博客里说的很清楚了。&lt;/p&gt;
&lt;p&gt;前端代码即使复杂也不过一个页面，你总不能放个几百M的js上去吧。&lt;/p&gt;
&lt;p&gt;能复杂到那里去？&lt;/p&gt;
&lt;p&gt;任何页面将一个页面的代码从分离的小文件打包成1个或者几个文件就足够了。&lt;/p&gt;
&lt;p&gt;并且AMD能让用户在看到内容后的空闲时间里加载js脚本。&lt;/p&gt;
&lt;p&gt;再加上服务器缓存与文件数的减少，不但前端压力减少，后端压力也明显的减少。&lt;/p&gt;
&lt;p&gt;所以希望你能给出除了运行时加载外的其它理由。至少从淘宝的主页来看，实践了很差的js加载。&lt;/p&gt;
&lt;p&gt;要是都象淘宝网首页那样动不动出来几十个这种js脚本的话。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://p.tanx.com/ex?i=mm_12852562_1778064_13670999&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://p.tanx.com/ex?i=mm_12852562_1778064_13670999&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;确实还是需要运行时动态加载的。&lt;/p&gt;
&lt;p&gt;我真不知道为什么有ajax了，还这么需要javascript的运行时加载？&lt;/p&gt;
&lt;p&gt;即使是跨域，老外都给你弄好了jsonp了或者socket.io了。&lt;/p&gt;
&lt;p&gt;我想说服别人很简单，摆事实，讲道理。&lt;/p&gt;
&lt;p&gt;如果你能将seajs的场景说的很清楚，并且通过数据说明seajs确实比requirejs强很多。那么没有人会反对你的意见。&lt;/p&gt;
&lt;p&gt;最怕就是数据不充分，理由不充足，结论出来了。&lt;/p&gt;
&lt;p&gt;至少目前来看requirejs + grunt + source map我认为已经很好的解决了依赖，性能，调试，工程化的问题。&lt;/p&gt;
&lt;p&gt;对于ES6来说，没有任何迹象表明 AMD有什么问题。&lt;/p&gt;
&lt;p&gt;反而看到ES6后，你会觉得AMD多么干净可爱.&lt;/p&gt;
&lt;p&gt;技术不只是要可用，还要好用，性感。（当然这是主观的看法）&lt;/p&gt;
&lt;p&gt;这才是prototypejs与jQuery比落败的原因。&lt;/p&gt;
&lt;p&gt;你们也想想seajs有没有这种特点呢？&lt;/p&gt;
&lt;p&gt;我觉得你们写的一堆东西，自己用就行了。千万不要乱推广。&lt;/p&gt;
&lt;p&gt;国内历史上推广过很多错误或者理念错误的东西：&lt;/p&gt;
&lt;p&gt;比如DIV+CSS，&lt;/p&gt;
&lt;p&gt;比如RIA VS HTML5，&lt;/p&gt;
&lt;p&gt;比如自由软件就是免费软件&lt;/p&gt;
&lt;p&gt;我不否认你们的工作，但是希望不要忘记技术本源来自于国外，更不要拿错误的理解来当成是正确的。&lt;/p&gt;
&lt;p&gt;相比于国内，我相信国外的技术理念更先进。谢谢。&lt;/p&gt;
&lt;p&gt;3、&lt;/p&gt;
&lt;p&gt;看好国外的技术跟不用汉字是如何联系到一起的？&lt;/p&gt;
&lt;p&gt;这种逻辑水平难怪做的seajs这么坑。&lt;/p&gt;
&lt;p&gt;这也难怪开发了这么多前端应用，还理解不了前端工程化应该如何做。&lt;/p&gt;
&lt;p&gt;表面上是提供很多东西，实际上是将人引导到错误的方向。&lt;/p&gt;
&lt;p&gt;就象中国的地沟油，表面上是油，实际上是毒。&lt;/p&gt;
&lt;p&gt;有时候不做比做好。&lt;/p&gt;
&lt;p&gt;4、(已被删除，回忆补写）&lt;/p&gt;
&lt;p&gt;&lt;del&gt;测试结果打脸，刚好说明异步加载很多js是脑残行为。 假设requirejs只会写一个茴字，seajs最多是会写四个茴字，没有任何意义。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;5、&lt;/p&gt;
&lt;p&gt;发个测试，结果深度打脸，两个人测试的结果都是requirejs快。&lt;/p&gt;
&lt;p&gt;本周最佳笑点。&lt;/p&gt;
&lt;p&gt;6、&lt;/p&gt;
&lt;p&gt;@fundon 核心缺点在博客里已经点出来了。对js所谓的懒加载是我认为的愚蠢加载。 js作为功能的基础设施，首先在每个页面就应该控制他的大小，如果代码多到需要大量所谓的懒加载，一定是写的有问题。从淘宝的页面来看，不少地方写的挺烂的。你去看google的网站，大部分的页面的js都是100K左右的。而淘宝基本都是10几K，几十K。打个包会死人吗？明显浪费互联网资源。&lt;/p&gt;
&lt;p&gt;seajs从理念上看是一种非常糟糕的实践，说多了，会气死一批人。就到此为止。&lt;/p&gt;
&lt;p&gt;走上追求加载一堆js这条邪路是很危险的。&lt;/p&gt;
&lt;p&gt;7、&lt;/p&gt;
&lt;p&gt;@xufei 我说的当然也不限于一个小团队。其实没有必要一方面强调说一个系统不处于一个团队的掌握中，无法打包。难道一个页面不是多个团队或者个人协作共同完成的？ 强调团队不同，无法合作的说法本身就是不成立的。任何规则既然需要考虑团队合作，就应该是能让合作进行的。一方面强调协作困难，一方面又说是一个整体协作的结果，相互矛盾。所以js本质上不存在什么团队分散导致的无法整合问题。如果真的连加载什么如何加载都搞不清楚，那么用了seajs一样是搞不清楚的。&lt;/p&gt;
&lt;p&gt;技术产品的发布一定会有一个总控，并且所有的时候都是以多团队合作作为考虑的基本点的。&lt;/p&gt;
&lt;p&gt;js团队间的合作本身就是比其它的语言方便很多。象我们经常引用jQuery一样，连是什么团队都无需知道。只要这个js设计的合理，管他是谁写的。又怎么可能存在团队的问题？&lt;/p&gt;
&lt;p&gt;动态加载有其好处，但是绝对不是一个必须品。&lt;/p&gt;
&lt;p&gt;关于延时功能，本身意义就不大。&lt;/p&gt;
&lt;p&gt;首先任何javascript脚本都可以通过创建script节点实现动态的加载，跟有没有seajs没有关系。。&lt;/p&gt;
&lt;p&gt;其次就是这种动态加载没有太多意义。一方面无法静态化，一方面增加了交互时延时，还有一方面就是无法享用用户闲时的时间进行加载。特别是当这种加载很多时，还要消耗更多的执行栈，更多的内存，影响性能。&lt;/p&gt;
&lt;p&gt;我说打包意义大，可没说打包后不能再做模块加载。有些人的脑力有限，我就只能呵呵了。自己智商低，不要以为别人的智商跟你一样低。&lt;/p&gt;
&lt;p&gt;对于这种满口只会喷屎的人，我就不想多说了。&lt;/p&gt;
&lt;p&gt;套用李大师的话： 对于一个臭鸡蛋，我不需要吃完再下结论。&lt;/p&gt;
&lt;p&gt;8、&lt;/p&gt;
&lt;p&gt;@lifesinger 我觉得这些话送给你们的团队的人更加合适。如果这个seajs是我写的，我听到这些，估计我会更加开心。因为我的东西可以有更多的改进了。seajs这个项目本身是有意义的，但是当你们否认国外先进的理念时，你们的项目就可能成为地沟油项目。自大不自大我觉得我们自己各自清楚。&lt;/p&gt;
&lt;p&gt;js的模块化，工程化在前端还有很多需要完善的，而你们却没有发现，重复造轮子，可见先见性不足。&lt;/p&gt;
&lt;p&gt;我到建议有时间将前端工程化，多模块自动压缩，多页面自动打包发布这块整整，比seajs这种东西有价值多了。避免重复制做轮子，还解决了新的问题。&lt;/p&gt;
&lt;p&gt;特别是基于bower这类包管理机制增强自动打包功能。&lt;/p&gt;
&lt;p&gt;并且至少目前国外还没有人搞出来。&lt;/p&gt;
&lt;p&gt;(yeoman的思路有点跟我说的类似，但是功能还没有强大到我所说的那样）&lt;/p&gt;
&lt;p&gt;跟在别人屁股后面，然后想推翻别人有什么意思？&lt;/p&gt;
&lt;p&gt;9、&lt;/p&gt;
&lt;p&gt;对于spm3，我是不了解的。&lt;/p&gt;
&lt;p&gt;但是browserify之类的还是打包为主。&lt;/p&gt;
&lt;p&gt;并且browserify是将后端的代码前端化，个人不认为这个对前端开发有太多价值。&lt;/p&gt;
&lt;p&gt;我认为前端还是一个独立的体系。不要跟后端混合在一起。&lt;/p&gt;
&lt;p&gt;即使象socket.io这样一开始混合的很紧密的，现在也慢慢分离开了。&lt;/p&gt;
&lt;p&gt;前后合并的思维估计不会走太长久的路。&lt;/p&gt;
&lt;p&gt;我再重申一次，全端工程师不是将两端混起来，而是对将两端的事情很好的区分开。&lt;/p&gt;
&lt;p&gt;还有，我想说要弄好这些事情，并且是社区化的，最好直接对接现有的东西。&lt;/p&gt;
&lt;p&gt;用Unix的哲学来说就是：KISS&lt;/p&gt;
&lt;p&gt;我觉得打包的理念大家都已经很清楚了，也没有必要再说了。&lt;/p&gt;
&lt;p&gt;不管是browserify还是其它的，还是require,js seajs的打包。&lt;/p&gt;
&lt;p&gt;我不想多讲。&lt;/p&gt;
&lt;p&gt;我想说的主要是打包后的文件的发布与管理问题。&lt;/p&gt;
&lt;p&gt;一个是开发环境下文件模块化管理，另一个打包后的待发布文件的模块化管理。&lt;/p&gt;
&lt;p&gt;包括对HTML， CSS的整合。&lt;/p&gt;
&lt;p&gt;比如HTML前端模板调用机制，原来HTML都是后端的模板，那么如果要将模板都放到前端发布，又将是一个什么样的情况呢？&lt;/p&gt;
&lt;p&gt;将mustache, handlersbar之类整合进来，&lt;/p&gt;
&lt;p&gt;然后包括Sass, Less的整合。&lt;/p&gt;
&lt;p&gt;再加上js的模块化。&lt;/p&gt;
&lt;p&gt;这样再自动将这些东西拼装起来，&lt;/p&gt;
&lt;p&gt;然后再结合服务器自动发布出去。&lt;/p&gt;
&lt;p&gt;这样即能保证开发测试时，整套方案是通的，又能保证上线后整套方案也是通的。&lt;/p&gt;
&lt;p&gt;如果这样整套的东西出来，那么不管是大公司，小公司都可以受益很多。&lt;/p&gt;
&lt;p&gt;然后还可以再在这之上建设相关的运维机制，整合AWS, 阿里云之类的静态服务器，然后CDN功能。&lt;/p&gt;
&lt;p&gt;这样一个PAAS性质的前端开发框架就出来了。&lt;/p&gt;
&lt;p&gt;这种东西目前还没有看到那家公司在做或者已经发布出来。&lt;/p&gt;
&lt;p&gt;做这种东西最重要的是理念与技术，一个合理可行的理念，加一个合理的技术组织架构。&lt;/p&gt;
&lt;p&gt;文档当然是很重要的。&lt;/p&gt;
&lt;p&gt;如果你做一个东西别人不需要，又没有文档，显然不会有人用，&lt;/p&gt;
&lt;p&gt;但是你做的东西是希缺的，又是很有价值的，即使没有文档，也会有人愿意试用。&lt;/p&gt;
&lt;p&gt;重复造轮子没有必要。解决现在存在的问题然后不断的提升，比重复造轮子有价值。&lt;/p&gt;
&lt;p&gt;10、&lt;/p&gt;
&lt;p&gt;如果spm3只是学bower之类的，完全没有必要弄。&lt;/p&gt;
&lt;p&gt;如果spm3基于bower之上，做了更多完善的工作，那么意义还是有的。比如做更好的yeoman。&lt;/p&gt;
&lt;p&gt;yeoman 还刚起步，还是有机会做的比yeoman更好的。&lt;/p&gt;
&lt;p&gt;另起炉灶再弄个bower，完全没有必要。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/dawjytvkn/image/upload/v1402495031/1_seooga.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/dawjytvkn/image/upload/v1402495029/2_kenyx5.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/dawjytvkn/image/upload/v1402495035/3_qoadx0.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/dawjytvkn/image/upload/v1402495038/4_slcnh2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/dawjytvkn/image/upload/v1402495042/5_n2ip7e.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/dawjytvkn/image/upload/v1402495059/6_zsdaqf.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1、AMD比CMD更符合前端开发，为了实现所谓的CMD，在非node环境中增加exports变量，是一种不必要的负担。&lt;/p&gt;
&lt;p&gt;2、前端的模块化更关注的应该是模块化开发，自动发布，自动打包，自动压缩，而不是关注模块的加载。&lt;/p&gt;
&lt;p&gt;  并且将多个模块打包成一个文
    
    </summary>
    
      <category term="其它" scheme="http://blog.3gcnbeta.com/categories/%E5%85%B6%E5%AE%83/"/>
    
      <category term="WEB开发" scheme="http://blog.3gcnbeta.com/categories/%E5%85%B6%E5%AE%83/WEB%E5%BC%80%E5%8F%91/"/>
    
      <category term="WEB前端技术" scheme="http://blog.3gcnbeta.com/categories/%E5%85%B6%E5%AE%83/WEB%E5%BC%80%E5%8F%91/WEB%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Javascript" scheme="http://blog.3gcnbeta.com/categories/%E5%85%B6%E5%AE%83/WEB%E5%BC%80%E5%8F%91/WEB%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/Javascript/"/>
    
    
  </entry>
  
  <entry>
    <title>ubuntu 手动添加eclipse菜单与13.10 / 14.04 升级后eclipse菜单消失的解决办法</title>
    <link href="http://blog.3gcnbeta.com/2014/03/18/ubuntu-%E6%89%8B%E5%8A%A8%E6%B7%BB%E5%8A%A0eclipse%E8%8F%9C%E5%8D%95%E4%B8%8E13-10-14-04-%E5%8D%87%E7%BA%A7%E5%90%8Eeclipse%E8%8F%9C%E5%8D%95%E6%B6%88%E5%A4%B1%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E/"/>
    <id>http://blog.3gcnbeta.com/2014/03/18/ubuntu-手动添加eclipse菜单与13-10-14-04-升级后eclipse菜单消失的解决办/</id>
    <published>2014-03-17T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;因为eclipse的强大的功能，支持几乎所有的开发语言与环境，&lt;/p&gt;
&lt;p&gt;最近越来越往eclipse平台上靠了。eclipse + emacs的按键模式可以产生很好的编辑效率。&lt;/p&gt;
&lt;p&gt;但是eclipse这么强大的平台，仍会在ubuntu平台上出点状况。&lt;/p&gt;
&lt;p&gt;1、ubuntu平台的自带模块因为eclipse的机制关系会产生一些不可控的脏文件数据，导致升级会很麻烦。所以一般都是采用自行下载的方式使用eclipse&lt;/p&gt;
&lt;p&gt;平台自带的eclipse会提供一个桌面菜单，而自行下载的eclipse则没有这个福利。&lt;/p&gt;
&lt;p&gt;所以需要自行制作桌面菜单。&lt;/p&gt;
&lt;p&gt;创建一个eclipse.desktop文件到&lt;/p&gt;
&lt;p&gt;~/.local/share/applications/eclipse.desktop&lt;/p&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;cp /usr/share/applications/eclipse.desktop ~/.local/share/applications/&lt;/p&gt;
&lt;p&gt;如果路径上存在的话。&lt;/p&gt;
&lt;p&gt;文件的内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Desktop Entry]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type=Application&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Name=Eclipse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Comment=Eclipse Integrated Development Environment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Icon=/home/[USER]/Program Files/eclipse/icon.xpm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Exec=/home/[USER]/Program\ Files/eclipse/eclipse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Terminal=false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Categories=Development;IDE;Java;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StartupWMClass=Eclipse&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;p&gt;[USER]是你用户名&lt;/p&gt;
&lt;p&gt;如果你保存的目录类似于Program Files这样带空格的，注意在Exec上带上反斜扛\。具体效果根本自已的测试结果而定。&lt;/p&gt;
&lt;p&gt;不过不建议目录带空格。&lt;/p&gt;
&lt;p&gt;2、ubuntu最近升级到13.10与14.04后会出现菜单消失的情况。&lt;/p&gt;
&lt;p&gt;解决的办法是在Exec加上：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;env UBUNTU_MENUPROXY=0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;即：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Exec=env UBUNTU_MENUPROXY=0 /home/eric/Program\ Files/eclipse/eclipse&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最终的效果是：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Desktop Entry]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type=Application&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Name=Eclipse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Comment=Eclipse Integrated Development Environment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Icon=/home/[USER]/Program Files/eclipse/icon.xpm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Exec=env UBUNTU_MENUPROXY=0 /home/[USER]/Program\ Files/eclipse/eclipse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Terminal=false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Categories=Development;IDE;Java;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StartupWMClass=Eclipse&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;所有的内容最初来源于：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://askubuntu.com/questions/80013/how-to-pin-eclipse-to-the-unity-launcher&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://askubuntu.com/questions/80013/how-to-pin-eclipse-to-the-unity-launcher&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对于英语掌握的比较好的同学可以自己查看英文原文。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;因为eclipse的强大的功能，支持几乎所有的开发语言与环境，&lt;/p&gt;
&lt;p&gt;最近越来越往eclipse平台上靠了。eclipse + emacs的按键模式可以产生很好的编辑效率。&lt;/p&gt;
&lt;p&gt;但是eclipse这么强大的平台，仍会在ubuntu平台上出点状况。&lt;/p&gt;

    
    </summary>
    
      <category term="eclipse" scheme="http://blog.3gcnbeta.com/categories/eclipse/"/>
    
    
  </entry>
  
  <entry>
    <title>利用grunt给使用requirejs的前端代码打包</title>
    <link href="http://blog.3gcnbeta.com/2014/01/27/%E5%88%A9%E7%94%A8grunt%E7%BB%99%E4%BD%BF%E7%94%A8requirejs%E7%9A%84%E5%89%8D%E7%AB%AF%E4%BB%A3%E7%A0%81%E6%89%93%E5%8C%85/"/>
    <id>http://blog.3gcnbeta.com/2014/01/27/利用grunt给使用requirejs的前端代码打包/</id>
    <published>2014-01-26T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;javascript技术是最近几年最活跃的技术之一，不但创造了非常好用的nodejs,&lt;/p&gt;
&lt;p&gt;还基于nodejs产生了一堆非常好用的包机制，类库，web框架，还有就是项目集成与管理工具。&lt;/p&gt;
&lt;p&gt;本文要介绍的是如何使用grunt 给前端代码打包。&lt;/p&gt;
&lt;p&gt;这里的前端代码包括javascript代码，css代码，html代码。&lt;/p&gt;
&lt;p&gt;grunt是基于nodejs的，所以在使用gruntjs之前，一定要确定你的nodejs环境已经可以工作。&lt;/p&gt;
&lt;p&gt;grunt打包的机制非常的简单，主要是分成以下几步：&lt;/p&gt;
&lt;p&gt;1、全局安装gruntjs&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g grunt-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、创建基于nodejs npm的package.json文件，用以明确当前目录下的打包信息：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;projectname&quot;&lt;/span&gt;,   &lt;span class=&quot;comment&quot;&gt;//你的项目名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;version&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;,      &lt;span class=&quot;comment&quot;&gt;//给这个项目一个版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;description&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Open E-book project&quot;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//项目描述&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;homepage&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://book.t1bao.com&quot;&lt;/span&gt;,   &lt;span class=&quot;comment&quot;&gt;//项目的主页&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;repository&quot;&lt;/span&gt;: &amp;#123;                        &lt;span class=&quot;comment&quot;&gt;//代码库的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;git&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;https://github.com/user/projectname&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;author&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;北漂IT民工&quot;&lt;/span&gt;,    &lt;span class=&quot;comment&quot;&gt;//作者名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;: &amp;#123;      &lt;span class=&quot;comment&quot;&gt;//依赖关系&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、在package.json目录下安装grunt组件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install grunt --save-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：一定要加上–save-dev，这样在package.json里就能自动的更新grunt的最新版本到devDependencies里面&lt;/p&gt;
&lt;p&gt;3、安装相关的grunt插件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install grunt-contrib-cssmin --save-dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install grunt-contrib-requirejs --save-dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install grunt-contrib-htmlmin --save-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行完这些命令后：&lt;/p&gt;
&lt;p&gt;package.json的devDependencies将会变成是这样的：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;grunt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;~0.4.2&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;grunt-contrib-cssmin&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;~0.7.0&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;grunt-contrib-htmlmin&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;~0.1.3&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;grunt-contrib-requirejs&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;~0.4.1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;4、编写Gruntfile.js文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module.exports = function(grunt) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  grunt.initConfig(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      pkg: grunt.file.readJSON(&amp;apos;package.json&amp;apos;),      //指定包的信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      htmlmin: &amp;#123;                                     // html打包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dist: &amp;#123;                                      //&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          options: &amp;#123;                                 // Target options&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            removeComments: true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            collapseWhitespace: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          files: &amp;#123;                                   // 文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;apos;dest/index.html&amp;apos;: &amp;apos;index.html&amp;apos;,     // &amp;apos;目标html&amp;apos;: &amp;apos;源html&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      cssmin: &amp;#123;                                        //css打包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        styles: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            src: [&amp;quot;a/b.css&amp;quot;, &amp;apos;styles/*.css&amp;apos;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dest: &amp;apos;dest/styles/&amp;lt;%= pkg.name %&amp;gt;.min.css&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      requirejs: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        compile: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          options: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              baseUrl: &amp;quot;scripts&amp;quot;,                     //js根目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              name: &amp;apos;main&amp;apos;,                           //执行的第一个requirejs包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              optimize: &amp;apos;uglify&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              mainConfigFile: &amp;quot;scripts/config/global.js&amp;quot;,                 //requirejs的配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              out: &amp;quot;dest/scripts/&amp;lt;%= pkg.name %&amp;gt;.min.js&amp;quot;,                 //输出的压缩文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              findNestedDependencies: true,                               //必须指定让requirejs能找到嵌套的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              include: [&amp;apos;../Library/require.js&amp;apos;]                          //指定requirejs所在的位置。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //加载所需要的库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  grunt.loadNpmTasks(&amp;apos;grunt-contrib-requirejs&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  grunt.loadNpmTasks(&amp;quot;grunt-contrib-cssmin&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  grunt.loadNpmTasks(&amp;apos;grunt-contrib-htmlmin&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //注册相应的类库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  grunt.registerTask(&amp;apos;default&amp;apos;, [&amp;apos;requirejs&amp;apos;, &amp;apos;cssmin&amp;apos;, &amp;apos;htmlmin&amp;apos;]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;5、在真正打包前，hmlt文件也是需要有所变化的。&lt;/p&gt;
&lt;p&gt;在打包前的开发版的js里，可能会存在很多的css,在打包的版本里只有一个css文件了。&lt;/p&gt;
&lt;p&gt;js也是一样的。所以发布的html也需要做相应的调整。&lt;/p&gt;
&lt;p&gt;变化如下：&lt;/p&gt;
&lt;p&gt;css:&lt;/p&gt;
&lt;p&gt;前&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;styles/a.css&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;styles/b.css&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;styles/c.css&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;styles/packagename.min.css&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;js:&lt;/p&gt;
&lt;p&gt;前&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-main&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;scripts/config/global&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Library/require.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;scripts/packagename.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;6、完成上述步骤，我们的环境与配置就已经写好了，现在就可以通过在控制台下面执行以下代码实现打包了。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;grunt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;正常情况下，会出现如下的图片：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/dawjytvkn/image/upload/v1390809495/QQ%E5%9B%BE%E7%89%8720140127155722_zf7wwo.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;注意最后的:&lt;/p&gt;
&lt;p&gt;Done, without errors.&lt;/p&gt;
&lt;p&gt;如果没有出现这个，表明你的程序出错了。需要进一步的调试。&lt;/p&gt;
&lt;p&gt;成功后，在你指定的对应的文档路径下面就会出现html, css, js, 在js一定要注册打包前后，css与他所使用的资源的位置文化，一定要将资源（如图片也复制到对应的目录下，保持相对位置的不变）。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;javascript技术是最近几年最活跃的技术之一，不但创造了非常好用的nodejs,&lt;/p&gt;
&lt;p&gt;还基于nodejs产生了一堆非常好用的包机制，类库，web框架，还有就是项目集成与管理工具。&lt;/p&gt;
&lt;p&gt;本文要介绍的是如何使用grunt 给前端代码打包。&lt;/p&gt;
&lt;p
    
    </summary>
    
      <category term="WEB开发" scheme="http://blog.3gcnbeta.com/categories/WEB%E5%BC%80%E5%8F%91/"/>
    
      <category term="WEB前端技术" scheme="http://blog.3gcnbeta.com/categories/WEB%E5%BC%80%E5%8F%91/WEB%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Javascript" scheme="http://blog.3gcnbeta.com/categories/WEB%E5%BC%80%E5%8F%91/WEB%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/Javascript/"/>
    
    
  </entry>
  
  <entry>
    <title>12306火车订票系统分析</title>
    <link href="http://blog.3gcnbeta.com/2014/01/23/12306%E7%81%AB%E8%BD%A6%E8%AE%A2%E7%A5%A8%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90/"/>
    <id>http://blog.3gcnbeta.com/2014/01/23/12306火车订票系统分析/</id>
    <published>2014-01-22T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;最近网上流行转载了一篇文章，用来表达12306系统架构有多复杂的。&lt;/p&gt;
&lt;p&gt;里面引用了一些非技术数据用来强调自己的观点。&lt;/p&gt;
&lt;p&gt;下面我以技术的角度，一步一步分析12306网站的用户规模与网站业务逻辑的情况，以帮助大家进一步分析12306网站到底架构有多难。&lt;/p&gt;
&lt;p&gt;1、首先我们可以分析的是春运火车网的购票人次。&lt;/p&gt;
&lt;p&gt;根据我国2013年12月发布的流动人口数据约有2.3亿人口。&lt;/p&gt;
&lt;p&gt;详细见：&lt;a href=&quot;http://www.chinanews.com/gn/2013/12-10/5600343.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.chinanews.com/gn/2013/12-10/5600343.shtml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;假设每天有5%的人访问12306，那么相应的每天的IP应该是2.3 * 0.05 = 0.115亿的独立访问。&lt;/p&gt;
&lt;p&gt;假设春运期每天的访问是40%, 那么相应的每天的IP应该是2.3 * 0.4 = 0.92亿的独立访问。&lt;/p&gt;
&lt;p&gt;假设人均PV是10, 那么相当于一天9亿的PV。&lt;/p&gt;
&lt;p&gt;根据上公布的资料&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.zhihu.com/question/20016026&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.zhihu.com/question/20016026&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;16,941,420 实际只有 2千万就左右的PV。即使峰值是10倍也只有2亿。&lt;/p&gt;
&lt;p&gt;那么我们折中一下，将PV换成是峰值5亿好了，谷值是1千万。&lt;/p&gt;
&lt;p&gt;对于这样一个系统，最重要的就是如何动态的均衡压力。&lt;/p&gt;
&lt;p&gt;忙时可以租用更多的运算服务器，闲时可以释放。&lt;/p&gt;
&lt;p&gt;一般来讲分布式架构设计完成后，一定是会有一定的scale能力的。这个通过加机器减少机器就可以解决。这种技术各大网站都已经非常成熟了。&lt;/p&gt;
&lt;p&gt;2、订票的业务模型。&lt;/p&gt;
&lt;p&gt; 由于用户，买票，支付部分跟支付宝、淘宝之类是一样的，我就不多说了。&lt;/p&gt;
&lt;p&gt;我们主要分析一下他们的业务逻辑是不是很复杂。&lt;/p&gt;
&lt;p&gt;有人提出来火车票的购买是一个动态的过程，我们就按动态的来看。&lt;/p&gt;
&lt;p&gt;a) 首先，我们假设有N次火车，每节火车有M个位置,有N个站点，&lt;/p&gt;
&lt;p&gt;每次火车可以每天发X趟，那么对于每一个时段发放的车都产生一张表， 分别是M行和N列的。&lt;/p&gt;
&lt;p&gt;当用户查询某列车是不是还有票时，只要查询一下对应的位置是不是连续空的就可以了。&lt;/p&gt;
&lt;p&gt;b）然后再制作一张车票票价的表供查询，就可以生成了出发地到目的地的一张火车票的票价了。&lt;/p&gt;
&lt;p&gt;c)然后当用户完成订票时，将这些经过的站点全部占上。&lt;/p&gt;
&lt;p&gt;实际上并没有多少动态性在里面，无非是查询，而这种查询实际上还可以做进一步的优化。即使不优化，他的查询性能也是非常好的。&lt;/p&gt;
&lt;p&gt;b)&lt;/p&gt;
&lt;p&gt;考虑用户退票，实际上也是一样的。&lt;/p&gt;
&lt;p&gt;无非是将那个时间的表上的用户占的站点清空。这样下一个用户就能查到他的位置空了。&lt;/p&gt;
&lt;p&gt;对于所有订票网站说订票过程都是动态的，所有的订票业务大同小异，除了铁路站点多点以外，根本没有什么特殊性。&lt;/p&gt;
&lt;p&gt;d)再考虑到将不同的车次的订票系统分布到不同的服务器，或者不同的表中，实际上对于一台要处理的服务器，只需要处理几个线路就可以了。&lt;/p&gt;
&lt;p&gt;根本不存在什么复杂系统的问题，什么不可拆分的问题。&lt;/p&gt;
&lt;p&gt;e)&lt;/p&gt;
&lt;p&gt;任何复杂系统都是通过不断的简化模型，来实现低耦合，高内聚的。&lt;/p&gt;
&lt;p&gt;这里最多弄个排列与消息系统，来处理用户请求排队的问题。然后通过消息机制来通知用户成功或者失败。&lt;/p&gt;
&lt;p&gt;从本身的模型上来讲，不存在什么过于复杂的情况。&lt;/p&gt;
&lt;p&gt;3、那么通过我们的分析我们可以看出来：&lt;/p&gt;
&lt;p&gt;文章：&lt;a href=&quot;http://www.zhihu.com/question/22451397&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.zhihu.com/question/22451397&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;所说的东西很多是虚假的。&lt;/p&gt;
&lt;p&gt;拿什么多大的内存，多大的公司出来吓人，并没有真正的合理的技术分析。&lt;/p&gt;
&lt;p&gt;有技术分析的地方也是问题很多。&lt;/p&gt;
&lt;p&gt;但是从营销的角度，这个文章成功了，我相信12306背后一定使了不少力。&lt;/p&gt;
&lt;p&gt;下面我们来看看错误的技术分析：&lt;/p&gt;
&lt;p&gt;1、以前12306用的是小型机，发现性能严重不足，遂改用x86系统+linux平台&lt;/p&gt;
&lt;p&gt;小型机的情况比PC差？这个是有常识的表现吗？&lt;/p&gt;
&lt;p&gt;用X86无非是分布压力，跟什么小型机没有半点关系。&lt;/p&gt;
&lt;p&gt;原来以为一台小型机能解决，后来发现小型机一台的运算能力是有限的。我估计只能是这种可能性。&lt;/p&gt;
&lt;p&gt;2、通知全站.&lt;/p&gt;
&lt;p&gt;任何一个复杂的系统设计的目标就是内聚，小型化，他还叫嚣通知全站，这个全站是谁？&lt;/p&gt;
&lt;p&gt;为什么要通知全站，难道我买了一张火车票要上电视通知全国吗？ 如果12306做的事情是将事情复杂化，那么只能表达自己有多弱智，而是不能说明这个业务有多复杂。&lt;/p&gt;
&lt;p&gt;作为一个Alexa排名只有77，业务形态非常固定的铁道订票系统的网站，叫嚣自己技术多么复杂，是一件很无聊的事情。&lt;/p&gt;
&lt;p&gt;实际上12306网站的演变过程只不过是互联网公司架构升级的过程，没有任何所谓的业务复杂的因素，只能说一开始12306一开始的架构能力是很差的。&lt;/p&gt;
&lt;p&gt;仅此而已，但是从系统的发展来说，我不会苛求12306，但是要说12306有多高的技术含量，我只能对写这个文章的人表示&amp;ldquo;呵呵&amp;rdquo;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近网上流行转载了一篇文章，用来表达12306系统架构有多复杂的。&lt;/p&gt;
&lt;p&gt;里面引用了一些非技术数据用来强调自己的观点。&lt;/p&gt;
&lt;p&gt;下面我以技术的角度，一步一步分析12306网站的用户规模与网站业务逻辑的情况，以帮助大家进一步分析12306网站到底架构有多难。&lt;/
    
    </summary>
    
      <category term="民工观点" scheme="http://blog.3gcnbeta.com/categories/%E6%B0%91%E5%B7%A5%E8%A7%82%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>Openshift git push 过程过慢的解决办法</title>
    <link href="http://blog.3gcnbeta.com/2013/12/29/openshift-git-push-%E8%BF%87%E7%A8%8B%E8%BF%87%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://blog.3gcnbeta.com/2013/12/29/openshift-git-push-过程过慢的解决办法/</id>
    <published>2013-12-28T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;使用Open shift hot deploy 加速应用的启动。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cd applicationName/.openshift/markers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ touch hot_deploy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git add hot_deploy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git commit -m &amp;quot;Adding hot deployment marker&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git push&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;使用Open shift hot deploy 加速应用的启动。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;
    
    </summary>
    
      <category term="Shell" scheme="http://blog.3gcnbeta.com/categories/Shell/"/>
    
    
  </entry>
  
  <entry>
    <title>关于加速jQuery Mobile的思考</title>
    <link href="http://blog.3gcnbeta.com/2013/12/29/%E5%85%B3%E4%BA%8E%E5%8A%A0%E9%80%9Fjquery-mobile%E7%9A%84%E6%80%9D%E8%80%83/"/>
    <id>http://blog.3gcnbeta.com/2013/12/29/关于加速jquery-mobile的思考/</id>
    <published>2013-12-28T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;最近做移动开发app的专题培训，并选择了phonegap与jqm作为主要的实例进行讲解。&lt;/p&gt;
&lt;p&gt;原因是jqm功能丰富，社区强大，历史悠久，非常成熟。&lt;/p&gt;
&lt;p&gt;phonegap也已经开源，有很长的历史，成熟很高。&lt;/p&gt;
&lt;p&gt;但是jqm往往为人们所诟病的是他的速度，&lt;/p&gt;
&lt;p&gt;以至于国内有些无良的商家也借机起哄，将自己的产品与基于jqm开发的phonegap应用进行比较。&lt;/p&gt;
&lt;p&gt;结果当然是让人贻笑大方了。开这种玩笑的公司，估计也不会长久的。&lt;/p&gt;
&lt;p&gt;关于jqm的速度慢的原因主要是由于jqm的机制引起的：&lt;/p&gt;
&lt;p&gt;1、一般切换页面可能是远程的页面，网络延时，会让jQM的页面看起来很慢。&lt;/p&gt;
&lt;p&gt;2、加载完成页面后，jqm都会执行一次对页面渲染的代码，所以会消耗相当的资源。&lt;/p&gt;
&lt;p&gt;3、添加了额外的DOM节点，导致JS的执行，消耗了CPU时间。&lt;/p&gt;
&lt;p&gt;这几点导致人们在切换页面时速度非常慢。&lt;/p&gt;
&lt;p&gt;所以我认为提高速度的最佳的办法就是不切换页面。&lt;/p&gt;
&lt;p&gt;不切换页面就意味着你必须对javascript, dom, jquery mobile的api, 非常熟悉，并且有良好的调试页面的技术。&lt;/p&gt;
&lt;p&gt;同时由于jquery mobile是后执行的框架，所以在dom添加完成后，必须重新通过api让添加的dom的UI变为正常，这一点非常重要。&lt;/p&gt;
&lt;p&gt;比如对于button，一定要调用$(dom).button()来完成UI的渲染。&lt;/p&gt;
&lt;p&gt;当然还可以与前端的mvc框架配合使用，这样可以会更加工业化一些，但是如果对于前端框架不熟悉，也可以先按最原始的形式实现出来功能。&lt;/p&gt;
&lt;p&gt;毕竟与框架的成熟度目前都不算很高，再加上jquery mobile的后执行的特点，与框架配合也是比较困难的。&lt;/p&gt;
&lt;p&gt;所以综合起来，个人认为提高JQUERY MOBILE性的方式可以直观的表达成：&lt;/p&gt;
&lt;p&gt;1、最好只有一个index.html&lt;/p&gt;
&lt;p&gt;2、所有的UI变化都在js里实现&lt;/p&gt;
&lt;p&gt;3、熟悉JQM的API&lt;/p&gt;
&lt;p&gt;4、避免或者减少远程页面的切换.&lt;/p&gt;
&lt;p&gt;最后还有一个好消息是1.4的速度与API都有比较明显的提升。并且已经是正式发布了，如果是新项目可以使用1.4。&lt;/p&gt;
&lt;p&gt;并且1.4上DOM节点的添加明显减少，更加符合HTML5的口味。&lt;/p&gt;
&lt;p&gt;总之基于HTML5相关的架构的混合移动app的开发不管是用什么框架，本地化，脚本化，是提高性能的不二法门，如果有条件的，可以直接自己写响应式的布局与代码，进一步降低开销，如果自己的设计与网页制作团队的技术实力偏弱，则可以用现在有的UI框架先用着，等后期设计与制作团队熟悉了，再补上技术负债。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近做移动开发app的专题培训，并选择了phonegap与jqm作为主要的实例进行讲解。&lt;/p&gt;
&lt;p&gt;原因是jqm功能丰富，社区强大，历史悠久，非常成熟。&lt;/p&gt;
&lt;p&gt;phonegap也已经开源，有很长的历史，成熟很高。&lt;/p&gt;
&lt;p&gt;但是jqm往往为人们所诟病的是他的
    
    </summary>
    
      <category term="其它" scheme="http://blog.3gcnbeta.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
      <category term="HTML5" scheme="http://blog.3gcnbeta.com/tags/HTML5/"/>
    
      <category term="PHONEGAP" scheme="http://blog.3gcnbeta.com/tags/PHONEGAP/"/>
    
      <category term="APP" scheme="http://blog.3gcnbeta.com/tags/APP/"/>
    
      <category term="jQuery Mobile" scheme="http://blog.3gcnbeta.com/tags/jQuery-Mobile/"/>
    
  </entry>
  
  <entry>
    <title>PhoneGap/Cordova，jQuery Mobile, Android开发几个基本体会</title>
    <link href="http://blog.3gcnbeta.com/2013/12/26/phonegapcordova%EF%BC%8Cjquery-mobile-android%E5%BC%80%E5%8F%91%E5%87%A0%E4%B8%AA%E5%9F%BA%E6%9C%AC%E4%BD%93%E4%BC%9A/"/>
    <id>http://blog.3gcnbeta.com/2013/12/26/phonegapcordova，jquery-mobile-android开发几个基本体会/</id>
    <published>2013-12-25T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;关于phonegap/cordova&lt;/p&gt;
&lt;p&gt;1、将cordova.js放在所有js代码最前面&lt;/p&gt;
&lt;p&gt;2、对于硬件事件与DOM事件分开去响应&lt;/p&gt;
&lt;p&gt;3、从js的模板化道路&lt;/p&gt;
&lt;p&gt;4、cordova变快非常快，并且经常会有一些bug,不但要能提bug还要能适时的去修改bug,并提一些bug到社区，适当的时候可能需要你自己提交代码&lt;/p&gt;
&lt;p&gt;5、cordova的node工具非常不稳定，代码质量也很差，开发时需要注意&lt;/p&gt;
&lt;p&gt;6、插件的原理非常简单，并且有很多参照的插件，但是要注意先测试完插件的功能再使用。&lt;/p&gt;
&lt;p&gt;关于jQuery Mobile&lt;/p&gt;
&lt;p&gt;1、目前来讲不存在js性能差的问题，前端框架性能基本都是网络延时造成的。通过我的电子书项目可以明显的反映出来这一点，在电子书项目上所有的页面都是存在手机端的，响应在手机或者模拟器上都非常快，所以对于jquery mobile指责可以停止了，&lt;/p&gt;
&lt;p&gt;2、现在Android的硬件动辄四核，双核，并不存在性能差的问题，性能差的原因更多的在于java性能太差了。一个好的jQuery Mobile应用，可以做到响应比原生的都快。&lt;/p&gt;
&lt;p&gt;3、目前来讲jQuery Mobile是移动端的UI方面最强大的开源免费系统，暂时不需要考虑其它的解决方案，因为没有更好的。截止13年12月底，相信短期也不太可能出来比jQuery Mobile更好的。&lt;/p&gt;
&lt;p&gt;4、jQuery Mobile 1.4让jQuery Mobile与其它框架的结合的可能性进一步的加大，适当的时候可以考虑结合AngularJS/EmberJS进行前端MVC的开发&lt;/p&gt;
&lt;p&gt;5、目前来看要jQuery Mobile的事件与功能开发还需要很多js的技巧，从而在结合一些MVC框架上存在的难点，所以如果对MVC框架不是很熟悉，还是先从原生的入手会更好一些.&lt;/p&gt;
&lt;p&gt;关于Android的基本技巧：&lt;/p&gt;
&lt;p&gt;1、查看安装应用目录下的文件&lt;/p&gt;
&lt;p&gt;a)adb shell&lt;/p&gt;
&lt;p&gt;b) shell@android:/ $ run-as com.packagename.appname&lt;/p&gt;
&lt;p&gt;c)shell@android:/data/data/com.packagename.appname $ ls&lt;/p&gt;
&lt;p&gt;app_database&lt;/p&gt;
&lt;p&gt;cache&lt;/p&gt;
&lt;p&gt;databases&lt;/p&gt;
&lt;p&gt;lib&lt;/p&gt;
&lt;p&gt;2、调试最好直接联手机，否则调试太慢了。又占用非常多的内存。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;关于phonegap/cordova&lt;/p&gt;
&lt;p&gt;1、将cordova.js放在所有js代码最前面&lt;/p&gt;
&lt;p&gt;2、对于硬件事件与DOM事件分开去响应&lt;/p&gt;
&lt;p&gt;3、从js的模板化道路&lt;/p&gt;
&lt;p&gt;4、cordova变快非常快，并且经常会有一些bug,不但要能提b
    
    </summary>
    
      <category term="移动开发技术" scheme="http://blog.3gcnbeta.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Android" scheme="http://blog.3gcnbeta.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/Android/"/>
    
      <category term="Cordova/PhoneGap" scheme="http://blog.3gcnbeta.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/Android/Cordova-PhoneGap/"/>
    
    
  </entry>
  
  <entry>
    <title>常用的基于HTML5的移动APP框架比较</title>
    <link href="http://blog.3gcnbeta.com/2013/12/06/%E5%B8%B8%E7%94%A8%E7%9A%84%E5%9F%BA%E4%BA%8Ehtml5%E7%9A%84%E7%A7%BB%E5%8A%A8app%E6%A1%86%E6%9E%B6%E6%AF%94%E8%BE%83/"/>
    <id>http://blog.3gcnbeta.com/2013/12/06/常用的基于html5的移动app框架比较/</id>
    <published>2013-12-05T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;原文：&lt;a href=&quot;http://www.gajotres.net/top-7-mobile-application-html5-frameworks/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.gajotres.net/top-7-mobile-application-html5-frameworks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;【一手痒，翻译了一下，原文错字有几处，已经在译文中已经修正，如果中文有错误，也请留言指正，谢谢。】&lt;/p&gt;
&lt;p&gt;上个星期我写了一个文章，讨论了jQuery Mobile和Sencha Touch的不同。那篇文章主题的限制，我忽略掉了其它的框架。&lt;/p&gt;
&lt;p&gt;但在继续本文之前，我得提醒下你，这个文章是讨论HTML5在混合移动应用上的框架的，不会讨论象Bootstrap这样的前端框架的，这些不是本文要讨论的点。&lt;/p&gt;
&lt;p&gt;回归主题，不管如何，jQuery Mobile和Sencha Touch并不是移动领域的中心，事实上他们根本不算。移动市场非常巨大，对于满意的HTML5的框架的需求也是如此。此文的意义在于看到每个我们要讨论的框架都有一个完全不同的架构和开发方式。有些为了某些特定的目的而建立，有些则是为了成全通用的框架。很少数不要求特定的原生环境，但大部分都是要求的。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;介绍&lt;/p&gt;
&lt;p&gt;对于不知道混合应用开发的，可以了解一下它是原生应用概念与移动互联网应用概念的混合。通常原生代码由一个封装框架提供（例如Phonegap），这种框架是连接原生代码与Javascript API的桥梁。这样通过这个框架，应用就可以通过javascript代码执行原生代码才能执行的功能，比如用摄象头拍照。&lt;/p&gt;
&lt;p&gt;同传统的将源文件保存在服务器端的移动Web App不同的是，混合移动App将HMLT, Javascript和CSS文件存在本地(当然在相同的情况下，他们一样可以保存在服务器端)，所以不一定需要Internet的访问。&lt;/p&gt;
&lt;p&gt;在本文中，我将尽可能的做到客观。我先说明一下我的情况，我是一个jQuery Mobile和Sencha Touch的开发者。我在选择这两个框架前，我花了很多时间了解各种框架。但是这并不表示其它的框架不好或者不满足需求。正如你将会看到的一样，我的决定也是很艰难的，并且也花了很长时间。他们都很优秀，但是正如滚石乐队所唱那样：&amp;ldquo;你不可能总得到你想要的&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;在开始之前，我们看一下我所选择的7个框架，他们按字母排序如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://app-framework-software.intel.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Intel App Framework &amp;ndash; ex jQMoby&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jquerymobile.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;jQuery Mobile&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jqtjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;jQT &amp;ndash; jQuery Touch&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.kendoui.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Kendo UI&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.sencha.com/products/touch&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Sencha Touch&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.appcelerator.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Titanium Appcelerator&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zeptojs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Zepto.js&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Intel的应用框架 &amp;ndash; ex jQMoby&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://www.gajotres.net/wp-content/uploads/2013/09/JQMobi.jpg&quot; alt=&quot;Junior&quot;&gt;&lt;/p&gt;
&lt;p&gt;这个框架是一个睡美人。非常快，就象Sencha Touch一样，为Android和IOS平台做了优化。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;很快也很可靠，可能是单就这种类型的来说最快的，性能只比Sencha Touch差点。&lt;/li&gt;
&lt;li&gt;很小，很轻&lt;/li&gt;
&lt;li&gt;基于HTML，并用javascript来增加HTML&lt;/li&gt;
&lt;li&gt;很好的原生封方案，不需要再用PhoneGap了&lt;/li&gt;
&lt;li&gt;有MVC的支持，但是第三方的MVC框架也可以独立的使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;文档很恐怖，跟其它框架对比&lt;/li&gt;
&lt;li&gt;浏览器支持有限，这并不是很坏的情况，但是他的限制了桌面的使用&lt;/li&gt;
&lt;li&gt;并不是基于jQuery，不管它的旧名想说明什么。个人不喜欢使用一些错误的信息来吸引开发者。这个框架是对jQuery的重写。这个听起来不错，直到你发现有些东西没有了，或者有些跟你期待的不一样。&lt;/li&gt;
&lt;li&gt;它可以用更好的UI，不过你可以自定义。在第二版时用原生的主题进行了重新设计&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;作者提示&quot;&gt;&lt;a href=&quot;#作者提示&quot; class=&quot;headerlink&quot; title=&quot;作者提示&quot;&gt;&lt;/a&gt;作者提示&lt;/h4&gt;&lt;p&gt;如果他们能改进他们的文档，我可能会转到这个框架上去。我已经在我的另一个&lt;strong&gt;&lt;a href=&quot;http://www.gajotres.net/switching-from-a-jquery-mobile-to-appframework/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文章&lt;/a&gt;&lt;/strong&gt;里讨论过这个主题。不管如何，这是一个值得关注的框架。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;####&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;jQuery Mobile&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://www.gajotres.net/wp-content/uploads/2013/09/jquery_mobile.jpg&quot; alt=&quot;Junior&quot;&gt;&lt;/p&gt;
&lt;p&gt;这是一个最常用的移动应用HTML5框架。但不要被这点所愚弄，这并不表示它是最好的解决方案，大部分对他的关注来源于他的大哥jQuery。&lt;/p&gt;
&lt;h4 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;最常用，意味着有很多第三方的资源&lt;/li&gt;
&lt;li&gt;非常易用，基于HTML，就象是一个应用框架&lt;/li&gt;
&lt;li&gt;不错的官方文档，但是可以更好，根据相关消息，jQM的开发者们正在不断的工作让它变的更好&lt;/li&gt;
&lt;li&gt;支持所有你可以想到的HTML5浏览器，这样可以很好的支持桌面与移动端&lt;/li&gt;
&lt;li&gt;很好的主题支持&lt;/li&gt;
&lt;li&gt;很多第三方的插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;缺点-1&quot;&gt;&lt;a href=&quot;#缺点-1&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;对于移动设备来说，偏慢，并没有象App Framework或者Sencha &amp;nbsp;Touch那样做优化&lt;/li&gt;
&lt;li&gt;中规中矩的UI，时间越长，我就越不喜欢，但是他很容易通过定制CSS来修复，没有定制每个应用就会感觉象是克隆出来的。iOS GUI风格在不是iOS的平台上看起来并不是很好&lt;/li&gt;
&lt;li&gt;官方文档缺少一样信息，特别是jQuery Mobile的架构是如何工作的。如果每个组件都详细的描述出来，你可能需要消耗不少脑力来理解他们是如何一起工作的。&lt;/li&gt;
&lt;li&gt;没有明确的MVC支持。但是有限的支持Backbone.js和Knockout.js&lt;/li&gt;
&lt;li&gt;与PhoneGap一起使用时会显得更慢，你真的需要对&lt;strong&gt;&lt;a href=&quot;http://www.gajotres.net/secrets-of-a-good-jquery-mobile-page-architecture/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jQuery Mobile架构&lt;/a&gt;&lt;/strong&gt;有一个好的理解才能让它快速并正确的工作。如果开发者不做任何变动，他很快就会比App Framework和Sencha Touch慢了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;作者提示-1&quot;&gt;&lt;a href=&quot;#作者提示-1&quot; class=&quot;headerlink&quot; title=&quot;作者提示&quot;&gt;&lt;/a&gt;作者提示&lt;/h4&gt;&lt;p&gt;目前我最喜欢的框架，主要还是因为我是jQuery的粉丝。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;jQuery Touch&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://www.gajotres.net/wp-content/uploads/2013/09/jqTouch.jpg&quot; alt=&quot;Junior&quot;&gt;&lt;/p&gt;
&lt;p&gt;一个Zepto/jQuery插件，用于iPhone,Android, iPod Touch和其它向前考量的设备的移动Web开发。其本上他可以和Zepto.js与jQuery Mobile一起使用。同样，值得注意的是他不是一个框架，它原来是通过jQuery插件的方式构建的，虽然现在它也支持Zepto，它还是一个插件。&lt;/p&gt;
&lt;h4 id=&quot;优点-1&quot;&gt;&lt;a href=&quot;#优点-1&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;快、容易&lt;/li&gt;
&lt;li&gt;很好的主题支持&lt;/li&gt;
&lt;li&gt;基于HTML&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;缺点-2&quot;&gt;&lt;a href=&quot;#缺点-2&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;只支持Webkit浏览器&lt;/li&gt;
&lt;li&gt;资源不是很充足&lt;/li&gt;
&lt;li&gt;开发4年多了还在Beta中，听起不是很好。&lt;/li&gt;
&lt;li&gt;内容不是很丰富相比于其它的框架来说&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;作者提示-2&quot;&gt;&lt;a href=&quot;#作者提示-2&quot; class=&quot;headerlink&quot; title=&quot;作者提示&quot;&gt;&lt;/a&gt;作者提示&lt;/h4&gt;&lt;p&gt;除了确实快，感觉前景不是很乐观&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Kendo UI&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://www.gajotres.net/wp-content/uploads/2013/09/kendo-ui.jpg&quot; alt=&quot;Junior&quot;&gt;&lt;br&gt;我已经写了一个很详细的Kendo UI审查和示例，它可以在这里被找到：&lt;a href=&quot;http://www.gajotres.net/html5-frameworks-kendo-ui-from-a-jquery-mobile-perspective/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;http://www.gajotres.net/html5-frameworks-kendo-ui-from-a-jquery-mobile-perspective/&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另一个基于jQuery的框架。与其它三个不一样的是这个很美，支持MVVM并且我自己的服务器端通讯的支持。很不幸的是，如果你想创建一个商业的应用，Kendo UI会让你花掉几百美元的钱。在其它情况下，他是免费的。有很好的模板支持，每个模板的感觉都跟原生的很象。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;完整的包，框架，UI和MVC，全套&lt;/li&gt;
&lt;li&gt;很快的SVG支持，同时也支持旧的浏览&lt;/li&gt;
&lt;li&gt;基于HTML&lt;/li&gt;
&lt;li&gt;很好的文档（还有改进的空间）&lt;/li&gt;
&lt;li&gt;根据平台不同提供原生的风格&lt;/li&gt;
&lt;li&gt;非常好的模板系统，主题是非常原生化&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;缺点-3&quot;&gt;&lt;a href=&quot;#缺点-3&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;商业授权与支持&lt;/li&gt;
&lt;li&gt;缺少第三方的支持，主要源于商业授权，但是你还是会被它的开发者数量吓到&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;作者提示-3&quot;&gt;&lt;a href=&quot;#作者提示-3&quot; class=&quot;headerlink&quot; title=&quot;作者提示&quot;&gt;&lt;/a&gt;作者提示&lt;/h4&gt;&lt;p&gt;收费是唯一我不用这个框架的原因。并不是我不想值钱，而是我不想用两套商业的框架。不管如何，他是我的第三选择。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sencha Touch&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://www.gajotres.net/wp-content/uploads/2013/09/Sencha.jpg&quot; alt=&quot;Junior&quot;&gt;&lt;/p&gt;
&lt;p&gt;这个框架就象是基于jQuery框架大海中的异类。它快，长的也好看，还支持MVC，并且可能是这里提到的框架中拥有最好的文档的框架。但是，跟Kendo UI一样，他是有商业授权和商业IDE的。但他不象基于jQuery的框架(象jQuery Mobile, Kendo UI， PhoneJS)他是纯js的框架。&lt;/p&gt;
&lt;h4 id=&quot;优点-2&quot;&gt;&lt;a href=&quot;#优点-2&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;**   完整的包，框架，UI和MVC，全套&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主观上感觉最快的移动应用框架&lt;/li&gt;
&lt;li&gt;所能找到的最好的SVG支持，可以用于游戏开发&lt;/li&gt;
&lt;li&gt;完美的文档&lt;/li&gt;
&lt;li&gt;根本平台不同支持原生的外观&lt;/li&gt;
&lt;li&gt;优秀的打包与封装系统&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;缺点-4&quot;&gt;&lt;a href=&quot;#缺点-4&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;商业授权与支持&lt;/li&gt;
&lt;li&gt;商业IDE，你不知道用其它的IDE开发会有多不爽&lt;/li&gt;
&lt;li&gt;很难学，同之前的框架不同，这个是纯js的&lt;/li&gt;
&lt;li&gt;缺少第三方的支持，主要也是由于商业授权的原因&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;作者提示-4&quot;&gt;&lt;a href=&quot;#作者提示-4&quot; class=&quot;headerlink&quot; title=&quot;作者提示&quot;&gt;&lt;/a&gt;作者提示&lt;/h4&gt;&lt;p&gt;我第二选择的框架。它很复杂，这也是我喜欢它的原因。需要很长时间掌握，学习的曲线也很陡。我写了一个相当全面的关于下面jQuery Mobile和Sencha Touch的&lt;strong&gt;&lt;a href=&quot;http://www.gajotres.net/sencha-touch-vs-jquery-mobile/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文章&lt;/a&gt;&lt;/strong&gt;，所以如果你想更深入的了解可以去看看.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Titanium Appcelerator&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://www.gajotres.net/wp-content/uploads/2013/09/appcelerator.png&quot; alt=&quot;Junior&quot;&gt;&lt;/p&gt;
&lt;p&gt;这是另一个异类，并且这个还不是HTML5的框架。他跟Sencha Touch一样使用了纯的javascript方式实现，但是不同的时，这个将javascript转化成了原生的代码。&lt;/p&gt;
&lt;h4 id=&quot;优点-3&quot;&gt;&lt;a href=&quot;#优点-3&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;最终用的是原生代码，让他跟原生代码一样的快&lt;/li&gt;
&lt;li&gt;可以用于快速原型化&lt;/li&gt;
&lt;li&gt;跨平台，一套代码可以用于iOS,Android和其它的移动平台的应用上&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;缺点-5&quot;&gt;&lt;a href=&quot;#缺点-5&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;不是很好的文档，有时候让人费解&lt;/li&gt;
&lt;li&gt;不是很灵活&lt;/li&gt;
&lt;li&gt;想用好需要原生的Android或者IOS开发技能&lt;/li&gt;
&lt;li&gt;跨平台也有一个负面的作用，复杂的界面需要针对Android和IOS写不同的代码&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;作者提示-5&quot;&gt;&lt;a href=&quot;#作者提示-5&quot; class=&quot;headerlink&quot; title=&quot;作者提示&quot;&gt;&lt;/a&gt;作者提示&lt;/h4&gt;&lt;p&gt;对于快速原型化来说是一个非常优秀的框架。但是开发复杂的应用时，会在跨平台时出现问题。更别提它还需要开发原生的Android/IOS的知识。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Zepto.js&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://www.gajotres.net/wp-content/uploads/2013/09/zepto.jpg&quot; alt=&quot;Junior&quot;&gt;&lt;/p&gt;
&lt;p&gt;第一批在这个领域的开拓者。旨在比jQuery更小，更快，但是保持类似的架构。很不幸的是它并没有比jQuery快多少，我说的更清楚点，就是他们的情况基本上差不多。不要把这个与jQuery Mobile混淆了，虽然它没有比jQuery快，但是他比跟jQuery与jQuery Mobile一起用时是要快的。&lt;/p&gt;
&lt;h4 id=&quot;优点-4&quot;&gt;&lt;a href=&quot;#优点-4&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;第一批中的一个，我们可以给一个机会&lt;/li&gt;
&lt;li&gt;轻量级&lt;/li&gt;
&lt;li&gt;比jQuery Mobile快，但是没有比其它的继承jQuery的框架快&lt;/li&gt;
&lt;li&gt;如果你学过jQuery,你就会用Zepto&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;缺点-6&quot;&gt;&lt;a href=&quot;#缺点-6&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;就象App Framework,这个少一些jQuery的功能&lt;/li&gt;
&lt;li&gt;处理DOM时更慢&lt;/li&gt;
&lt;li&gt;并没有象jQuery Mobile一样广泛的支持HTML5浏览，这个随着时间在变化 ，但是还是没有支持IE&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;作者提示-6&quot;&gt;&lt;a href=&quot;#作者提示-6&quot; class=&quot;headerlink&quot; title=&quot;作者提示&quot;&gt;&lt;/a&gt;作者提示&lt;/h4&gt;&lt;p&gt;差不多可以说是一个框架，不过个人认为它无法给我任何理由让我从jQuery Mobile切换过来使用他。它是一个受App Framework（在那里叫jqMoby)启发的框架。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;其它七个框架&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;点击图象，会带你到这个文章的第二部分，或者在&lt;a href=&quot;http://www.gajotres.net/top-7-notable-less-known-mobile-html5-frameworks/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;这里&lt;/strong&gt;&lt;/a&gt;找到。&lt;a href=&quot;http://www.gajotres.net/top-7-notable-less-known-mobile-html5-frameworks/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.gajotres.net/wp-content/uploads/2013/09/frameworks2.jpg&quot; alt=&quot;Next 7 articles&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;框架使用情况统计&lt;/p&gt;
&lt;p&gt;现在官方的可以用于比较这些框架的用户统计数据并不存在，我相信它永远也不会存在。&lt;/p&gt;
&lt;p&gt;这里有一个非直接的收集这个数据的办法。正如你们大多数人知道的一样，Stackoverflow是Stack Exchange Network公司的旗舰网站，做的比一些论坛问答网站更加的开放。每个上述的框架都有一个组，每组都会有一个问题列表，并且每个列表是可以计算的。我们的想法就是用那个数据来表示框架的使用情况。&lt;/p&gt;
&lt;p&gt;当然，我们要理性的看待这个统计，很多问题也可能表明框架很复杂或者问题很多。但不管怎样，这个也算是最佳的可以得到的统计数据了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;jQuery Mobile &amp;ndash; 13,705&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;Kendo UI &amp;ndash; 3024&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;Titanium &amp;ndash; 2,397&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;Sencha Touch &amp;ndash; 2235&amp;nbsp;*&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;Zepto &amp;ndash; 232&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;jQTouch &amp;ndash; 465&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;App Framework &amp;ndash; 68&amp;nbsp;**&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&amp;nbsp;&amp;ndash; 这个值基于对&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;http://stackoverflow.com/questions/tagged/sencha-touch&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sencha Touch&lt;/a&gt;&lt;/strong&gt;&amp;nbsp;和&lt;em&gt;*&lt;a href=&quot;http://stackoverflow.com/questions/tagged/sencha-touch-2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sencha Touch 2&lt;/a&gt;两个组统计和得到的&lt;/em&gt;&lt;/em&gt;. 只有将所有的都加上才能算公平。这个数如果加上extjs会更高，但是那样我们也得加上jQuery上关于jQuery Mobile的讨论，这样会让统计变的更加复杂&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;ndash; App Framework的数据是通过计算&amp;nbsp;&lt;/strong&gt;&lt;a href=&quot;http://stackoverflow.com/questions/tagged/appframework&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;App Framework&lt;/a&gt;&lt;strong&gt;&amp;nbsp;和它的祖先&lt;/strong&gt;&lt;a href=&quot;http://stackoverflow.com/questions/tagged/jqmobi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jqMoby&lt;/a&gt;的和得到的。**&lt;/p&gt;
&lt;p&gt;结语&lt;/p&gt;
&lt;p&gt;还有不少移动应用的HTML5框架值得一提，不过这个文章到此已经结束了，毕竟一时讲不了太多。如果你觉得我遗忘什么，或者你不同意某些观点（或者非常同意），又或者想了解其它的框架，你都可以给我留言。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;原文：&lt;a href=&quot;http://www.gajotres.net/top-7-mobile-application-html5-frameworks/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.gajotres.net/to
    
    </summary>
    
      <category term="民工翻译" scheme="http://blog.3gcnbeta.com/categories/%E6%B0%91%E5%B7%A5%E7%BF%BB%E8%AF%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Android SDK 下载不了或者非常慢的解决办法</title>
    <link href="http://blog.3gcnbeta.com/2013/12/04/android-sdk-%E4%B8%8B%E8%BD%BD%E4%B8%8D%E4%BA%86%E6%88%96%E8%80%85%E9%9D%9E%E5%B8%B8%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://blog.3gcnbeta.com/2013/12/04/android-sdk-下载不了或者非常慢的解决办法/</id>
    <published>2013-12-03T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;由于我们伟大的防火墙的影响，Android的SDK下载总是存在问题，一般情况下，我们基于方法一就可以解决问题。&lt;/p&gt;
&lt;p&gt;方法一、&lt;/p&gt;
&lt;p&gt;1、通过在命令行或者eclipse开发环境打开Android SDK manager&lt;/p&gt;
&lt;p&gt;2、选择菜单栏里的Tools-&amp;gt;Options…&lt;/p&gt;
&lt;p&gt;3、在打开的设置界面，选中Others下面的： Force https://… sources to be fetched using http://…&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/dawjytvkn/image/upload/v1386089566/temp_rntpnx.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果上述的方法不能成功，说明http协议也被墙了，我们需要将连接请求转到代理上来。&lt;/p&gt;
&lt;p&gt;方法二、&lt;/p&gt;
&lt;p&gt;1、首先下载安装goagent&lt;/p&gt;
&lt;p&gt;2、然后在上述的Options页面添加Proxy Settings。&lt;/p&gt;
&lt;p&gt;3、添加&lt;/p&gt;
&lt;p&gt;HTTP Proxy Server: &amp;nbsp; &amp;nbsp;&amp;nbsp;127.0.0.1&lt;/p&gt;
&lt;p&gt;HTTP Proxy Port: &amp;nbsp; 8087&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;由于我们伟大的防火墙的影响，Android的SDK下载总是存在问题，一般情况下，我们基于方法一就可以解决问题。&lt;/p&gt;
&lt;p&gt;方法一、&lt;/p&gt;
&lt;p&gt;1、通过在命令行或者eclipse开发环境打开Android SDK manager&lt;/p&gt;
&lt;p&gt;2、选择菜单栏里的Too
    
    </summary>
    
      <category term="移动开发技术" scheme="http://blog.3gcnbeta.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Android" scheme="http://blog.3gcnbeta.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>DIV+CSS的说法实际上是一种误解</title>
    <link href="http://blog.3gcnbeta.com/2013/11/24/divcss%E7%9A%84%E8%AF%B4%E6%B3%95%E5%AE%9E%E9%99%85%E4%B8%8A%E6%98%AF%E4%B8%80%E7%A7%8D%E8%AF%AF%E8%A7%A3/"/>
    <id>http://blog.3gcnbeta.com/2013/11/24/divcss的说法实际上是一种误解/</id>
    <published>2013-11-23T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;DIV+CSS这个在国内流传了多年的说法，本身不全面，不正确，给人以误解，也违反了Web标准化与语义化的趋势与原则，但是到今天一直没有人站出来指明它的错误。所以为了更好的说明这是一个错误的提法，我今天结合历史与趋势，讨论一下DIV+CSS的提法错误在那里。&lt;/p&gt;
&lt;p&gt;首先、HTML里专门用于布局的元素一开始有2种一种是table,一种是div。table用于布局主要是历史原因，并将会慢慢退出。div是在HTML语义不够发达以及CSS作用不是非常深入被接受的情况下引入的专门用于页面结构构建的元素。HTML布局元素主要的作用是布局里内容结构的划分，并不是展示的布局效果。&lt;/p&gt;
&lt;p&gt;其次、真正的布局的功能是通过CSS实现的。所谓的DIV+CSS是一种对Web布局的偏见，特别是现今强调语义化的今天。DIV是原先WEB标准化组织提出来要求更好的页面结构以取代table布局而被强调的。但是到了国内就被放大，被误解了。宣传DIV取代的目的在于让网页更加的简洁，易懂，而不是说div+css是一体的。&lt;/p&gt;
&lt;p&gt;第三、DIV+CSS的意义不定。DIV+CSS如果表达的是布局，那么布局的工作是CSS的工作，不需要通过DIV来说明。绝大多数HTML元素都可以通过CSS来实现DIV的功能。如果强调结构，那么只需要HTML，因为DIV只能表达不明确的结构，无法表达HTML文档的组织意义。无论从那个方面讲都是错误的组合。&lt;/p&gt;
&lt;p&gt;第四、HTML的语义化越来越要求降低DIV的使用，在追求HTML语义化的今天，对于DIV的需求是越来越少的。而DIV+CSS的说法，不但越来越无法成立，而且会给人以矛盾感觉。特别是HTML5里推出各种取代DIV的标签，比如header, footer, article,section等，按div+css来理解的话，是不是表明HTML5的方向是错误的？当然我们不能否认DIV单个元素作为主要布局元素是有优势的。人们可以不必去记太多的标签元素。但是这与web语义化的趋势并不一致，也是对web开发的误解，这是需要强调的。&lt;/p&gt;
&lt;p&gt;第五、正确的说法应该是什么呢？作为web内容，结构，展示，行为等几个重要的元素，实际上就是由HTML，CSS, javascript来负责扮演的。对于DIV+CSS的想表示的意思正确的表达应该是HTML + CSS。&lt;/p&gt;
&lt;ul&gt;&lt;br&gt;&lt;li&gt;HTML: 负责数据与内容的结构&lt;/li&gt;&lt;br&gt;&lt;li&gt;CSS： 负责动态效果与展示的结构&lt;/li&gt;&lt;br&gt;&lt;li&gt;JS：负责各种动态事件与用户的交互与数据交互&lt;/li&gt;&lt;br&gt;&lt;br&gt;&lt;/ul&gt;

&lt;p&gt;他们之间实际上有很多相互重叠的地方，但这就是现实世界，关系永远是需要耦断丝连的。并不可能完全分裂他们。但是各自又有很明确的重点。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;第六、我们可以出去看看老外是如何理解的？下面的内容是搜索div+css在amazon.com的结果：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/s/ref=sr_pg_2?rh=i%3Aaps%2Ck%3Adiv+css&amp;amp;page=2&amp;amp;keywords=div+css&amp;amp;ie=UTF8&amp;amp;qid=1385259455&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.amazon.com/s/ref=sr_pg_2?rh=i%3Aaps%2Ck%3Adiv+css&amp;amp;page=2&amp;amp;keywords=div+css&amp;amp;ie=UTF8&amp;amp;qid=1385259455&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;很遗憾我们没有发现一本介绍 DIV+CSS的书。&lt;/p&gt;
&lt;p&gt;而大部分都是HTML, CSS, JAVASCRIPT之类的相信书集。&lt;/p&gt;
&lt;p&gt;总结：希望错误的能及时得到纠正，正确的能得到及时的传播。不要以讹传讹，传播错误的文化与知识。否则将是害人不浅。&lt;/p&gt;
&lt;p&gt;本文如有不当之处，欢迎批评指正。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;DIV+CSS这个在国内流传了多年的说法，本身不全面，不正确，给人以误解，也违反了Web标准化与语义化的趋势与原则，但是到今天一直没有人站出来指明它的错误。所以为了更好的说明这是一个错误的提法，我今天结合历史与趋势，讨论一下DIV+CSS的提法错误在那里。&lt;/p&gt;
&lt;p&gt;首
    
    </summary>
    
      <category term="HTML" scheme="http://blog.3gcnbeta.com/categories/HTML/"/>
    
    
  </entry>
  
  <entry>
    <title>Nodejs vs JAVA EE</title>
    <link href="http://blog.3gcnbeta.com/2013/11/04/nodejs-vs-java-ee/"/>
    <id>http://blog.3gcnbeta.com/2013/11/04/nodejs-vs-java-ee/</id>
    <published>2013-11-03T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;原文： &lt;a href=&quot;http://java.dzone.com/articles/performance-comparison-between&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://java.dzone.com/articles/performance-comparison-between&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Node.js和Java EE从CouchDB读取JSON数据的性能比较&lt;/p&gt;
&lt;p&gt;Node.js出现以来已经给过我几次性能高的印象了。在我上一个Node.js项目中，它的表现一如继往：我们直接超过了设定的性能目标而没有对应用做任何的调整。这是我在Java EE里从未有过的体验。假设这个项目确实是一个为Node.js量身定作的项目：一个主要是从CouchDB读取JSON文档的小项目。但是我还是想知道：JAVA EE在这个案例中跟Node.js比会是一个怎样的表现呢？&lt;/p&gt;
&lt;p&gt;这个项目需要达成下面的几个性能目标： 150 请求/秒并具备200毫秒的平均影响时间。 我不是一个性能优化高手，200毫秒的平均影响时间听起来很快，我的感觉是我们可能必须要调节程序以达到些目标。&lt;/p&gt;
&lt;p&gt;一个独立的团队针对我们的程序进行了性能测试。测试成绩出来了，结果是程序性能实际上超过了所有设计的性能目标，而是达到到了：200请求/秒， 100毫秒的响应时间。比目标成绩好很多。我相当惊讶,Node.js竟然超于性能需求这么多，并且所有这些不需要任何性能优化。&lt;/p&gt;
&lt;p&gt;我又想：这性能对于这种程度的程序来说已经算是好性能了吗？还是Node.js真的就神一样的快？如果我们用Java EE这种成熟的平台来做性能会怎样？&lt;/p&gt;
&lt;p&gt;我实在无法回答这个问题。我做过的JAVA EE应用的响应时间感觉更象是在1000毫秒，当然他们比我们这个Node.js应用有更加复杂的功能。我们这个应用的核心只是通过一个ID从CouchDB数据库的一个表里取出JSON数据。没有复杂的SQL,没有表的连接，也没有数据的处理。我不知道一个这样需要的Java EE应用的性能会怎样。所以我继续寻找问题的答案：我所感受到的Node.js对比传统JAVA EE系统的性能是不是可以通过一个严格的性能测试来得到支持呢？&lt;/p&gt;
&lt;p&gt;为了回答这个问题，我设计了一套性能测试用例用来对Java EE和Nodejs进行测试，后端采用相同的数据库，并考虑如何去比较这两个系统。&lt;/p&gt;
&lt;p&gt;准备&lt;/p&gt;
&lt;p&gt;我用同样的性能测试用例来测试Node.js程序和Java Servlet程序。两个程序都使用了与原Node.js程序一样的后端：CouchDB.我使用CouchBase 单机服务器1.1.3版，并创建10，000个样例文档，每个4KB的随机文本。测试机是一台iMac，2.4G赫兹的Intel Core 2 Duo， 4GB内在，和Mac OS X的系统。&lt;/p&gt;
&lt;p&gt;我将一台独立的机器当测试机，并使用Apache JMeter进行测试。JMeter脚本采用不同程度的并发数，向各个程序发起请求，并抓取随机文档。&lt;/p&gt;
&lt;p&gt;JAVA EE&lt;/p&gt;
&lt;p&gt;JAVA servlet运行在版本为7.0.21的Apache Tomcat之上，默认配置运行在Java 1.6之上。数据库的驱动是CouchDB4J，版本0.30。这个驱动没有缓存选项，所以没有做配置。&lt;/p&gt;
&lt;p&gt;下面的Java代码是一个通过ID从CouchDB攻取一个文档并以JSON对象进行转发的servlet。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.shinetech.couchDB;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.io.IOException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.io.PrintWriter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import javax.servlet.http.HttpServlet;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import javax.servlet.http.HttpServletRequest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import javax.servlet.http.HttpServletResponse;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import org.apache.log4j.Logger;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import com.fourspaces.couchdb.Database;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import com.fourspaces.couchdb.Document;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import com.fourspaces.couchdb.Session;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@SuppressWarnings(&amp;quot;serial&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class MyServlet extends HttpServlet &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Logger logger = Logger.getLogger(this.getClass());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Session s = new Session(&amp;quot;localhost&amp;quot;,5984);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Database db = s.getDatabase(&amp;quot;testdb&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  public void doGet(HttpServletRequest req, HttpServletResponse res)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    throws IOException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String id = req.getPathInfo().substring(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PrintWriter out = res.getWriter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Document doc = db.getDocument(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (doc==null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      res.setContentType(&amp;quot;text/plain&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      out.println(&amp;quot;Error: no document with id &amp;quot; + id +&amp;quot; found.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      res.setContentType(&amp;quot;application/json&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      out.println(doc.getJSONObject());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    out.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我运行JMeter对这个servlet进行了不同并发的测试。下面的表示显示了并发数，平均影响时间，每秒请求数。&lt;/p&gt;
&lt;table&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;并发数&lt;/td&gt;&lt;br&gt;        &lt;td&gt;平均影响时间(ms)&lt;/td&gt;&lt;br&gt;        &lt;td&gt;每秒请求数&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;10&lt;/td&gt;&lt;br&gt;        &lt;td&gt;23&lt;/td&gt;&lt;br&gt;        &lt;td&gt;422&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;50&lt;/td&gt;&lt;br&gt;        &lt;td&gt;119&lt;/td&gt;&lt;br&gt;        &lt;td&gt;416&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;100&lt;/td&gt;&lt;br&gt;        &lt;td&gt;243&lt;/td&gt;&lt;br&gt;        &lt;td&gt;408&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;150&lt;/td&gt;&lt;br&gt;        &lt;td&gt;363&lt;/td&gt;&lt;br&gt;        &lt;td&gt;411&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;&lt;/table&gt;


&lt;p&gt;我们可以看到响应时间随着并发数的增长不断的恶性延长。在10个并发时是23毫秒，而在100个并发时变成是243毫秒。&lt;/p&gt;
&lt;p&gt;一个有意思的情况是平均响应时间几乎与并发数是呈线性相关的，所以一次10倍增长的并发请求会导致一个10倍增长的响应时间的增长。这样就说明每秒能处理的请求数是一个相当固定的值，不管我们有10个并发请求，还是150个并发请求。不管是什么样的并发情况，服务器每秒钟处理的请求数大约是420个。&lt;/p&gt;
&lt;p&gt;Node&lt;/p&gt;
&lt;p&gt;Node.js程序运行在Node.js 0.10.20之上，使用Cradle的CouchDB驱动，版本是0.57，并为了环境的一致缓存被并掉。&lt;/p&gt;
&lt;p&gt;下面的Node.js代码实现对于一个给定的ID给从CouchDB里取出的同样的JSON文档的功能：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var http = require (&amp;apos;http&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  url = require(&amp;apos;url&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  cradle = require(&amp;apos;cradle&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  c = new(cradle.Connection)(&amp;apos;127.0.0.1&amp;apos;,5984,&amp;#123;cache: false, raw: false&amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  db = c.database(&amp;apos;testdb&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  port = 8081;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;process.on(&amp;apos;uncaughtException&amp;apos;, function (err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(&amp;apos;Caught exception: &amp;apos; + err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http.createServer(function(req,res) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var id = url.parse(req.url).pathname.substring(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  db.get(id,function(err, doc) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      console.log(&amp;apos;Error&amp;apos;+err.message);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      res.writeHead(500,&amp;#123;&amp;apos;Content-Type&amp;apos;: &amp;apos;text/plain&amp;apos;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      res.write(&amp;apos;Error&amp;apos; + err.message);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      res.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      res.writeHead(200,&amp;#123;&amp;apos;Content-Type&amp;apos;: &amp;apos;application/json&amp;apos;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      res.write(JSON.stringify(doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      res.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;).listen(port);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Node.js下得到的数字如下：&lt;/p&gt;
&lt;table&gt;&lt;br&gt;    &lt;tbody&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;并发数&lt;/td&gt;&lt;br&gt;        &lt;td&gt;平均影响时间(ms)&lt;/td&gt;&lt;br&gt;        &lt;td&gt;每秒请求数&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;10&lt;/td&gt;&lt;br&gt;        &lt;td&gt;19&lt;/td&gt;&lt;br&gt;        &lt;td&gt;509&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;50&lt;/td&gt;&lt;br&gt;        &lt;td&gt;109&lt;/td&gt;&lt;br&gt;        &lt;td&gt;453&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;100&lt;/td&gt;&lt;br&gt;        &lt;td&gt;196&lt;/td&gt;&lt;br&gt;        &lt;td&gt;507&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;150&lt;/td&gt;&lt;br&gt;        &lt;td&gt;294&lt;/td&gt;&lt;br&gt;        &lt;td&gt;506&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;p&gt;同之前的平均响应时间一样，它与并发数有一个线性的关系，证实了每分钟可以处理的请求数是一个相当恒定的值。Node.js约快出20%。 如在10个并发时，每秒请求数分别为509 vs 422。&lt;/p&gt;
&lt;p&gt;结论&lt;/p&gt;
&lt;p&gt;Node.js对于当前的任务来说，相比于JAVA EE要快出20%。这对我来说很震惊。一个解释型语言与一个建立在历经多年优化的VM之上的编译弄语言相比竟然速度能保持在一个水平上。相当的赞！&lt;/p&gt;
&lt;p&gt;但是我们必须要认识到这个结论是受条件限制的：这种类型的程序是Node.js所擅长的。我担心将这个结论应用到其它类型的程序上可能会不成立。我认为由于Javascript是解释型语言，并且缺少成熟的面向大型Node.js应用的开发模式，所以Javascript程序最好保持较小的规模。&lt;/p&gt;
&lt;p&gt;Node.js与Java EE的服务能力是超过正常的服务器需求的。400~500每秒的请求数是相当大的。世界上最大的网站Google有大约50亿次请求每天。如果你用24小时，60分钟，50秒来分这些请求，那么它的结果是57870个请求每秒。这就是Google全球所有域名的请求数。所以如果你有一个请求在400每秒种的网站在一台机器上，那么你的网站已经非常大了。100万请求每天平均下来就是11.5请求每秒。请牢记。&lt;/p&gt;
&lt;p&gt;在这个测试中，不同的并发模型，不管是单线程的Node.js还是多线程的Java EE，差别不大。为了测试Node.js在更大的并发量时的表现–这个通常会被认为强于多线程的地方，象打开的文件数限制之类的问题是需要被考虑到的。我不能产生150个以上的用户来并发测试是因为OS已经因为打开文件过多而报错了。这个可以通过配置解决，但已经不在本文的讨论之内了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;原文： &lt;a href=&quot;http://java.dzone.com/articles/performance-comparison-between&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://java.dzone.com/articles
    
    </summary>
    
      <category term="民工翻译" scheme="http://blog.3gcnbeta.com/categories/%E6%B0%91%E5%B7%A5%E7%BF%BB%E8%AF%91/"/>
    
      <category term="Javascript" scheme="http://blog.3gcnbeta.com/categories/%E6%B0%91%E5%B7%A5%E7%BF%BB%E8%AF%91/Javascript/"/>
    
    
  </entry>
  
  <entry>
    <title>jquery mobile 下打开一个提示框的代码</title>
    <link href="http://blog.3gcnbeta.com/2013/10/12/jquery-mobile-%E4%B8%8B%E6%89%93%E5%BC%80%E4%B8%80%E4%B8%AA%E6%8F%90%E7%A4%BA%E6%A1%86%E7%9A%84%E4%BB%A3%E7%A0%81/"/>
    <id>http://blog.3gcnbeta.com/2013/10/12/jquery-mobile-下打开一个提示框的代码/</id>
    <published>2013-10-11T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;献给所有跟我一样学习jquery mobile并在api里找不到合适的dialog使用办法的同仁们。&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;p&gt;对于1.4.2新版本：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function alert(message, time, text) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  message = message || &amp;apos;&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  time = time ? time * 1000 : 1000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  text = text || true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $.mobile.loading( &amp;quot;show&amp;quot;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  text: message,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  textVisible: true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  theme: &amp;quot;z&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // Do your ajax call and processing here&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  setTimeout(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  $.mobile.loading( &amp;quot;hide&amp;quot; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;, time);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对于1.3.2或者之前的版本：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function alert(message, time, text) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  message = message || &amp;apos;&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  time = time || 1000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  text = text || true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $.mobile.showPageLoadingMsg(&amp;quot;b&amp;quot;, message, text);&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // Do your ajax call and processing here&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  setTimeout(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $.mobile.hidePageLoadingMsg();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;, time);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;献给所有跟我一样学习jquery mobile并在api里找不到合适的dialog使用办法的同仁们。&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;p&gt;对于1.4.2新版本：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
    
    </summary>
    
      <category term="Javascript" scheme="http://blog.3gcnbeta.com/categories/Javascript/"/>
    
    
  </entry>
  
  <entry>
    <title>从apache2.2升级到apache2.4遇到的一些坑爹的修改</title>
    <link href="http://blog.3gcnbeta.com/2013/09/25/%E4%BB%8Eapache2-2%E5%8D%87%E7%BA%A7%E5%88%B0apache2-4%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91%E7%88%B9%E7%9A%84%E4%BF%AE%E6%94%B9/"/>
    <id>http://blog.3gcnbeta.com/2013/09/25/从apache2-2升级到apache2-4遇到的一些坑爹的修改/</id>
    <published>2013-09-24T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;由于最近心血来潮，将PC的桌面OS从UBUNTU 13.04升级到了13.10的Beta。发现apache也从2.2.X升级到了2.4.X了。&lt;/p&gt;
&lt;p&gt;从而导致我们的配置都失效了。&lt;/p&gt;
&lt;p&gt;所有的虚拟主机的配置与相应虚拟主机的配置都失效。&lt;/p&gt;
&lt;p&gt;通过一段时间的google，终于让我解决了这个问题。&lt;/p&gt;
&lt;p&gt;升级总共遇到两个问题。&lt;/p&gt;
&lt;p&gt;1、找不到虚拟主机。&lt;/p&gt;
&lt;p&gt;2、虚拟主机对应的网站无法访问。&lt;/p&gt;
&lt;p&gt;第一个问题的原因是修改了apache2.conf文件&lt;/p&gt;
&lt;p&gt;要求配置文件的扩展名变成是 .conf才能被识别。&lt;/p&gt;
&lt;p&gt;这个改进感觉是不错的。&lt;/p&gt;
&lt;p&gt;所以将原来没有后缀的配置文件修改成www.domain.com.conf就可以了&lt;/p&gt;
&lt;p&gt;一个老外提供了另一种方法，对英文阅读没有障碍的同学可以看一下：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://lyemium.com/content/virtual-host-issues-when-upgrading-apache-22-24&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://lyemium.com/content/virtual-host-issues-when-upgrading-apache-22-24&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不过我还是建议按新的apache2.4的思路走。这样非conf文件就可以心安理得的放在配置目录下面了。也方便备份，修改。&lt;/p&gt;
&lt;p&gt;第二个问题是指令变动引起的。&lt;/p&gt;
&lt;p&gt;得到的错误信息是这样的：&lt;/p&gt;
&lt;p&gt;AH01630: client denied by server configuration&lt;/p&gt;
&lt;p&gt;之前的版本是通过：&lt;/p&gt;
&lt;p&gt;Allow来控制访问权限的，但是新的2.4则是通过require指令来实现的。&lt;/p&gt;
&lt;p&gt;所以原来的指令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Order allow,deny&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Allow from all&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;需要改为&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;require all granted&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;由于最近心血来潮，将PC的桌面OS从UBUNTU 13.04升级到了13.10的Beta。发现apache也从2.2.X升级到了2.4.X了。&lt;/p&gt;
&lt;p&gt;从而导致我们的配置都失效了。&lt;/p&gt;
&lt;p&gt;所有的虚拟主机的配置与相应虚拟主机的配置都失效。&lt;/p&gt;
&lt;p&gt;通过一段
    
    </summary>
    
      <category term="WEB服务器技术" scheme="http://blog.3gcnbeta.com/categories/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>三行代码搞定洗牌方法</title>
    <link href="http://blog.3gcnbeta.com/2013/09/10/%E4%B8%89%E8%A1%8C%E4%BB%A3%E7%A0%81%E6%90%9E%E5%AE%9A%E6%B4%97%E7%89%8C%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.3gcnbeta.com/2013/09/10/三行代码搞定洗牌方法/</id>
    <published>2013-09-09T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;经典的洗牌问题。&lt;/p&gt;
&lt;p&gt;一般来讲洗牌的牌都是固定的。&lt;/p&gt;
&lt;p&gt;所以一开始可以顺序存放好各种牌。&lt;/p&gt;
&lt;p&gt;然后取总牌总的一半的长度来执行随机交换。&lt;/p&gt;
&lt;p&gt;交换掉前面的N/2个牌，基本上这个牌的随机性就已经可以了。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var cards = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for (var i = 1; i &amp;lt;= 54; i++) &amp;#123; cards.push(i); &amp;#125;     //这个就是顺序保存数据的过程&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for(var i = 0; i &amp;lt;= 54 / 2; i ++) &amp;#123; var id1 = parseInt(Math.random(1, 53) * 53), tmp = null; tmp = cards[id1]; cards[id1] = cards[i]; cards[i] = tmp; &amp;#125;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//chrome 执行结果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;  cards&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [5, 15, 9, 18, 1, 39, 11, 50, 10, 21, 54, 31, 35, 27, 13, 22, 43, 51, 2, 53, 14, 24, 48, 20, 26, 37, 33, 44, 29, 30, 12, 32, 3, 34, 19, 36, 25, 38, 6, 40, 41, 42, 17, 28, 45, 46, 47, 23, 49, 8, 4, 52, 16, 7]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;经典的洗牌问题。&lt;/p&gt;
&lt;p&gt;一般来讲洗牌的牌都是固定的。&lt;/p&gt;
&lt;p&gt;所以一开始可以顺序存放好各种牌。&lt;/p&gt;
&lt;p&gt;然后取总牌总的一半的长度来执行随机交换。&lt;/p&gt;
&lt;p&gt;交换掉前面的N/2个牌，基本上这个牌的随机性就已经可以了。&lt;/p&gt;
&lt;figure class
    
    </summary>
    
      <category term="Javascript" scheme="http://blog.3gcnbeta.com/categories/Javascript/"/>
    
    
  </entry>
  
  <entry>
    <title>js实现的快速排序</title>
    <link href="http://blog.3gcnbeta.com/2013/09/05/js%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/>
    <id>http://blog.3gcnbeta.com/2013/09/05/js实现的快速排序/</id>
    <published>2013-09-04T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;快速排序是一种平均性能非常优秀的排序算法，在很多场合都会应用到他。&lt;/p&gt;
&lt;p&gt;了解快速排序于对开放高效率的软件有很重要的作用。&lt;/p&gt;
&lt;p&gt;但是有不少的书本讲得并不是很清楚，而且不同的教材的实现方式也不尽相同，&lt;/p&gt;
&lt;p&gt;我这里将最简单的快速排序的思路写出来供大家参考。&lt;/p&gt;
&lt;p&gt;希望不管是使用什么语言都能从这个简单的代码里很方便的掌握快排思路与编写方式&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function quick_sort(list, start, end) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if (start &amp;lt; end) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var pivotpos = partition(list, start, end);   //找出快排的基数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    quick_sort(list, start, pivotpos - 1);        //将左边的快排一次&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    quick_sort(list, pivotpos + 1, end);          //将右边的快排一次&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//将一个序列调整成以基数为分割的两个区域，一边全都不小于基数，一边全都不大于基数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function partition(list, start, end) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var pivotpos = start;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var pivot = list[start];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  for(var i = start + 1; i &amp;lt;= end; i ++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (list[i] &amp;lt; pivot) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      tmp = list[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      pivotpos += 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      list[i] = list[pivotpos];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      list[pivotpos] = tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  tmp = list[start];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  list[start] = list[pivotpos];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  list[pivotpos] = tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return pivotpos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var list = [8,2,4,65,2,4,7,1,9,0,2,34,12];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;quick_sort(list, 0, list.length);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;快速排序是一种平均性能非常优秀的排序算法，在很多场合都会应用到他。&lt;/p&gt;
&lt;p&gt;了解快速排序于对开放高效率的软件有很重要的作用。&lt;/p&gt;
&lt;p&gt;但是有不少的书本讲得并不是很清楚，而且不同的教材的实现方式也不尽相同，&lt;/p&gt;
&lt;p&gt;我这里将最简单的快速排序的思路写出来供大家
    
    </summary>
    
      <category term="其它" scheme="http://blog.3gcnbeta.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>汉诺塔JS实现</title>
    <link href="http://blog.3gcnbeta.com/2013/09/05/%E6%B1%89%E8%AF%BA%E5%A1%94js%E5%AE%9E%E7%8E%B0/"/>
    <id>http://blog.3gcnbeta.com/2013/09/05/汉诺塔js实现/</id>
    <published>2013-09-04T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;汉诺塔是一个比较经典的递归问题。由于其包含两层递归，所以相对来讲比较难理解。&lt;/p&gt;
&lt;p&gt;同时一些书本上只给出来算法。并没有真正的可以运行并且包含数据处理的例子。&lt;/p&gt;
&lt;p&gt;今天兴趣一来，就写了一个。&lt;/p&gt;
&lt;p&gt;放在博客上，留做纪念。&lt;/p&gt;
&lt;p&gt;汉诺塔问题描述：&lt;/p&gt;
&lt;p&gt;共有3根杆子，在初始的杆子上，有n个圆盘，这些圆盘从下至上按照从大到小的顺序排列。&lt;/p&gt;
&lt;p&gt;现在要把这些原盘移动到第三根杆子上，&lt;/p&gt;
&lt;p&gt;要求，每次移动只能移动一个圆盘，而且大的圆盘不能放到小的圆盘上面。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var namespace = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(function(namespace) &amp;#123;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var a = [], b = [], c = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function hanoi(x, y, z, n) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (n === 1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		move(x, z);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(&quot;move n -1 from x to y , level &quot; + n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		hanoi(x, z, y, n - 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(&quot;move x to y , level &quot; + n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		move(x, z);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(&quot;move n - 1 from y to z , level &quot; + n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		hanoi(y, x, z, n - 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function move(x, y) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var v = x.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	console.log(v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	y.push(v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function start_hanoi(n) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	c = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for ( var i = n; i &amp;gt; 0; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		a.push(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	console.log(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	hanoi(a, b, c, n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	console.log(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;namespace.hanoi = start_hanoi;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)(namespace);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;namespace.hanoi(1);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;汉诺塔是一个比较经典的递归问题。由于其包含两层递归，所以相对来讲比较难理解。&lt;/p&gt;
&lt;p&gt;同时一些书本上只给出来算法。并没有真正的可以运行并且包含数据处理的例子。&lt;/p&gt;
&lt;p&gt;今天兴趣一来，就写了一个。&lt;/p&gt;
&lt;p&gt;放在博客上，留做纪念。&lt;/p&gt;
&lt;p&gt;汉诺塔问题描述
    
    </summary>
    
      <category term="Javascript" scheme="http://blog.3gcnbeta.com/categories/Javascript/"/>
    
    
  </entry>
  
  <entry>
    <title>JQuery 下面判断有没有当前值的Option的方法</title>
    <link href="http://blog.3gcnbeta.com/2013/07/04/jquery-%E4%B8%8B%E9%9D%A2%E5%88%A4%E6%96%AD%E6%9C%89%E6%B2%A1%E6%9C%89%E5%BD%93%E5%89%8D%E5%80%BC%E7%9A%84option%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.3gcnbeta.com/2013/07/04/jquery-下面判断有没有当前值的option的方法/</id>
    <published>2013-07-03T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;前端开发时经常需要判断是不是当前的值已经有Option了，如果有就将当前值的Option选中。&lt;/p&gt;
&lt;p&gt;下面的代码就是让你如何找到值为val的option，并选中它。&lt;/p&gt;
&lt;p&gt;1、如何判断是不是有当前值为val的Option?&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&amp;apos;option[value=&amp;apos; + val + &amp;apos;]&amp;apos;, node.__last).length &amp;gt; 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、如何将找到的Option选中呢？&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&amp;apos;option[value=&amp;apos; + val + &amp;apos;]&amp;apos;, node.__last).attr(&amp;apos;selected&amp;apos;, &amp;apos;selected&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3、所以合起来的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($(&lt;span class=&quot;string&quot;&gt;&#39;option[value=&#39;&lt;/span&gt; + val + &lt;span class=&quot;string&quot;&gt;&#39;]&#39;&lt;/span&gt;, node.__last).length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;option[value=&#39;&lt;/span&gt; + val + &lt;span class=&quot;string&quot;&gt;&#39;]&#39;&lt;/span&gt;, node.__last).attr(&lt;span class=&quot;string&quot;&gt;&#39;selected&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;selected&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;4、如何需要创建新的Option呢？&lt;/p&gt;
&lt;p&gt;node为select对应的jquery对象&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var option = $(&amp;apos;&amp;lt;option&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;option.html(text);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;option.val(val);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;option.attr(&amp;apos;selected&amp;apos;, &amp;apos;selected&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node.append(option);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;前端开发时经常需要判断是不是当前的值已经有Option了，如果有就将当前值的Option选中。&lt;/p&gt;
&lt;p&gt;下面的代码就是让你如何找到值为val的option，并选中它。&lt;/p&gt;
&lt;p&gt;1、如何判断是不是有当前值为val的Option?&lt;/p&gt;
&lt;figure class
    
    </summary>
    
      <category term="编程技术" scheme="http://blog.3gcnbeta.com/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/"/>
    
      <category term="WEB开发" scheme="http://blog.3gcnbeta.com/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/WEB%E5%BC%80%E5%8F%91/"/>
    
      <category term="WEB前端技术" scheme="http://blog.3gcnbeta.com/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/WEB%E5%BC%80%E5%8F%91/WEB%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Javascript" scheme="http://blog.3gcnbeta.com/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/WEB%E5%BC%80%E5%8F%91/WEB%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/Javascript/"/>
    
    
  </entry>
  
  <entry>
    <title>用jquery添加纯文本的最佳方法</title>
    <link href="http://blog.3gcnbeta.com/2013/06/23/%E7%94%A8jquery%E6%B7%BB%E5%8A%A0%E7%BA%AF%E6%96%87%E6%9C%AC%E7%9A%84%E6%9C%80%E4%BD%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.3gcnbeta.com/2013/06/23/用jquery添加纯文本的最佳方法/</id>
    <published>2013-06-22T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;出于安全的考虑，很多时候服务器端的数据是不能生成HTML数据的。&lt;/p&gt;
&lt;p&gt;所以我们要找到一个纯文本的方式来显示服务器的数据。&lt;/p&gt;
&lt;p&gt;即HTML的代码最终显示的结果还是HTML文本，而不是HTML节点。&lt;/p&gt;
&lt;p&gt;为了做到这一点，我也搜索了国内外的网站的文章，没有找到特别好的建议的办法。&lt;/p&gt;
&lt;p&gt;有些是建议添加新的tag的方式来添加文本，显然不符合我有洁癖的人士的要求。&lt;/p&gt;
&lt;p&gt;于是通过实践找到了一个很实用的方法：&lt;/p&gt;
&lt;p&gt;1、通过document.createTextNode可以创建一个无污染的文本节点。&lt;/p&gt;
&lt;p&gt;2、然后通过调用JQuery的appendTo方法添加到想要添加的元素上去。&lt;/p&gt;
&lt;p&gt;这种方法全天然，无污染，应该是一种非常健康的方式。&lt;/p&gt;
&lt;p&gt;除了IE的老浏览器可能会出现内存泄漏的问题外，其它的浏览器应该完全可以放心使用。&lt;/p&gt;
&lt;p&gt;代码只有一行，简单如下所示：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createTextNode(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;)).appendTo(p);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;出于安全的考虑，很多时候服务器端的数据是不能生成HTML数据的。&lt;/p&gt;
&lt;p&gt;所以我们要找到一个纯文本的方式来显示服务器的数据。&lt;/p&gt;
&lt;p&gt;即HTML的代码最终显示的结果还是HTML文本，而不是HTML节点。&lt;/p&gt;
&lt;p&gt;为了做到这一点，我也搜索了国内外的网站的文章
    
    </summary>
    
      <category term="其它" scheme="http://blog.3gcnbeta.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu 13.04 经常读硬盘而变的非常慢的解决办法</title>
    <link href="http://blog.3gcnbeta.com/2013/06/02/ubuntu-13-04-%E7%BB%8F%E5%B8%B8%E8%AF%BB%E7%A1%AC%E7%9B%98%E8%80%8C%E5%8F%98%E7%9A%84%E9%9D%9E%E5%B8%B8%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://blog.3gcnbeta.com/2013/06/02/ubuntu-13-04-经常读硬盘而变的非常慢的解决办法/</id>
    <published>2013-06-01T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;最近使用Ubuntu是发现经常读硬盘，导致速度非常的慢的。搜索了一下发现在可以调整内存的交换设置来改善这种情况。&lt;br&gt;代码如下，值可以是0～100，当我们把swappiness设置成0后，基本上就没有什么交换的情况发生了。&lt;br&gt;速度就非常快了，真正的感觉到使用Linux快感了。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo sysctl vm.swappiness=0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当然要想把这个设置保存下了，需要把这个值保存到文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/etc/sysctl.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;中，添加如下的语句：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vm.swappiness=0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面我把wiki上的内容复制一下，&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Swappiness&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://en.wikipedia.org/wiki/Swappiness&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Swappiness is a property for the Linux kernel that changes the balance between swapping out runtime memory, as opposed to dropping pages from the system page cache. Swappiness can be set to values between 0 and 100 inclusive. A low value means the kernel will try to avoid swapping as much as possible where a higher value instead will make the kernel aggressively try to use swap space. The default value is 60, and for most desktop systems, setting it to 100 may affect the overall performance, whereas setting it lower (even 0) may improve interactivity (by decreasing response latency.)[1]&lt;/p&gt;
&lt;p&gt;In short:&lt;/p&gt;
&lt;p&gt;vm.swappiness = 0 - it will swap only to avoid an out of memory condition&lt;/p&gt;
&lt;p&gt;vm.swappiness = 60 - default value&lt;/p&gt;
&lt;p&gt;vm.swappiness = 100 - it will swap aggressively&lt;/p&gt;
&lt;p&gt;To temporarily set the swappiness in Linux, write the desired value (e.g. 10) to /proc/sys/vm/swappiness using the following command, running as root user: echo 10 &amp;gt; /proc/sys/vm/swappiness&lt;/p&gt;
&lt;p&gt;Permanent changes are made in /etc/sysctl.conf via the following configuration line (inserted if not present previously): vm.swappiness = 10&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近使用Ubuntu是发现经常读硬盘，导致速度非常的慢的。搜索了一下发现在可以调整内存的交换设置来改善这种情况。&lt;br&gt;代码如下，值可以是0～100，当我们把swappiness设置成0后，基本上就没有什么交换的情况发生了。&lt;br&gt;速度就非常快了，真正的感觉到使用Linux
    
    </summary>
    
      <category term="操作系统" scheme="http://blog.3gcnbeta.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Linux" scheme="http://blog.3gcnbeta.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>[转载]解决bitbucket被封，无法pull，push的问题</title>
    <link href="http://blog.3gcnbeta.com/2013/05/24/%E8%A7%A3%E5%86%B3bitbucket%E8%A2%AB%E5%B0%81%EF%BC%8C%E6%97%A0%E6%B3%95pull%EF%BC%8Cpush%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://blog.3gcnbeta.com/2013/05/24/解决bitbucket被封，无法pull，push的问题/</id>
    <published>2013-05-23T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;原文：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://qing.blog.sina.com.cn/1687779391/6499783f33003s9u.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://qing.blog.sina.com.cn/1687779391/6499783f33003s9u.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;解决bitbucket被封，无法pull，push的问题&lt;/p&gt;
&lt;p&gt;昨晚就发现bitbucket抽风，push很慢，根本无法pull，今天早上来验证，才发现被墙了。还有很多项目托管在上面，于是寻找google解决。解决办法如下：&lt;/p&gt;
&lt;p&gt;配置git pull和push都走https协议，不要走git或者ssh协议；&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --add http.proxy 127.0.0.1:8087&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --add https.proxy 127.0.0.1:8087&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --add https.sslVerify false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global http.postBuffer 524288000   #非常重要，否则可能提交不成功。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;8087为本地的goagent端口，sslVerify最好配置为false，否则会出现证书问题。&lt;/p&gt;
&lt;p&gt;上面的操作也可以换成直接修改.git/config文件，添加如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[http]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;proxy = http://127.0.0.1:8087&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sslVerify = false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[https]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;proxy = http://127.0.0.1:8087&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sslVerify = false&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;url = https://*****@bitbucket.org/****.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pushurl = https://****@bitbucket.org/****.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;原文：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://qing.blog.sina.com.cn/1687779391/6499783f33003s9u.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://qing.blog.sina.c
    
    </summary>
    
      <category term="其它" scheme="http://blog.3gcnbeta.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>Codeigniter创建灵活的链接方式的办法</title>
    <link href="http://blog.3gcnbeta.com/2013/05/16/codeigniter%E5%88%9B%E5%BB%BA%E7%81%B5%E6%B4%BB%E7%9A%84%E9%93%BE%E6%8E%A5%E6%96%B9%E5%BC%8F%E7%9A%84%E5%8A%9E%E6%B3%95/"/>
    <id>http://blog.3gcnbeta.com/2013/05/16/codeigniter创建灵活的链接方式的办法/</id>
    <published>2013-05-15T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;如何在CI中创建干净的链接地址以方便SEO或者直接使用index.php方便在没有配置rewrite规则的机器上调试呢？&lt;/p&gt;
&lt;p&gt;下面我介绍一下我通过实践找到的在apache下面的办法。&lt;/p&gt;
&lt;p&gt;1、对于所有的输出地址统一采用site_url(“controller/method”);这样的生成方式&lt;/p&gt;
&lt;p&gt;2、修改config文件里的信息&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($_SERVER[&lt;span class=&quot;string&quot;&gt;&#39;PHP_SELF&#39;&lt;/span&gt;] == $_SERVER[&lt;span class=&quot;string&quot;&gt;&#39;REQUEST_URI&#39;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $config[&lt;span class=&quot;string&quot;&gt;&#39;index_page&#39;&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;index.php&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $config[&lt;span class=&quot;string&quot;&gt;&#39;index_page&#39;&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3、修改rewrite规则&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;IfModule mod_rewrite.c&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RewriteEngine On&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RewriteBase /&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RewriteCond %&amp;#123;REQUEST_FILENAME&amp;#125; !-f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RewriteCond %&amp;#123;REQUEST_FILENAME&amp;#125; !-d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RewriteRule ^(.*)$ index.php?/$1 [L]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;基本上完成以上的布置就可以在多个配置下灵活的切换，而不会产生问题了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;如何在CI中创建干净的链接地址以方便SEO或者直接使用index.php方便在没有配置rewrite规则的机器上调试呢？&lt;/p&gt;
&lt;p&gt;下面我介绍一下我通过实践找到的在apache下面的办法。&lt;/p&gt;
&lt;p&gt;1、对于所有的输出地址统一采用site_url(“controll
    
    </summary>
    
      <category term="其它" scheme="http://blog.3gcnbeta.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>利用FormData与jquery实现ajax上传文件</title>
    <link href="http://blog.3gcnbeta.com/2013/05/03/%E5%88%A9%E7%94%A8formdata%E4%B8%8Ejquery%E5%AE%9E%E7%8E%B0ajax%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/"/>
    <id>http://blog.3gcnbeta.com/2013/05/03/利用formdata与jquery实现ajax上传文件/</id>
    <published>2013-05-02T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;由于新的技术进步，上传文件这样的事情已经可以轻松的通过ajax实现&lt;/p&gt;
&lt;p&gt;下面的代码是通过我的调试与验证的，基本是已经可以用了，现在分享一下。&lt;/p&gt;
&lt;p&gt;也将我遇到的问题抛出来，希望有人可以帮助解答。&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; form = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FormData($(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).parents(&lt;span class=&quot;string&quot;&gt;&quot;form&quot;&lt;/span&gt;).get(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//这段注释的代码用来实现添加文件（但是根据测试的结果来看，不是非常可靠）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//建议在form里编写文件上传的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;form.append(&lt;span class=&quot;string&quot;&gt;&#39;file&#39;&lt;/span&gt;, $(&lt;span class=&quot;string&quot;&gt;&#39;input[type=file]&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].files[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;form.append(&lt;span class=&quot;string&quot;&gt;&#39;image&#39;&lt;/span&gt;, $(&lt;span class=&quot;string&quot;&gt;&#39;input[type=file]&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].files[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//这里有一个很奇怪的问题，没有初始化FormData时，我只append image时发不出来文件，添加了file再添加image,就能将image发出来了。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//这里可以添加字段，对于中文或者非ASCCI码，记得转码转送，这样不会出现乱码，也符合HTTP的规范。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;form.append(&lt;span class=&quot;string&quot;&gt;&#39;act&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;update&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;form.append(&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt;($(&lt;span class=&quot;string&quot;&gt;&#39;input[type=text]&#39;&lt;/span&gt;).val()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;form.append(&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt;($(&lt;span class=&quot;string&quot;&gt;&#39;input[type=hidden]&#39;&lt;/span&gt;).val()));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后通过jquery发送。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  url: &amp;quot;stash.php&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: &amp;quot;POST&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  data: form,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  processData: false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  contentType: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;两个flase很重要，processData=false告诉jquery不要处理数据，contentType=false告诉jquery不要再设contentType类型。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;由于新的技术进步，上传文件这样的事情已经可以轻松的通过ajax实现&lt;/p&gt;
&lt;p&gt;下面的代码是通过我的调试与验证的，基本是已经可以用了，现在分享一下。&lt;/p&gt;
&lt;p&gt;也将我遇到的问题抛出来，希望有人可以帮助解答。&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;figure class
    
    </summary>
    
      <category term="编程技术" scheme="http://blog.3gcnbeta.com/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/"/>
    
      <category term="WEB开发" scheme="http://blog.3gcnbeta.com/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/WEB%E5%BC%80%E5%8F%91/"/>
    
      <category term="WEB前端技术" scheme="http://blog.3gcnbeta.com/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/WEB%E5%BC%80%E5%8F%91/WEB%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Javascript" scheme="http://blog.3gcnbeta.com/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/WEB%E5%BC%80%E5%8F%91/WEB%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/Javascript/"/>
    
    
  </entry>
  
  <entry>
    <title>一段HTML图片上传前显示图片的代码</title>
    <link href="http://blog.3gcnbeta.com/2013/02/18/%E4%B8%80%E6%AE%B5html%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E5%89%8D%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E7%9A%84%E4%BB%A3%E7%A0%81/"/>
    <id>http://blog.3gcnbeta.com/2013/02/18/一段html图片上传前显示图片的代码/</id>
    <published>2013-02-17T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;一段使用jquery图片上传前显示图片的代码，来源：&lt;br&gt;&lt;br&gt;&lt;a href=&quot;http://stackoverflow.com/questions/4459379/preview-an-image-before-it-is-uploaded&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://stackoverflow.com/questions/4459379/preview-an-image-before-it-is-uploaded&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;一般情况下，javascript无法直接获取本地图片的地址，所以需要利用FileReader里的readAsDataURL读取隐藏的文件地址。&lt;br&gt;&lt;br&gt;并在加载完文件后通过访问e.target.result显示出来。&lt;/p&gt;&lt;br&gt;&lt;pre name=&quot;code&quot; language=&quot;javascript&quot;&gt;&lt;br&gt;//Image show on change input file&lt;br&gt;&lt;br&gt;    if ($(‘input[type=file]’).length &amp;gt; 0) {&lt;br&gt;&lt;br&gt;        $(‘input[type=file]’).change(function() {&lt;br&gt;&lt;br&gt;            if (this.files &amp;amp;&amp;amp; this.files[0]) {&lt;br&gt;&lt;br&gt;                var reader = new FileReader();&lt;br&gt;&lt;br&gt;                reader.onload = function(e) {&lt;br&gt;&lt;br&gt;                    $(‘ul li a img’).attr(‘src’, e.target.result).width(90).height(90);&lt;br&gt;&lt;br&gt;                };&lt;br&gt;&lt;br&gt;                reader.readAsDataURL(this.files[0]);&lt;br&gt;&lt;br&gt;            }&lt;br&gt;&lt;br&gt;        });&lt;br&gt;&lt;br&gt;    }&lt;br&gt;&lt;br&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一段使用jquery图片上传前显示图片的代码，来源：&lt;br&gt;&lt;br&gt;&lt;a href=&quot;http://stackoverflow.com/questions/4459379/preview-an-image-before-it-is-uploaded&quot; target=&quot;_bl
    
    </summary>
    
      <category term="HTML" scheme="http://blog.3gcnbeta.com/categories/HTML/"/>
    
      <category term="WEB开发" scheme="http://blog.3gcnbeta.com/categories/HTML/WEB%E5%BC%80%E5%8F%91/"/>
    
      <category term="WEB前端技术" scheme="http://blog.3gcnbeta.com/categories/HTML/WEB%E5%BC%80%E5%8F%91/WEB%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Javascript" scheme="http://blog.3gcnbeta.com/categories/HTML/WEB%E5%BC%80%E5%8F%91/WEB%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/Javascript/"/>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu 安装到 Mac Air</title>
    <link href="http://blog.3gcnbeta.com/2013/02/14/ubuntu-%E5%AE%89%E8%A3%85%E5%88%B0-mac-air/"/>
    <id>http://blog.3gcnbeta.com/2013/02/14/ubuntu-安装到-mac-air/</id>
    <published>2013-02-13T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://ubuntuforums.org/showthread.php?t=2039799&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ubuntuforums.org/showthread.php?t=2039799&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://ubuntuforums.org/showthread.php?t=2039799&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ubuntuforums.org/showthread.php?t=203979
    
    </summary>
    
      <category term="其它" scheme="http://blog.3gcnbeta.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>Hadoop不是什么(What Hadoop is Not)?</title>
    <link href="http://blog.3gcnbeta.com/2012/12/12/hadoop%E4%B8%8D%E6%98%AF%E4%BB%80%E4%B9%88what-hadoop-is-not/"/>
    <id>http://blog.3gcnbeta.com/2012/12/12/hadoop不是什么what-hadoop-is-not/</id>
    <published>2012-12-11T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;原文：&lt;br&gt;&lt;br&gt;&lt;a href=&quot;http://wiki.apache.org/hadoop/HadoopIsNot&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://wiki.apache.org/hadoop/HadoopIsNot&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;Hadoop不是什么？&lt;/strong&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;我们现在可以从很多电子邮件(西方人在互联网上的交流很多是基于邮件的)获取关于Hadoop的信息,从而会认为hadoop可以解决所有的应用/数据中心的问题。但是，事实不是这样的。他为一些公司和组织解决了特定的问题，但是只是在他们理解了这项技术之后，并且是在适当的地方。如果你是抱着替换你的数据库或者SAN文件系统的思路来开始使用Hadoop的话，你将会失望。&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;Apache Haddop不是对数据库的替换&lt;/strong&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;数据库是伟大的东西。发起一个SELECT的SQL调用，就可以利用数据库的索引/优化产生毫秒级的响应。想改变数据？执行一个UPDATE然后数据就变了。但是Hadoop并不是做这个的。&lt;/p&gt;&lt;br&gt;&lt;p&gt;Hadoop保存数据在文件里面，并且不建立索引。如果你想要查找一些东西，你必须运行一个MapReduce的作业来跑完所有的数据。这个需要花费一些时间，也就是说，你不能直接用Hadoop来替换database。Hadoop工作的地方是那些对于数据来讲，数据太大的地方(比如：你达到了技术的极限，而不是你不想为数据库付费)。对于非常大的数据库来说，产生索引的代价太大以至于你不能简单的对变更数据产生索引。当很多机器在向这个数据库执行写操作时，你就无法对这个数据库进行锁操作。但这个时候一个关联不直接的分布式文件系统的思路是可行的。&lt;/p&gt;&lt;br&gt;&lt;p&gt;这里有一个运行在Hadoop HDFS之上的高性能的基于列表的数据库：Apache HBase。这是一个很好的将你抽取出来的数据保存下来的地方。&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;MapReduce并不总是最好的算法&lt;/strong&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;MapReduce是一个深奥的想法：通过一个简单的函数式编程的操作，然后应用它，用并行计算的方式，针对Gb或者Tb级的数据。但是这是有代价的。对于那个并行性来说，你需要让所有的MR操作与其它的操作是独立的。如果你需要知道之前所有的事情的进行情况，你就会遇到问题。这些问题可以通过使用：&lt;br&gt;&lt;br&gt;Iteration(迭代): 运行多个MR作业，前一个的输出，作为下一个的输入。&lt;br&gt;&lt;br&gt;共享状态信息: Hbase在这里一个可以考虑的选项，或者一些象memcache这样的也是一个选项。&lt;br&gt;&lt;br&gt;得到帮助。&lt;/p&gt;&lt;br&gt;&lt;p&gt;不要试图记住共享变量里的信息，因为他们是只记录在一个JVM里的。在大量并行计算的环境下，这是一种错误的方式。&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;Hadoop和MapReduce不是一个学习java编程的地方&lt;/strong&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;现在的Hadoop API和文档里有很多的预设条件，假设你有java编程的基础，与解决Hadoop不能工作时的常见的错误消息的基础。如果你不懂classpath, 怎么编译与调试java代码，先从hadoop里抽出来，回去学习一些关于java的更多的知识后再跟进。&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;Hadoop 不是一个学习网络错误消息的理想场所。&lt;/strong&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;如果你对网络与相关的错误消息已经很熟悉，你会发现事情就会更加容易的工作。比如：&amp;ldquo;连接拒绝&amp;rdquo;是什么意思，和它与&amp;ldquo;没有连接到主机的路由&amp;rdquo;的差别怎样的。&lt;/p&gt;&lt;br&gt;&lt;p&gt;很多人发送了与&amp;ldquo;连接拒绝&amp;rdquo;、&amp;ldquo;没有连接到主机的路由&amp;rdquo;和其它常见的TCP-IP层次相关的问题到用户列表上。这些通常是由无效的集群配置引起的现象，集群的某些部分没有运行或者机器不能在内网互相通讯。邮件列表上的人不能帮助你调试你的网络配置，因为这是你的网络，不是他们的。他们可以帮你点出一些工具和测试方法，但是因为每个邮件的来回时间可能会花上一天，所以你会发现这并不是一个很快的得到帮助的方法。&lt;/p&gt;&lt;br&gt;&lt;p&gt;Hadoop小组的人员并不会故意的让事情变的困难，只是一个大型的分布式系统如果不能很好的工作，你肯定会得到一些有意思的错误信息。如果你可以帮助改进这些网络消息或者诊断方法，我们会很想得到这些代码。&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;Hadoop集群不是一个学习Unix/Linux系统管理的地方&lt;/strong&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;你自己需要知道在Unix/Linux系统下怎么玩。怎么装？在/etc/下面的各种文件是做什么用的？怎么建立网络？什么样的hosts配置是好的？如何调试DNS的问题？为什么把日志放在独立的盘上，而不是根盘？等等。如果你一个单机都照顾不过来，你不可能处理由80个这种机器组成的一个集群。也就是说不要试图用手动编辑/etc/hosts那样的方法来维护80个以上这样的单元，因为这种方法是不能规模化的。&lt;/p&gt;&lt;br&gt;&lt;p&gt;你需要了解的事情：&lt;/p&gt;&lt;br&gt;&lt;p&gt;SSH，他是什么，怎么样搭建authorized_keys,怎样使用ssh/scp命令&lt;br&gt;&lt;br&gt;ifconfig, nslookup和其它一些网络配置/诊断工具&lt;br&gt;&lt;br&gt;你的平台是如何保持他的更新的。&lt;br&gt;&lt;br&gt;你的机器产生的各种日志文件，以及他们的意义。&lt;br&gt;&lt;br&gt;如果建立原生的文件系统，并且挂载他们。&lt;/p&gt;&lt;br&gt;&lt;p&gt;这个是非常重要的。如果你不懂这些，说明你的程度还不够。在你对如何让Linux系统启动和运行有一些基本的了解前，在你能用ssh不输入密码就可以相互登陆不同的机器前，在这些机器能相互找到各自的主机名等等问题解决前，你不应该开始安装Hadoop。Hadoop的文档默认你是能做这些事情的，并且也不会解释他们是如何动作的。&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;HDFS并不是POSIX文件系统&lt;/strong&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;POSIX文件系统模型的文件可以追加，得到调用时的位置，锁定的文件等信息。但是你不能无缝的将针对所有的POSIX兼容的文件系统的代码直接映射到HDFS上。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;原文：&lt;br&gt;&lt;br&gt;&lt;a href=&quot;http://wiki.apache.org/hadoop/HadoopIsNot&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://wiki.apache.org/hadoop/HadoopIsNot&lt;/
    
    </summary>
    
      <category term="WEB服务器技术" scheme="http://blog.3gcnbeta.com/categories/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="民工翻译" scheme="http://blog.3gcnbeta.com/categories/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%80%E6%9C%AF/%E6%B0%91%E5%B7%A5%E7%BF%BB%E8%AF%91/"/>
    
      <category term="noSQL" scheme="http://blog.3gcnbeta.com/categories/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%80%E6%9C%AF/%E6%B0%91%E5%B7%A5%E7%BF%BB%E8%AF%91/noSQL/"/>
    
    
  </entry>
  
  <entry>
    <title>Code igniter 多表查询的实现</title>
    <link href="http://blog.3gcnbeta.com/2012/12/04/code-igniter-%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://blog.3gcnbeta.com/2012/12/04/code-igniter-多表查询的实现/</id>
    <published>2012-12-03T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;网上关于Code Igniter的多表查询的例子比较少。&lt;br&gt;&lt;br&gt;大家大部分使用的是join。&lt;/p&gt;&lt;br&gt;&lt;p&gt;但是这不表示ci不能多表查询。&lt;/p&gt;&lt;br&gt;&lt;p&gt;下面给一个ci的多表查询的示例代码，摘自一个函数&lt;br&gt;&lt;br&gt;希望能对新人会有帮助。&lt;/p&gt;&lt;br&gt;&lt;pre name=&quot;code&quot; class=&quot;php&quot;&gt;&lt;br&gt;    $this-&amp;gt;db-&amp;gt;select(‘&lt;br&gt;&lt;br&gt;        bu_g_l.alias as name,&lt;br&gt;&lt;br&gt;        bu_g_l.info as intro,&lt;br&gt;&lt;br&gt;        bu_g_l.code,&lt;br&gt;&lt;br&gt;        ‘);&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;    $this-&amp;gt;db-&amp;gt;from(&lt;br&gt;&lt;br&gt;        $this-&amp;gt;_table_name . ‘ as u_t_g_l,’ .&lt;br&gt;&lt;br&gt;        $this-&amp;gt;_table_name_user_tag . ‘ as u_t,’ .&lt;br&gt;&lt;br&gt;        $this-&amp;gt;_table_name_business_unit_goods . ‘ as bu_g,’ .&lt;br&gt;&lt;br&gt;        $this-&amp;gt;_table_name_business_unit_goods_list . ‘ as bu_g_l,’ .&lt;br&gt;&lt;br&gt;    );&lt;/p&gt;&lt;br&gt;&lt;p&gt;    $this-&amp;gt;db-&amp;gt;where(‘u_t.user_id’, $user_id);&lt;br&gt;&lt;br&gt;    $this-&amp;gt;db-&amp;gt;where(‘u_t.tag_id’, $tag_id);&lt;br&gt;&lt;br&gt;    $this-&amp;gt;db-&amp;gt;where(‘(u_t_g_l.user_tag_id = u_t.user_tag_id)’);&lt;br&gt;&lt;br&gt;    $this-&amp;gt;db-&amp;gt;where(‘(u_t_g_l.business_unit_goods_id = bu_g.id)’);&lt;br&gt;&lt;br&gt;    $this-&amp;gt;db-&amp;gt;where(‘(bu.id = bu_g.business_unit_id)’);&lt;/p&gt;&lt;br&gt;&lt;p&gt;    if($limit) {&lt;br&gt;&lt;br&gt;      $this-&amp;gt;db-&amp;gt;limit($limit, $offset);&lt;br&gt;&lt;br&gt;    }&lt;/p&gt;&lt;br&gt;&lt;p&gt;    $query = $this-&amp;gt;db-&amp;gt;get();&lt;br&gt;&lt;br&gt;    $error = $this-&amp;gt;db-&amp;gt;_error_message();&lt;br&gt;&lt;br&gt;    if ($error)&lt;br&gt;&lt;br&gt;      return -1;&lt;br&gt;&lt;br&gt;    return $query-&amp;gt;result_array();&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;网上关于Code Igniter的多表查询的例子比较少。&lt;br&gt;&lt;br&gt;大家大部分使用的是join。&lt;/p&gt;&lt;br&gt;&lt;p&gt;但是这不表示ci不能多表查询。&lt;/p&gt;&lt;br&gt;&lt;p&gt;下面给一个ci的多表查询的示例代码，摘自一个函数&lt;br&gt;&lt;br&gt;希望能对新人会有帮助。&lt;/p&gt;&lt;br
    
    </summary>
    
      <category term="其它" scheme="http://blog.3gcnbeta.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>Centos 下sudo奇慢的解决办法</title>
    <link href="http://blog.3gcnbeta.com/2012/12/01/centos-%E4%B8%8Bsudo%E5%A5%87%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://blog.3gcnbeta.com/2012/12/01/centos-下sudo奇慢的解决办法/</id>
    <published>2012-11-30T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;&lt;br&gt;进入root账号：&lt;/p&gt;&lt;br&gt;&lt;p&gt;echo “127.0.0.1 &lt;code&gt;hostname&lt;/code&gt;“ &amp;gt;&amp;gt; /etc/hosts&lt;/p&gt;&lt;br&gt;&lt;p&gt;注：&lt;br&gt;&lt;br&gt;CentOS的用户友好性是比较差的一个系统。&lt;/p&gt;&lt;br&gt;&lt;p&gt;作为Lamp的主要平台，竟然存在着apache的mod php的解析问题。&lt;/p&gt;&lt;br&gt;&lt;p&gt;同时还有一堆不合理的设置。&lt;/p&gt;&lt;br&gt;&lt;p&gt;他成为服务器的主流Os让我非常不解。&lt;/p&gt;&lt;br&gt;&lt;p&gt;欢迎高人来帮助我理解。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;br&gt;进入root账号：&lt;/p&gt;&lt;br&gt;&lt;p&gt;echo “127.0.0.1 &lt;code&gt;hostname&lt;/code&gt;“ &amp;gt;&amp;gt; /etc/hosts&lt;/p&gt;&lt;br&gt;&lt;p&gt;注：&lt;br&gt;&lt;br&gt;CentOS的用户友好性是比较差的一个系统。&lt;/p&gt;&lt;br&gt;&lt;p&gt;作
    
    </summary>
    
      <category term="操作系统" scheme="http://blog.3gcnbeta.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Linux" scheme="http://blog.3gcnbeta.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>利用curl实现字段数组，文件数组的提供</title>
    <link href="http://blog.3gcnbeta.com/2012/11/17/%E5%88%A9%E7%94%A8curl%E5%AE%9E%E7%8E%B0%E5%AD%97%E6%AE%B5%E6%95%B0%E7%BB%84%EF%BC%8C%E6%96%87%E4%BB%B6%E6%95%B0%E7%BB%84%E7%9A%84%E6%8F%90%E4%BE%9B/"/>
    <id>http://blog.3gcnbeta.com/2012/11/17/利用curl实现字段数组，文件数组的提供/</id>
    <published>2012-11-16T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;最近在公司一直忙于开发测试平台来满足各种程序测试需求，&lt;br&gt;&lt;br&gt;这些需求中就包含有对多字段数组与文件数组的提供的需求。&lt;br&gt;&lt;br&gt;我采用的方法最先想到的当然是使用curl.&lt;br&gt;&lt;br&gt;于是一个能将字段数组与文件上传的curl很快就产生了。&lt;br&gt;&lt;br&gt;然后发给其他的同事测试。&lt;br&gt;&lt;br&gt;结果反映都是无法使用。&lt;br&gt;&lt;br&gt;后来发现php5.3以下的版本不能支持文件上传。&lt;/p&gt;&lt;br&gt;&lt;p&gt;于是更新到5.3后curl文件上传功能就可以用了。&lt;/p&gt;&lt;br&gt;&lt;p&gt;但是这时的curl还是无法上传文件数组的。&lt;/p&gt;&lt;br&gt;&lt;p&gt;于是我通过调试完成了下面的代码：&lt;/p&gt;&lt;br&gt;&lt;pre name=&quot;code&quot; class=&quot;php&quot;&gt;&lt;br&gt;  private function  generate_file_array() {&lt;br&gt;&lt;br&gt;    $files = array();&lt;br&gt;&lt;br&gt;    $tmpdir = sys_get_temp_dir();&lt;br&gt;&lt;br&gt;    foreach($_FILES as $k =&amp;gt; $v) {&lt;br&gt;&lt;br&gt;      if (is_array($v[‘name’])) {&lt;br&gt;&lt;br&gt;        foreach($v[‘name’] as $k1 =&amp;gt; $v1) {&lt;br&gt;&lt;br&gt;          $file = $tmpdir . DIRECTORY_SEPARATOR . $v1;&lt;br&gt;&lt;br&gt;            if (move_uploaded_file($_FILES[$k][‘tmp_name’][$k1], $file)) {&lt;br&gt;&lt;br&gt;              $files[$k. ‘[‘ . $k1 . ‘]’] = ‘@’ . $file . ‘;type=’ . $v[‘type’][$k1];&lt;br&gt;&lt;br&gt;            } else {&lt;br&gt;&lt;br&gt;            echo “Possible file upload attack!n”;&lt;br&gt;&lt;br&gt;            }&lt;br&gt;&lt;br&gt;        }&lt;br&gt;&lt;br&gt;        continue;&lt;br&gt;&lt;br&gt;      }&lt;br&gt;&lt;br&gt;      $file = $tmpdir . DIRECTORY_SEPARATOR . $v[‘name’];&lt;br&gt;&lt;br&gt;      if (move_uploaded_file($_FILES[$k][‘tmp_name’], $file)) {&lt;br&gt;&lt;br&gt;        $files[$k] = ‘@’ . $file . ‘;type=’ . $v[‘type’];&lt;br&gt;&lt;br&gt;      } else {&lt;br&gt;&lt;br&gt;        echo “Possible file upload attack!n”;&lt;br&gt;&lt;br&gt;      }&lt;br&gt;&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    return $files;&lt;br&gt;&lt;br&gt;  }&lt;br&gt;&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;对于文件数组来讲最重要的是如下使用方法:&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;pre name=&quot;code&quot; class=&quot;php&quot;&gt;&lt;br&gt;$files[$k. ‘[‘ . $k1 . ‘]’] = ‘@’ . $file . ‘;type=’ . $v[‘type’][$k1];&lt;br&gt;&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;$k要转化成$k. ‘[‘&lt;br&gt;&lt;br&gt;又一个数组&lt;br&gt;&lt;br&gt;也就是&lt;br&gt;&lt;br&gt;key[0], key[1]的形式。&lt;br&gt;&lt;br&gt;这样通过set_opt_array&lt;br&gt;&lt;br&gt;就可以直接上传文件数组了。&lt;p&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在公司一直忙于开发测试平台来满足各种程序测试需求，&lt;br&gt;&lt;br&gt;这些需求中就包含有对多字段数组与文件数组的提供的需求。&lt;br&gt;&lt;br&gt;我采用的方法最先想到的当然是使用curl.&lt;br&gt;&lt;br&gt;于是一个能将字段数组与文件上传的curl很快就产生了。&lt;br&gt;&lt;br&gt;然后发
    
    </summary>
    
      <category term="WEB服务器技术" scheme="http://blog.3gcnbeta.com/categories/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="php" scheme="http://blog.3gcnbeta.com/categories/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%80%E6%9C%AF/php/"/>
    
    
  </entry>
  
  <entry>
    <title>将Code Igniter导入sina app的数据库配置</title>
    <link href="http://blog.3gcnbeta.com/2012/09/16/%E5%B0%86code-igniter%E5%AF%BC%E5%85%A5sina-app%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AE/"/>
    <id>http://blog.3gcnbeta.com/2012/09/16/将code-igniter导入sina-app的数据库配置/</id>
    <published>2012-09-15T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;这个东西要是没有弄好，还真愁人.&lt;/p&gt;&lt;br&gt;&lt;pre name=&quot;code&quot; class=&quot;php&quot;&gt;&lt;br&gt;$db[‘default’][‘hostname’] = SAE_MYSQL_HOST_M;&lt;br&gt;&lt;br&gt;$db[‘default’][‘username’] = SAE_MYSQL_USER;&lt;br&gt;&lt;br&gt;$db[‘default’][‘password’] = SAE_MYSQL_PASS;&lt;br&gt;&lt;br&gt;$db[‘default’][‘database’] = SAE_MYSQL_DB;&lt;br&gt;&lt;br&gt;$db[‘default’][‘dbdriver’] = ‘mysqli’;&lt;br&gt;&lt;br&gt;$db[‘default’][‘port’] = SAE_MYSQL_PORT;&lt;br&gt;&lt;br&gt;$db[‘default’][‘pconnect’] = FALSE;&lt;br&gt;&lt;br&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这个东西要是没有弄好，还真愁人.&lt;/p&gt;&lt;br&gt;&lt;pre name=&quot;code&quot; class=&quot;php&quot;&gt;&lt;br&gt;$db[‘default’][‘hostname’] = SAE_MYSQL_HOST_M;&lt;br&gt;&lt;br&gt;$db[‘default’][‘username’]
    
    </summary>
    
      <category term="php" scheme="http://blog.3gcnbeta.com/categories/php/"/>
    
    
  </entry>
  
  <entry>
    <title>eval is evil, 驳老赵性能无损说</title>
    <link href="http://blog.3gcnbeta.com/2012/09/02/eval-is-evil-%E9%A9%B3%E8%80%81%E8%B5%B5%E6%80%A7%E8%83%BD%E6%97%A0%E6%8D%9F%E8%AF%B4/"/>
    <id>http://blog.3gcnbeta.com/2012/09/02/eval-is-evil-驳老赵性能无损说/</id>
    <published>2012-09-01T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://blog.zhaojie.me/2012/08/js-code-from-eval-benchmark.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.zhaojie.me/2012/08/js-code-from-eval-benchmark.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原文把一个固定值传给了eval,&lt;/p&gt;
&lt;p&gt;那么经过js的解释器一分析后，由于字符串是固定的，所以优化过的js引擎就会直接解析成函数返回。&lt;/p&gt;
&lt;p&gt;因为这里eval不eval根本没有区别。将这个来测试eval性能，只能说是一种行为艺术。&lt;/p&gt;
&lt;p&gt;那么如何证明eval在实际上对于性的损失影响很大呢？&lt;/p&gt;
&lt;p&gt;方法很简单，两行代码，一个浏览器Chrome:&lt;/p&gt;
&lt;p&gt;在Chrome下Ctrl+i打开调试界面，点入console：&lt;/p&gt;
&lt;p&gt;复制下面的代码执行：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var sum = 0, a = 0, b = 0, i = 0, c = 0; a = new Date(); for(; i &amp;lt; 1000 ; i++) &amp;#123; sum = eval( &amp;apos;sum + i&amp;apos;); &amp;#125;; b = new Date(); c = b - a; &amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118//结果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var sum = 0, a = 0, b = 0, i = 0, c = 0; a = new Date(); for(; i &amp;lt; 1000 ; i++) &amp;#123; sum = sum + i; &amp;#125;; b = new Date(); c = b - a;&amp;lt;/em&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3//结果&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;在这里相关了118 / 3 ~ 40倍&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;还有几次的结果是&lt;/p&gt;
&lt;p&gt;119 / 2 ~ 60倍&lt;/p&gt;
&lt;p&gt;如果这样是无性能损失的话，那60个人就等于是一个人。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;受@老赵的错误引导，有下面的结论：&lt;/p&gt;
&lt;p&gt;october 2012-08-20 16:26:12&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;eval并没有什么性能损失吧. eval只是可以让程序员人为控制编译时机, 但编译消耗的时间还是一样的. 比如某一js文件有10000行代码, 假设需要编译x秒 把后5000行代码用eval包起来后,&lt;br&gt;js文件:&lt;br&gt;1    … 此处5000行js代码 …&lt;br&gt;2    eval(“…此处5000行js代码…”)&lt;br&gt;那么过程就变成了: 编译前5000行 -&amp;gt; 运行前5000行 -&amp;gt; 运行到eval() -&amp;gt; 编译后5000行&lt;br&gt;看的出来,只是编译人为置后了, 应该没有性能损失….拙见….&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://blog.zhaojie.me/2012/08/js-code-from-eval-benchmark.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.zhaojie.me/2012/08/j
    
    </summary>
    
      <category term="Javascript" scheme="http://blog.3gcnbeta.com/categories/Javascript/"/>
    
    
  </entry>
  
  <entry>
    <title>各类语言的基准测试后得出的最好性能的语言结果对比表</title>
    <link href="http://blog.3gcnbeta.com/2012/09/01/%E5%90%84%E7%B1%BB%E8%AF%AD%E8%A8%80%E7%9A%84%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E6%80%A7%E8%83%BD%E6%AD%A3%E5%A4%AA%E5%88%86%E5%B8%83%E7%BB%93%E6%9E%9C%E6%AF%94%E8%BE%83%E8%A1%A8/"/>
    <id>http://blog.3gcnbeta.com/2012/09/01/各类语言的基准测试性能正太分布结果比较表/</id>
    <published>2012-08-31T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;原文:&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href=&quot;http://shootout.alioth.debian.org/u32/benchmark.php?test=all&amp;amp;lang=all&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://shootout.alioth.debian.org/u32/benchmark.php?test=all&amp;amp;lang=all&lt;/a&gt;&lt;br&gt;&lt;br&gt;这里节选了几个主流的开发语言.&lt;br&gt;&lt;br&gt;可以看出来,javascript在性能上超过了除java外的所有解释型语言.&lt;br&gt;&lt;br&gt;python与php所显示出来的性能基本一致.&lt;br&gt;&lt;br&gt;从图中可以看出来如果除去启动时间,php的执行时间比python要短&lt;br&gt;&lt;br&gt;我想这里可以将大家对语言速度的误区有一个比较清楚的整理.&lt;br&gt;&lt;br&gt;&lt;a href=&quot;http://shootout.alioth.debian.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://shootout.alioth.debian.org/&lt;/a&gt;&lt;br&gt;&lt;br&gt;下有不同的CPU下的各种语言的性能数据.&lt;/p&gt;&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td colspan=&quot;2&quot;&gt;&lt;input type=&quot;submit&quot; name=&quot;calc&quot; value=&quot;chart&quot;&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;colgroup span=&quot;2&quot;&gt;&lt;/colgroup&gt;&lt;br&gt;&lt;br&gt;&lt;colgroup span=&quot;1&quot;&gt;&lt;/colgroup&gt;&lt;br&gt;&lt;br&gt;&lt;colgroup span=&quot;1&quot;&gt;&lt;/colgroup&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;th&gt;&lt;/th&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;th&gt;compare&amp;nbsp;2&lt;/th&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;th&gt;&lt;a href=&quot;http://shootout.alioth.debian.org/u32/which-language-is-best.php#about&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GM&lt;/a&gt;&lt;/th&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;th&gt;&lt;a href=&quot;http://shootout.alioth.debian.org/u32/which-language-is-best.php#about&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;missing&lt;/a&gt;&lt;/th&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;gcc&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare C GNU gcc speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/c.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;C&lt;/strong&gt;&amp;nbsp;GNU gcc&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;1.32&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;gpp&quot; checked=&quot;checked&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare C++ GNU g++ speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/cpp.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;C++&lt;/strong&gt;&amp;nbsp;GNU g++&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;1.32&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;ifc&quot; checked=&quot;checked&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Fortran Intel speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/fortran.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Fortran&lt;/strong&gt;&amp;nbsp;Intel&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;1.38&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;3&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;gnat&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Ada 2005 GNAT speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/ada.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Ada&lt;/strong&gt;&amp;nbsp;2005&amp;nbsp;GNAT&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;1.46&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;ats&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare ATS speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/ats.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;ATS&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;1.60&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;java&quot; checked=&quot;checked&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Java 7 speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/java.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Java&lt;/strong&gt;&amp;nbsp;7&amp;nbsp;&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;1.91&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;scala&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Scala speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/scala.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Scala&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;2.26&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;fpascal&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Pascal Free Pascal speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/pascal.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Pascal&lt;/strong&gt;&amp;nbsp;Free&amp;nbsp;Pascal&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;2.46&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;2&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;ghc&quot; checked=&quot;checked&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Haskell GHC speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/haskell.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Haskell&lt;/strong&gt;&amp;nbsp;GHC&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;2.53&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;ocaml&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare OCaml speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/ocaml.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;OCaml&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;2.90&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;1&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;sbcl&quot; checked=&quot;checked&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Lisp SBCL speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/lisp.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Lisp&lt;/strong&gt;&amp;nbsp;SBCL&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;3.04&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;clean&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Clean speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/clean.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Clean&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;3.28&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;2&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;csharp&quot; checked=&quot;checked&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare C# Mono speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/csharp.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;C#&lt;/strong&gt;&amp;nbsp;Mono&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;3.53&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;fsharp&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare F# Mono speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/fsharp.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;F#&lt;/strong&gt;&amp;nbsp;Mono&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;4.75&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;1&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;racket&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Racket speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/racket.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Racket&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;4.76&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;go&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Go speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/compare.php?lang=go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Go&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;4.93&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;v8&quot; checked=&quot;checked&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare JavaScript V8 speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/javascript.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&amp;nbsp;V8&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;5.67&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;3&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;clojure&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Clojure speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/compare.php?lang=clojure&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Clojure&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;7.65&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;hipe&quot; checked=&quot;checked&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Erlang HiPE speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/erlang.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Erlang&lt;/strong&gt;&amp;nbsp;HiPE&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;12.10&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;vw&quot; checked=&quot;checked&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Smalltalk VisualWorks speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/smalltalk.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Smalltalk&lt;/strong&gt;&amp;nbsp;VisualWorks&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;19.09&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;php&quot; checked=&quot;checked&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare PHP speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/php.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;PHP&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;25.34&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;2&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;python3&quot; checked=&quot;checked&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Python 3 speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/python3.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Python&amp;nbsp;3&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;28.09&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;lua&quot; checked=&quot;checked&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Lua speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/lua.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Lua&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;29.44&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;1&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;perl&quot; checked=&quot;checked&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Perl speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/perl.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Perl&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;30.21&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;1&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;jruby&quot; checked=&quot;checked&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Ruby JRuby speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/jruby.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ruby&amp;nbsp;JRuby&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;30.31&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;yarv&quot; checked=&quot;checked&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Ruby 1.9 speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/ruby.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&amp;nbsp;1.9&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;35.48&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;oz&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare Mozart/Oz speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/oz.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Mozart/Oz&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;41.58&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;3&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;cint&quot;&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;&lt;a title=&quot;Compare C CINT speed and size against one other programming language&quot; href=&quot;http://shootout.alioth.debian.org/u32/compare.php?lang=cint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;C&lt;/strong&gt;&amp;nbsp;CINT&lt;/a&gt;&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;336.53&lt;/td&gt;&lt;p&gt;&lt;/p&gt;&lt;br&gt;&lt;td&gt;6&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;br&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;原文:&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href=&quot;http://shootout.alioth.debian.org/u32/benchmark.php?test=all&amp;amp;lang=all&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://s
    
    </summary>
    
      <category term="其它" scheme="http://blog.3gcnbeta.com/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>nodejs 下post代码</title>
    <link href="http://blog.3gcnbeta.com/2011/10/18/nodejs-%E4%B8%8Bpost%E4%BB%A3%E7%A0%81/"/>
    <id>http://blog.3gcnbeta.com/2011/10/18/nodejs-下post代码/</id>
    <published>2011-10-17T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;&lt;pre class=&quot;js&quot; name=&quot;code&quot;&gt;&lt;br&gt;    var options = {&lt;br&gt;&lt;br&gt;        host: ‘www.yourdomain.com’,&lt;br&gt;&lt;br&gt;        post: 80,&lt;br&gt;&lt;br&gt;        method: ‘POST’,&lt;br&gt;&lt;br&gt;        path: ‘/‘,&lt;br&gt;&lt;br&gt;        headers: {&lt;br&gt;&lt;br&gt;            ‘Content-Type’: ‘application/x-www-form-urlencoded’,&lt;br&gt;&lt;br&gt;            ‘Content-Length’: params.length&lt;br&gt;&lt;br&gt;        }&lt;br&gt;&lt;br&gt;    };&lt;/pre&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;    var request = http.request(options, function(response) {&lt;br&gt;&lt;br&gt;        response.setEncoding(‘utf8’);&lt;br&gt;&lt;br&gt;        response.on(‘data’, function(chunk) {&lt;br&gt;&lt;br&gt;            console.log(chunk);&lt;br&gt;&lt;br&gt;        });&lt;br&gt;&lt;br&gt;    });&lt;/p&gt;&lt;br&gt;&lt;p&gt; request.write(params);&lt;br&gt;&lt;br&gt; request.end();&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;pre class=&quot;js&quot; name=&quot;code&quot;&gt;&lt;br&gt;    var options = {&lt;br&gt;&lt;br&gt;        host: ‘www.yourdomain.com’,&lt;br&gt;&lt;br&gt;        post: 80,&lt;br&gt;&lt;br&gt;        me
    
    </summary>
    
      <category term="新闻" scheme="http://blog.3gcnbeta.com/categories/%E6%96%B0%E9%97%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 下批量替换的命令</title>
    <link href="http://blog.3gcnbeta.com/2011/10/18/linux-%E4%B8%8B%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2%E7%9A%84%E5%91%BD%E4%BB%A4/"/>
    <id>http://blog.3gcnbeta.com/2011/10/18/linux-下批量替换的命令/</id>
    <published>2011-10-17T16:00:00.000Z</published>
    <updated>2016-03-31T03:42:36.934Z</updated>
    
    <content type="html">&lt;p&gt;将下面的代码放到一个shell文件a.sh里，&lt;/p&gt;&lt;br&gt;&lt;p&gt;sed -i “s/$2/$3/g” &lt;code&gt;grep -rl $2 $1&lt;/code&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;然后执行:&lt;br&gt;&lt;br&gt;sh a.sh path param1 param2&lt;/p&gt;&lt;br&gt;&lt;p&gt;path是路径名,&lt;br&gt;&lt;br&gt;param1是要替换的内容&lt;br&gt;&lt;br&gt;param2是替换后的内容&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;将下面的代码放到一个shell文件a.sh里，&lt;/p&gt;&lt;br&gt;&lt;p&gt;sed -i “s/$2/$3/g” &lt;code&gt;grep -rl $2 $1&lt;/code&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;然后执行:&lt;br&gt;&lt;br&gt;sh a.sh path param1 param2&lt;/p&gt;&lt;br
    
    </summary>
    
      <category term="Shell" scheme="http://blog.3gcnbeta.com/categories/Shell/"/>
    
    
  </entry>
  
</feed>
